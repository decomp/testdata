; ModuleID = 'coreutils-8.27/src/sha224sum.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.sha256_ctx = type { [8 x i32], [2 x i32], i64, [32 x i32] }
%struct.__mbstate_t = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"Usage: %s [OPTION]... [FILE]...\0APrint or check %s (%d-bit) checksums.\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"SHA224\00", align 1
@.str.34 = private unnamed_addr constant [56 x i8] c"\0AWith no FILE, or when FILE is -, read standard input.\0A\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [45 x i8] c"\0A  -b, --binary         read in binary mode\0A\00", align 1
@.str.4 = private unnamed_addr constant [67 x i8] c"  -c, --check          read %s sums from the FILEs and check them\0A\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"      --tag            create a BSD-style checksum\0A\00", align 1
@.str.6 = private unnamed_addr constant [52 x i8] c"  -t, --text           read in text mode (default)\0A\00", align 1
@.str.7 = private unnamed_addr constant [435 x i8] c"\0AThe following five options are useful only when verifying checksums:\0A      --ignore-missing  don't fail or report status for missing files\0A      --quiet          don't print OK for each successfully verified file\0A      --status         don't output anything, status code shows success\0A      --strict         exit non-zero for improperly formatted checksum lines\0A  -w, --warn           warn about improperly formatted checksum lines\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.10 = private unnamed_addr constant [297 x i8] c"\0AThe sums are computed as described in %s.  When checking, the input\0Ashould be a former output of this program.  The default mode is to print a\0Aline with checksum, a space, a character indicating input mode ('*' for binary,\0A' ' for text or where binary is insignificant), and name for each FILE.\0A\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"RFC 3874\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.43 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.45 = private unnamed_addr constant [69 x i8] c"Report %s translation bugs to <http://translationproject.org/team/>\0A\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c"Full documentation at: <%s%s>\0A\00", align 1
@.str.47 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"bctw\00", align 1
@long_options = internal constant [12 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 130 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 0, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 119 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 131 }, %struct.option { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i32 0, i32 0), i32 0, i32* null, i32 132 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !0
@status_only = internal unnamed_addr global i1 false, align 1
@warn = internal unnamed_addr global i1 false, align 1
@quiet = internal unnamed_addr global i1 false, align 1
@ignore_missing = internal unnamed_addr global i1 false, align 1
@strict = internal unnamed_addr global i1 false, align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"Ulrich Drepper\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Scott Miller\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"David Madore\00", align 1
@min_digest_line_length = internal unnamed_addr global i1 false, align 8
@digest_hex_bytes = internal unnamed_addr global i1 false, align 8
@.str.21 = private unnamed_addr constant [35 x i8] c"--tag does not support --text mode\00", align 1
@.str.22 = private unnamed_addr constant [57 x i8] c"the --tag option is meaningless when verifying checksums\00", align 1
@.str.23 = private unnamed_addr constant [73 x i8] c"the --binary and --text options are meaningless when verifying checksums\00", align 1
@.str.24 = private unnamed_addr constant [72 x i8] c"the --ignore-missing option is meaningful only when verifying checksums\00", align 1
@.str.25 = private unnamed_addr constant [64 x i8] c"the --status option is meaningful only when verifying checksums\00", align 1
@.str.26 = private unnamed_addr constant [62 x i8] c"the --warn option is meaningful only when verifying checksums\00", align 1
@.str.27 = private unnamed_addr constant [63 x i8] c"the --quiet option is meaningful only when verifying checksums\00", align 1
@.str.28 = private unnamed_addr constant [64 x i8] c"the --strict option is meaningful only when verifying checksums\00", align 1
@optind = external local_unnamed_addr global i32, align 4
@.str.29 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@have_read_stdin = internal unnamed_addr global i1 false, align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"standard input\00", align 1
@stdin = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.60 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.62 = private unnamed_addr constant [28 x i8] c"%s: too many checksum lines\00", align 1
@bsd_reversed = internal unnamed_addr global i32 -1, align 4, !dbg !238
@.str.63 = private unnamed_addr constant [47 x i8] c"%s: %lu: improperly formatted %s checksum line\00", align 1
@.str.65 = private unnamed_addr constant [20 x i8] c"FAILED open or read\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c": %s\0A\00", align 1
@digest_check.bin2hex = internal unnamed_addr constant [16 x i8] c"0123456789abcdef", align 16, !dbg !120
@.str.66 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.67 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@.str.69 = private unnamed_addr constant [50 x i8] c"%s: no properly formatted %s checksum lines found\00", align 1
@.str.70 = private unnamed_addr constant [42 x i8] c"WARNING: %lu line is improperly formatted\00", align 1
@.str.71 = private unnamed_addr constant [44 x i8] c"WARNING: %lu lines are improperly formatted\00", align 1
@.str.72 = private unnamed_addr constant [43 x i8] c"WARNING: %lu listed file could not be read\00", align 1
@.str.73 = private unnamed_addr constant [44 x i8] c"WARNING: %lu listed files could not be read\00", align 1
@.str.74 = private unnamed_addr constant [45 x i8] c"WARNING: %lu computed checksum did NOT match\00", align 1
@.str.75 = private unnamed_addr constant [46 x i8] c"WARNING: %lu computed checksums did NOT match\00", align 1
@.str.76 = private unnamed_addr constant [25 x i8] c"%s: no file was verified\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c") = \00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.77 = private unnamed_addr constant [3 x i8] c"\5Cn\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"\5C\5C\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"ignore-missing\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"quiet\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"warn\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"tag\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@Version = local_unnamed_addr global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), align 8, !dbg !252
@.str.35 = private unnamed_addr constant [5 x i8] c"8.27\00", align 1
@file_name = internal unnamed_addr global i8* null, align 8, !dbg !258
@ignore_EPIPE = internal unnamed_addr global i8 0, align 1, !dbg !263
@.str.39 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.40 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.41 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@fillbuf = internal unnamed_addr constant [64 x i8] c"\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16, !dbg !266
@exit_failure = global i32 1, align 4, !dbg !282
@program_name = local_unnamed_addr global i8* null, align 8, !dbg !289
@.str.79 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.80 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.81 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external local_unnamed_addr global i8*, align 8
@program_invocation_name = external local_unnamed_addr global i8*, align 8
@quoting_style_args = local_unnamed_addr constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.83, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.84, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.85, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.86, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.87, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.88, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.89, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.90, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.91, i32 0, i32 0), i8* null], align 16, !dbg !296
@.str.82 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.83 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.84 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.85 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.86 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.87 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.88 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.89 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.90 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.91 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = local_unnamed_addr constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !308
@quote_quoting_options = global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !315
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !327
@.str.11.92 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.93 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.10.94 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.14.95 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.96 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.17.97 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.98 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal unnamed_addr global %struct.slotvec* @slotvec0, align 8, !dbg !334
@nslots = internal unnamed_addr global i32 1, align 4, !dbg !341
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !329
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !343
@.str.105 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.106 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.107 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.108 = private unnamed_addr constant [203 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.109 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.110 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.111 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.112 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.113 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.114 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.115 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.116 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.117 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.118 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.121 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.122 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.123 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.124 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.125 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 1
@.str.19.126 = private unnamed_addr constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !349
@.str.1.137 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@rpl_fcntl.have_dupfd_cloexec = internal unnamed_addr global i32 0, align 4, !dbg !358
@.str.1.155 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.158 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@charset_aliases = internal global i8* null, align 8, !dbg !393
@.str.3.159 = private unnamed_addr constant [16 x i8] c"CHARSETALIASDIR\00", align 1
@.str.4.160 = private unnamed_addr constant [15 x i8] c"/usr/local/lib\00", align 1
@.str.2.161 = private unnamed_addr constant [14 x i8] c"charset.alias\00", align 1
@.str.5.162 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.6.163 = private unnamed_addr constant [10 x i8] c"%50s %50s\00", align 1
@.str.1.164 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1

; Function Attrs: noreturn nounwind sspstrong uwtable
define void @usage(i32) local_unnamed_addr #0 !dbg !795 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !799, metadata !800), !dbg !801
  %2 = icmp eq i32 %0, 0, !dbg !802
  br i1 %2, label %8, label %3, !dbg !804

; <label>:3:                                      ; preds = %1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !805, !tbaa !808
  %5 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 5) #10, !dbg !805
  %6 = load i8*, i8** @program_name, align 8, !dbg !805, !tbaa !808
  %7 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %4, i32 1, i8* %5, i8* %6) #10, !dbg !812
  br label %52, !dbg !814

; <label>:8:                                      ; preds = %1
  %9 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 5) #10, !dbg !816
  %10 = load i8*, i8** @program_name, align 8, !dbg !816, !tbaa !808
  %11 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %9, i8* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 224) #10, !dbg !818
  %12 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.34, i64 0, i64 0), i32 5) #10, !dbg !820
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !820, !tbaa !808
  %14 = tail call i32 @fputs_unlocked(i8* %12, %struct._IO_FILE* %13) #10, !dbg !825
  %15 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 5) #10, !dbg !827
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !827, !tbaa !808
  %17 = tail call i32 @fputs_unlocked(i8* %15, %struct._IO_FILE* %16) #10, !dbg !829
  %18 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4, i64 0, i64 0), i32 5) #10, !dbg !831
  %19 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !832
  %20 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), i32 5) #10, !dbg !833
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !833, !tbaa !808
  %22 = tail call i32 @fputs_unlocked(i8* %20, %struct._IO_FILE* %21) #10, !dbg !834
  %23 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6, i64 0, i64 0), i32 5) #10, !dbg !835
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !835, !tbaa !808
  %25 = tail call i32 @fputs_unlocked(i8* %23, %struct._IO_FILE* %24) #10, !dbg !837
  %26 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([435 x i8], [435 x i8]* @.str.7, i64 0, i64 0), i32 5) #10, !dbg !839
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !839, !tbaa !808
  %28 = tail call i32 @fputs_unlocked(i8* %26, %struct._IO_FILE* %27) #10, !dbg !840
  %29 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0), i32 5) #10, !dbg !841
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !841, !tbaa !808
  %31 = tail call i32 @fputs_unlocked(i8* %29, %struct._IO_FILE* %30) #10, !dbg !842
  %32 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0), i32 5) #10, !dbg !843
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !843, !tbaa !808
  %34 = tail call i32 @fputs_unlocked(i8* %32, %struct._IO_FILE* %33) #10, !dbg !844
  %35 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([297 x i8], [297 x i8]* @.str.10, i64 0, i64 0), i32 5) #10, !dbg !845
  %36 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !846
  tail call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0), i64 0, metadata !88, metadata !800) #10, !dbg !847
  %37 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0), i32 5) #10, !dbg !849
  %38 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %37, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.43, i64 0, i64 0)) #10, !dbg !850
  %39 = tail call i8* @setlocale(i32 5, i8* null) #10, !dbg !852
  tail call void @llvm.dbg.value(metadata i8* %39, i64 0, metadata !99, metadata !800) #10, !dbg !853
  %40 = icmp eq i8* %39, null, !dbg !854
  br i1 %40, label %47, label %41, !dbg !855

; <label>:41:                                     ; preds = %8
  %42 = tail call i32 @strncmp(i8* nonnull %39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3) #13, !dbg !856
  %43 = icmp eq i32 %42, 0, !dbg !856
  br i1 %43, label %47, label %44, !dbg !858

; <label>:44:                                     ; preds = %41
  %45 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.45, i64 0, i64 0), i32 5) #10, !dbg !860
  %46 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %45, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !862
  br label %47, !dbg !864

; <label>:47:                                     ; preds = %8, %41, %44
  %48 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i64 0, i64 0), i32 5) #10, !dbg !865
  %49 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %48, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !866
  %50 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.47, i64 0, i64 0), i32 5) #10, !dbg !867
  %51 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %50, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !868
  br label %52

; <label>:52:                                     ; preds = %47, %3
  tail call void @exit(i32 %0) #14, !dbg !869
  unreachable, !dbg !869
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

; Function Attrs: nounwind
declare i8* @dcgettext(i8*, i8*, i32) local_unnamed_addr #2

declare i32 @__fprintf_chk(%struct._IO_FILE*, i32, i8*, ...) local_unnamed_addr #3

declare i32 @__printf_chk(i32, i8*, ...) local_unnamed_addr #3

declare i32 @fputs_unlocked(i8*, %struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i8* @setlocale(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #5

; Function Attrs: nounwind sspstrong uwtable
define i32 @main(i32, i8**) local_unnamed_addr #6 !dbg !870 {
  %3 = alloca [32 x i8], align 16
  tail call void @llvm.dbg.declare(metadata [32 x i8]* %3, metadata !188, metadata !800), !dbg !899
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8, align 1
  %7 = alloca [32 x i8], align 16
  %8 = alloca i8, align 1
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !875, metadata !800), !dbg !901
  tail call void @llvm.dbg.value(metadata i8** %1, i64 0, metadata !876, metadata !800), !dbg !902
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0, !dbg !903
  call void @llvm.lifetime.start(i64 32, i8* nonnull %9) #10, !dbg !903
  tail call void @llvm.dbg.declare(metadata [32 x i8]* %7, metadata !877, metadata !800), !dbg !904
  tail call void @llvm.dbg.value(metadata i64 4, i64 0, metadata !905, metadata !800), !dbg !913
  %10 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 3, !dbg !915
  tail call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !912, metadata !800), !dbg !916
  %11 = ptrtoint i8* %10 to i64, !dbg !917
  %12 = and i64 %11, 3, !dbg !918
  %13 = sub nsw i64 0, %12, !dbg !919
  %14 = getelementptr inbounds i8, i8* %10, i64 %13, !dbg !919
  call void @llvm.dbg.value(metadata i8* %14, i64 0, metadata !878, metadata !800), !dbg !920
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !879, metadata !800), !dbg !921
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !881, metadata !800), !dbg !922
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !882, metadata !800), !dbg !923
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !883, metadata !800), !dbg !924
  %15 = load i8*, i8** %1, align 8, !dbg !925, !tbaa !808
  call void @set_program_name(i8* %15) #10, !dbg !926
  %16 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !927
  %17 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !928
  %18 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !929
  %19 = call i32 @atexit(void ()* nonnull @close_stdout) #10, !dbg !930
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !931, !tbaa !808
  %21 = call i32 @setvbuf(%struct._IO_FILE* %20, i8* null, i32 1, i64 0) #10, !dbg !932
  br label %22, !dbg !933

; <label>:22:                                     ; preds = %35, %2
  %23 = phi i32 [ -1, %2 ], [ %36, %35 ]
  %24 = phi i8 [ 0, %2 ], [ %37, %35 ]
  %25 = phi i8 [ 0, %2 ], [ %38, %35 ]
  call void @llvm.dbg.value(metadata i8 %25, i64 0, metadata !879, metadata !800), !dbg !921
  call void @llvm.dbg.value(metadata i8 %24, i64 0, metadata !883, metadata !800), !dbg !924
  call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !882, metadata !800), !dbg !923
  %26 = call i32 @getopt_long(i32 %0, i8** %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), %struct.option* getelementptr inbounds ([12 x %struct.option], [12 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #10, !dbg !934
  call void @llvm.dbg.value(metadata i32 %26, i64 0, metadata !880, metadata !800), !dbg !936
  switch i32 %26, label %43 [
    i32 -1, label %44
    i32 98, label %35
    i32 99, label %27
    i32 129, label %28
    i32 116, label %29
    i32 119, label %30
    i32 128, label %31
    i32 130, label %32
    i32 131, label %33
    i32 132, label %34
    i32 -130, label %39
    i32 -131, label %40
  ], !dbg !937

; <label>:27:                                     ; preds = %22
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !879, metadata !800), !dbg !921
  br label %35, !dbg !938

; <label>:28:                                     ; preds = %22
  store i1 true, i1* @status_only, align 1
  store i1 false, i1* @warn, align 1
  store i1 false, i1* @quiet, align 1
  br label %35, !dbg !940

; <label>:29:                                     ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !882, metadata !800), !dbg !923
  br label %35, !dbg !941

; <label>:30:                                     ; preds = %22
  store i1 false, i1* @status_only, align 1
  store i1 true, i1* @warn, align 1
  store i1 false, i1* @quiet, align 1
  br label %35, !dbg !942

; <label>:31:                                     ; preds = %22
  store i1 true, i1* @ignore_missing, align 1
  br label %35, !dbg !943

; <label>:32:                                     ; preds = %22
  store i1 false, i1* @status_only, align 1
  store i1 false, i1* @warn, align 1
  store i1 true, i1* @quiet, align 1
  br label %35, !dbg !944

; <label>:33:                                     ; preds = %22
  store i1 true, i1* @strict, align 1
  br label %35, !dbg !945

; <label>:34:                                     ; preds = %22
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !883, metadata !800), !dbg !924
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !882, metadata !800), !dbg !923
  br label %35, !dbg !946

; <label>:35:                                     ; preds = %34, %33, %32, %31, %30, %29, %28, %27, %22
  %36 = phi i32 [ 1, %34 ], [ %23, %33 ], [ %23, %32 ], [ %23, %31 ], [ %23, %30 ], [ 0, %29 ], [ %23, %28 ], [ %23, %27 ], [ 1, %22 ]
  %37 = phi i8 [ 1, %34 ], [ %24, %33 ], [ %24, %32 ], [ %24, %31 ], [ %24, %30 ], [ %24, %29 ], [ %24, %28 ], [ %24, %27 ], [ %24, %22 ]
  %38 = phi i8 [ %25, %34 ], [ %25, %33 ], [ %25, %32 ], [ %25, %31 ], [ %25, %30 ], [ %25, %29 ], [ %25, %28 ], [ 1, %27 ], [ %25, %22 ]
  br label %22, !dbg !921, !llvm.loop !947

; <label>:39:                                     ; preds = %22
  call void @usage(i32 0) #15, !dbg !949
  unreachable, !dbg !949

; <label>:40:                                     ; preds = %22
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !950, !tbaa !808
  %42 = load i8*, i8** @Version, align 8, !dbg !950, !tbaa !808
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* %42, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8* null) #10, !dbg !950
  call void @exit(i32 0) #14, !dbg !951
  unreachable, !dbg !950

; <label>:43:                                     ; preds = %22
  call void @usage(i32 1) #15, !dbg !953
  unreachable, !dbg !953

; <label>:44:                                     ; preds = %22
  store i1 true, i1* @min_digest_line_length, align 8
  store i1 true, i1* @digest_hex_bytes, align 8
  %45 = icmp ne i8 %24, 0, !dbg !954
  %46 = xor i1 %45, true, !dbg !956
  %47 = icmp ne i32 %23, 0, !dbg !957
  %48 = or i1 %47, %46, !dbg !956
  br i1 %48, label %51, label %49, !dbg !956

; <label>:49:                                     ; preds = %44
  %50 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i64 0, i64 0), i32 5) #10, !dbg !959
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %50) #10, !dbg !961
  call void @usage(i32 1) #15, !dbg !963
  unreachable, !dbg !963

; <label>:51:                                     ; preds = %44
  %52 = icmp eq i8 %25, 0, !dbg !964
  %53 = or i1 %52, %46, !dbg !967
  br i1 %53, label %56, label %54, !dbg !967

; <label>:54:                                     ; preds = %51
  %55 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.22, i64 0, i64 0), i32 5) #10, !dbg !968
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %55) #10, !dbg !970
  call void @usage(i32 1) #15, !dbg !972
  unreachable, !dbg !972

; <label>:56:                                     ; preds = %51
  %57 = icmp slt i32 %23, 0, !dbg !973
  %58 = or i1 %57, %52, !dbg !975
  br i1 %58, label %61, label %59, !dbg !975

; <label>:59:                                     ; preds = %56
  %60 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.23, i64 0, i64 0), i32 5) #10, !dbg !976
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %60) #10, !dbg !978
  call void @usage(i32 1) #15, !dbg !980
  unreachable, !dbg !980

; <label>:61:                                     ; preds = %56
  %62 = load i1, i1* @ignore_missing, align 1
  %63 = and i1 %52, %62, !dbg !981
  br i1 %63, label %64, label %66, !dbg !981

; <label>:64:                                     ; preds = %61
  %65 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.24, i64 0, i64 0), i32 5) #10, !dbg !983
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %65) #10, !dbg !985
  call void @usage(i32 1) #15, !dbg !986
  unreachable, !dbg !986

; <label>:66:                                     ; preds = %61
  %67 = load i1, i1* @status_only, align 1
  %68 = and i1 %52, %67, !dbg !987
  br i1 %68, label %69, label %71, !dbg !987

; <label>:69:                                     ; preds = %66
  %70 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.25, i64 0, i64 0), i32 5) #10, !dbg !989
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %70) #10, !dbg !991
  call void @usage(i32 1) #15, !dbg !992
  unreachable, !dbg !992

; <label>:71:                                     ; preds = %66
  %72 = load i1, i1* @warn, align 1
  %73 = and i1 %52, %72, !dbg !993
  br i1 %73, label %74, label %76, !dbg !993

; <label>:74:                                     ; preds = %71
  %75 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.26, i64 0, i64 0), i32 5) #10, !dbg !995
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %75) #10, !dbg !997
  call void @usage(i32 1) #15, !dbg !998
  unreachable, !dbg !998

; <label>:76:                                     ; preds = %71
  %77 = load i1, i1* @quiet, align 1
  %78 = and i1 %52, %77, !dbg !999
  br i1 %78, label %79, label %81, !dbg !999

; <label>:79:                                     ; preds = %76
  %80 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.27, i64 0, i64 0), i32 5) #10, !dbg !1001
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %80) #10, !dbg !1003
  call void @usage(i32 1) #15, !dbg !1004
  unreachable, !dbg !1004

; <label>:81:                                     ; preds = %76
  %82 = load i1, i1* @strict, align 1
  %83 = icmp ne i8 %25, 0, !dbg !1005
  %84 = xor i1 %83, true, !dbg !1007
  %85 = and i1 %82, %84, !dbg !1008
  br i1 %85, label %86, label %88, !dbg !1009

; <label>:86:                                     ; preds = %81
  %87 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.28, i64 0, i64 0), i32 5) #10, !dbg !1010
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %87) #10, !dbg !1012
  call void @usage(i32 1) #15, !dbg !1013
  unreachable, !dbg !1013

; <label>:88:                                     ; preds = %81
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !882, metadata !800), !dbg !923
  %89 = icmp sgt i32 %23, 0, !dbg !1014
  %90 = sext i32 %0 to i64, !dbg !1015
  %91 = getelementptr inbounds i8*, i8** %1, i64 %90, !dbg !1015
  call void @llvm.dbg.value(metadata i8** %91, i64 0, metadata !885, metadata !800), !dbg !1016
  %92 = load i32, i32* @optind, align 4, !dbg !1017, !tbaa !1019
  %93 = icmp eq i32 %92, %0, !dbg !1021
  br i1 %93, label %94, label %96, !dbg !1022

; <label>:94:                                     ; preds = %88
  %95 = getelementptr inbounds i8*, i8** %91, i64 1, !dbg !1023
  call void @llvm.dbg.value(metadata i8** %95, i64 0, metadata !885, metadata !800), !dbg !1016
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i8** %91, align 8, !dbg !1024, !tbaa !808
  br label %96, !dbg !1025

; <label>:96:                                     ; preds = %94, %88
  %97 = phi i8** [ %95, %94 ], [ %91, %88 ]
  call void @llvm.dbg.value(metadata i8** %97, i64 0, metadata !885, metadata !800), !dbg !1016
  %98 = sext i32 %92 to i64, !dbg !1026
  %99 = getelementptr inbounds i8*, i8** %1, i64 %98, !dbg !1026
  call void @llvm.dbg.value(metadata i8** %99, i64 0, metadata !886, metadata !800), !dbg !1027
  call void @llvm.dbg.value(metadata i8** %99, i64 0, metadata !886, metadata !800), !dbg !1027
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !881, metadata !800), !dbg !922
  %100 = icmp ult i8** %99, %97, !dbg !1028
  br i1 %100, label %101, label %113, !dbg !1030

; <label>:101:                                    ; preds = %96
  %102 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 0
  %103 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 3
  %104 = ptrtoint i8* %103 to i64
  %105 = and i64 %104, 3
  %106 = sub nsw i64 0, %105
  %107 = getelementptr inbounds i8, i8* %103, i64 %106
  %108 = bitcast i8** %4 to i8*
  %109 = bitcast i64* %5 to i8*
  %110 = select i1 %89, i32 42, i32 32
  %111 = trunc i32 %110 to i8
  br label %116, !dbg !1030

; <label>:112:                                    ; preds = %655
  br label %113

; <label>:113:                                    ; preds = %112, %96
  %114 = phi i8 [ 1, %96 ], [ %656, %112 ]
  %115 = load i1, i1* @have_read_stdin, align 1
  br i1 %115, label %659, label %667, !dbg !1032

; <label>:116:                                    ; preds = %101, %655
  %117 = phi i8** [ %99, %101 ], [ %657, %655 ]
  %118 = phi i8 [ 1, %101 ], [ %656, %655 ]
  %119 = load i8*, i8** %117, align 8, !dbg !1034, !tbaa !808
  call void @llvm.dbg.value(metadata i8* %119, i64 0, metadata !888, metadata !800), !dbg !1035
  br i1 %83, label %120, label %563, !dbg !1036

; <label>:120:                                    ; preds = %116
  call void @llvm.dbg.value(metadata i8* %119, i64 0, metadata !126, metadata !800) #10, !dbg !1037
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !182, metadata !800) #10, !dbg !1038
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !183, metadata !800) #10, !dbg !1039
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !184, metadata !800) #10, !dbg !1040
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !185, metadata !800) #10, !dbg !1041
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !186, metadata !800) #10, !dbg !1042
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !187, metadata !800) #10, !dbg !1043
  call void @llvm.lifetime.start(i64 32, i8* nonnull %102) #10, !dbg !1044
  call void @llvm.dbg.value(metadata i64 4, i64 0, metadata !905, metadata !800) #10, !dbg !1045
  call void @llvm.dbg.value(metadata i8* %103, i64 0, metadata !912, metadata !800) #10, !dbg !1047
  call void @llvm.dbg.value(metadata i8* %107, i64 0, metadata !192, metadata !800) #10, !dbg !1048
  call void @llvm.lifetime.start(i64 8, i8* nonnull %108) #10, !dbg !1049
  call void @llvm.lifetime.start(i64 8, i8* nonnull %109) #10, !dbg !1050
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !199, metadata !800) #10, !dbg !1051
  call void @llvm.dbg.value(metadata i8* %119, i64 0, metadata !200, metadata !800) #10, !dbg !1052
  %121 = load i8, i8* %119, align 1, !dbg !1053, !tbaa !1055
  %122 = icmp eq i8 %121, 45, !dbg !1056
  br i1 %122, label %123, label %130, !dbg !1059

; <label>:123:                                    ; preds = %120
  %124 = getelementptr inbounds i8, i8* %119, i64 1, !dbg !1061
  %125 = load i8, i8* %124, align 1, !dbg !1061, !tbaa !1055
  %126 = icmp eq i8 %125, 0, !dbg !1064
  br i1 %126, label %127, label %130, !dbg !1066

; <label>:127:                                    ; preds = %123
  store i1 true, i1* @have_read_stdin, align 1
  %128 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0), i32 5) #10, !dbg !1067
  call void @llvm.dbg.value(metadata i8* %128, i64 0, metadata !126, metadata !800) #10, !dbg !1037
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1070, !tbaa !808
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %129, i64 0, metadata !127, metadata !800) #10, !dbg !1071
  br label %137, !dbg !1072

; <label>:130:                                    ; preds = %123, %120
  %131 = call %struct._IO_FILE* @fopen_safer(i8* nonnull %119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1073
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %131, i64 0, metadata !127, metadata !800) #10, !dbg !1071
  %132 = icmp eq %struct._IO_FILE* %131, null, !dbg !1075
  br i1 %132, label %133, label %137, !dbg !1077

; <label>:133:                                    ; preds = %130
  %134 = tail call i32* @__errno_location() #1, !dbg !1078
  %135 = load i32, i32* %134, align 4, !dbg !1078, !tbaa !1019
  %136 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* nonnull %119) #10, !dbg !1080
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %135, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), i8* %136) #10, !dbg !1082
  br label %559, !dbg !1084

; <label>:137:                                    ; preds = %130, %127
  %138 = phi i1 [ true, %127 ], [ false, %130 ]
  %139 = phi %struct._IO_FILE* [ %129, %127 ], [ %131, %130 ]
  %140 = phi i8* [ %128, %127 ], [ %119, %130 ]
  call void @llvm.dbg.value(metadata i8* %140, i64 0, metadata !126, metadata !800) #10, !dbg !1037
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %139, i64 0, metadata !127, metadata !800) #10, !dbg !1071
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !193, metadata !800) #10, !dbg !1085
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !194, metadata !800) #10, !dbg !1086
  store i8* null, i8** %4, align 8, !dbg !1087, !tbaa !808
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !195, metadata !800) #10, !dbg !1088
  store i64 0, i64* %5, align 8, !dbg !1089, !tbaa !1090
  %141 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %139, i64 0, i32 0
  br label %142, !dbg !1092, !llvm.loop !1093

; <label>:142:                                    ; preds = %486, %137
  %143 = phi i64 [ 0, %137 ], [ %150, %486 ]
  %144 = phi i8 [ 0, %137 ], [ %487, %486 ]
  %145 = phi i8 [ 0, %137 ], [ %488, %486 ]
  %146 = phi i64 [ 0, %137 ], [ %489, %486 ]
  %147 = phi i64 [ 0, %137 ], [ %490, %486 ]
  %148 = phi i64 [ 0, %137 ], [ %491, %486 ]
  %149 = phi i64 [ 0, %137 ], [ %492, %486 ]
  call void @llvm.dbg.value(metadata i64 %149, i64 0, metadata !182, metadata !800) #10, !dbg !1038
  call void @llvm.dbg.value(metadata i64 %148, i64 0, metadata !183, metadata !800) #10, !dbg !1039
  call void @llvm.dbg.value(metadata i64 %147, i64 0, metadata !184, metadata !800) #10, !dbg !1040
  call void @llvm.dbg.value(metadata i64 %146, i64 0, metadata !185, metadata !800) #10, !dbg !1041
  call void @llvm.dbg.value(metadata i8 %145, i64 0, metadata !186, metadata !800) #10, !dbg !1042
  call void @llvm.dbg.value(metadata i8 %144, i64 0, metadata !187, metadata !800) #10, !dbg !1043
  call void @llvm.dbg.value(metadata i64 %143, i64 0, metadata !193, metadata !800) #10, !dbg !1085
  %150 = add i64 %143, 1, !dbg !1096
  call void @llvm.dbg.value(metadata i64 %150, i64 0, metadata !193, metadata !800) #10, !dbg !1085
  %151 = icmp eq i64 %150, 0, !dbg !1097
  br i1 %151, label %152, label %155, !dbg !1099

; <label>:152:                                    ; preds = %142
  %153 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.62, i64 0, i64 0), i32 5) #10, !dbg !1100
  %154 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %140) #10, !dbg !1101
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %153, i8* %154) #10, !dbg !1103
  unreachable, !dbg !1100

; <label>:155:                                    ; preds = %142
  call void @llvm.dbg.value(metadata i8** %4, i64 0, metadata !194, metadata !1105) #10, !dbg !1086
  call void @llvm.dbg.value(metadata i64* %5, i64 0, metadata !195, metadata !1105) #10, !dbg !1088
  call void @llvm.dbg.value(metadata i8** %4, i64 0, metadata !1106, metadata !800) #10, !dbg !1114
  call void @llvm.dbg.value(metadata i64* %5, i64 0, metadata !1112, metadata !800) #10, !dbg !1116
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %139, i64 0, metadata !1113, metadata !800) #10, !dbg !1117
  %156 = call i64 @__getdelim(i8** nonnull %4, i64* nonnull %5, i32 10, %struct._IO_FILE* %139) #10, !dbg !1118
  call void @llvm.dbg.value(metadata i64 %156, i64 0, metadata !207, metadata !800) #10, !dbg !1119
  %157 = icmp slt i64 %156, 1, !dbg !1120
  br i1 %157, label %496, label %158, !dbg !1122

; <label>:158:                                    ; preds = %155
  %159 = load i8*, i8** %4, align 8, !dbg !1123, !tbaa !808
  call void @llvm.dbg.value(metadata i8* %159, i64 0, metadata !194, metadata !800) #10, !dbg !1086
  %160 = load i8, i8* %159, align 1, !dbg !1123, !tbaa !1055
  %161 = icmp eq i8 %160, 35, !dbg !1125
  br i1 %161, label %486, label %162, !dbg !1126

; <label>:162:                                    ; preds = %158
  %163 = add nsw i64 %156, -1, !dbg !1127
  %164 = getelementptr inbounds i8, i8* %159, i64 %163, !dbg !1129
  %165 = load i8, i8* %164, align 1, !dbg !1129, !tbaa !1055
  %166 = icmp eq i8 %165, 10, !dbg !1130
  br i1 %166, label %167, label %169, !dbg !1131

; <label>:167:                                    ; preds = %162
  call void @llvm.dbg.value(metadata i64 %163, i64 0, metadata !207, metadata !800) #10, !dbg !1119
  store i8 0, i8* %164, align 1, !dbg !1132, !tbaa !1055
  %168 = load i8*, i8** %4, align 8, !tbaa !808
  br label %169, !dbg !1133

; <label>:169:                                    ; preds = %167, %162
  %170 = phi i8* [ %168, %167 ], [ %159, %162 ], !dbg !1134
  %171 = phi i64 [ %163, %167 ], [ %156, %162 ]
  call void @llvm.dbg.value(metadata i64 %171, i64 0, metadata !207, metadata !800) #10, !dbg !1119
  call void @llvm.dbg.value(metadata i8* %170, i64 0, metadata !194, metadata !800) #10, !dbg !1086
  call void @llvm.dbg.value(metadata i8* %170, i64 0, metadata !1135, metadata !800) #10, !dbg !1148
  call void @llvm.dbg.value(metadata i64 %171, i64 0, metadata !1141, metadata !800) #10, !dbg !1150
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !1145, metadata !800) #10, !dbg !1151
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  br label %172, !dbg !1153

; <label>:172:                                    ; preds = %176, %169
  %173 = phi i64 [ 0, %169 ], [ %177, %176 ]
  call void @llvm.dbg.value(metadata i64 %173, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  %174 = getelementptr inbounds i8, i8* %170, i64 %173, !dbg !1154
  %175 = load i8, i8* %174, align 1, !dbg !1154, !tbaa !1055
  switch i8 %175, label %180 [
    i8 32, label %176
    i8 9, label %176
    i8 92, label %178
  ], !dbg !1154

; <label>:176:                                    ; preds = %172, %172
  %177 = add i64 %173, 1, !dbg !1156
  call void @llvm.dbg.value(metadata i64 %177, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  br label %172, !dbg !1157, !llvm.loop !1159

; <label>:178:                                    ; preds = %172
  %179 = add i64 %173, 1, !dbg !1162
  call void @llvm.dbg.value(metadata i64 %179, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !1145, metadata !800) #10, !dbg !1151
  br label %181, !dbg !1165

; <label>:180:                                    ; preds = %172
  br label %181, !dbg !1152

; <label>:181:                                    ; preds = %180, %178
  %182 = phi i1 [ true, %178 ], [ false, %180 ]
  %183 = phi i64 [ %179, %178 ], [ %173, %180 ]
  call void @llvm.dbg.value(metadata i64 %183, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  call void @llvm.dbg.value(metadata i64 6, i64 0, metadata !1146, metadata !800) #10, !dbg !1166
  %184 = getelementptr inbounds i8, i8* %170, i64 %183, !dbg !1167
  %185 = call i32 @strncmp(i8* %184, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #13, !dbg !1167
  %186 = icmp eq i32 %185, 0, !dbg !1167
  br i1 %186, label %187, label %261, !dbg !1169

; <label>:187:                                    ; preds = %181
  %188 = add i64 %183, 6, !dbg !1170
  call void @llvm.dbg.value(metadata i64 %188, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  %189 = getelementptr inbounds i8, i8* %170, i64 %188, !dbg !1172
  %190 = load i8, i8* %189, align 1, !dbg !1172, !tbaa !1055
  %191 = icmp eq i8 %190, 32, !dbg !1174
  %192 = add i64 %183, 7, !dbg !1175
  call void @llvm.dbg.value(metadata i64 %192, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  %193 = select i1 %191, i64 %192, i64 %188, !dbg !1176
  call void @llvm.dbg.value(metadata i64 %193, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  %194 = getelementptr inbounds i8, i8* %170, i64 %193, !dbg !1177
  %195 = load i8, i8* %194, align 1, !dbg !1177, !tbaa !1055
  %196 = icmp eq i8 %195, 40, !dbg !1179
  br i1 %196, label %197, label %370, !dbg !1180

; <label>:197:                                    ; preds = %187
  %198 = add i64 %193, 1, !dbg !1181
  call void @llvm.dbg.value(metadata i64 %198, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  %199 = getelementptr inbounds i8, i8* %170, i64 %198, !dbg !1183
  %200 = sub i64 %171, %198, !dbg !1184
  call void @llvm.dbg.value(metadata i8* %199, i64 0, metadata !1185, metadata !800) #10, !dbg !1195
  call void @llvm.dbg.value(metadata i64 %200, i64 0, metadata !1190, metadata !800) #10, !dbg !1197
  call void @llvm.dbg.value(metadata i1 %182, i64 0, metadata !1193, metadata !1198) #10, !dbg !1199
  %201 = icmp eq i64 %200, 0, !dbg !1200
  br i1 %201, label %370, label %202, !dbg !1202

; <label>:202:                                    ; preds = %197
  br label %203

; <label>:203:                                    ; preds = %202, %207
  %204 = phi i64 [ %205, %207 ], [ %200, %202 ]
  %205 = add i64 %204, -1
  call void @llvm.dbg.value(metadata i64 %205, i64 0, metadata !1194, metadata !800) #10, !dbg !1203
  %206 = icmp eq i64 %205, 0, !dbg !1204
  br i1 %206, label %211, label %207, !dbg !1206

; <label>:207:                                    ; preds = %203
  %208 = getelementptr inbounds i8, i8* %199, i64 %205, !dbg !1207
  %209 = load i8, i8* %208, align 1, !dbg !1207, !tbaa !1055
  %210 = icmp eq i8 %209, 41, !dbg !1209
  br i1 %210, label %214, label %203, !dbg !1210, !llvm.loop !1212

; <label>:211:                                    ; preds = %203
  %212 = load i8, i8* %199, align 1, !tbaa !1055
  %213 = icmp eq i8 %212, 41, !dbg !1206
  br i1 %213, label %215, label %370, !dbg !1215

; <label>:214:                                    ; preds = %207
  br label %215, !dbg !1216

; <label>:215:                                    ; preds = %214, %211
  %216 = phi i8* [ %199, %211 ], [ %208, %214 ]
  %217 = phi i1 [ true, %211 ], [ false, %214 ]
  %218 = phi i64 [ 0, %211 ], [ %205, %214 ]
  br i1 %182, label %219, label %247, !dbg !1216

; <label>:219:                                    ; preds = %215
  call void @llvm.dbg.value(metadata i8* %199, i64 0, metadata !1218, metadata !800) #10, !dbg !1227
  call void @llvm.dbg.value(metadata i64 %205, i64 0, metadata !1223, metadata !800) #10, !dbg !1230
  call void @llvm.dbg.value(metadata i8* %199, i64 0, metadata !1224, metadata !800) #10, !dbg !1231
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1225, metadata !800) #10, !dbg !1232
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1225, metadata !800) #10, !dbg !1232
  call void @llvm.dbg.value(metadata i8* %199, i64 0, metadata !1224, metadata !800) #10, !dbg !1231
  br i1 %217, label %243, label %220, !dbg !1233

; <label>:220:                                    ; preds = %219
  %221 = add i64 %204, -2
  br label %222, !dbg !1233

; <label>:222:                                    ; preds = %236, %220
  %223 = phi i64 [ 0, %220 ], [ %240, %236 ]
  %224 = phi i8* [ %199, %220 ], [ %239, %236 ]
  %225 = getelementptr inbounds i8, i8* %199, i64 %223, !dbg !1235
  %226 = load i8, i8* %225, align 1, !dbg !1235, !tbaa !1055
  %227 = sext i8 %226 to i32, !dbg !1235
  switch i32 %227, label %236 [
    i32 92, label %228
    i32 0, label %368
  ], !dbg !1238

; <label>:228:                                    ; preds = %222
  %229 = icmp eq i64 %223, %221, !dbg !1239
  br i1 %229, label %368, label %230, !dbg !1242

; <label>:230:                                    ; preds = %228
  %231 = add i64 %223, 1, !dbg !1243
  call void @llvm.dbg.value(metadata i64 %231, i64 0, metadata !1225, metadata !800) #10, !dbg !1232
  %232 = getelementptr inbounds i8, i8* %199, i64 %231, !dbg !1244
  %233 = load i8, i8* %232, align 1, !dbg !1244, !tbaa !1055
  %234 = sext i8 %233 to i32, !dbg !1244
  switch i32 %234, label %368 [
    i32 110, label %235
    i32 92, label %236
  ], !dbg !1245

; <label>:235:                                    ; preds = %230
  br label %236, !dbg !1246

; <label>:236:                                    ; preds = %235, %230, %222
  %237 = phi i8 [ 10, %235 ], [ 92, %230 ], [ %226, %222 ]
  %238 = phi i64 [ %231, %235 ], [ %231, %230 ], [ %223, %222 ]
  store i8 %237, i8* %224, align 1, !tbaa !1055
  %239 = getelementptr inbounds i8, i8* %224, i64 1
  call void @llvm.dbg.value(metadata i64 %238, i64 0, metadata !1225, metadata !800) #10, !dbg !1232
  call void @llvm.dbg.value(metadata i8* %239, i64 0, metadata !1224, metadata !800) #10, !dbg !1231
  %240 = add i64 %238, 1, !dbg !1248
  call void @llvm.dbg.value(metadata i64 %240, i64 0, metadata !1225, metadata !800) #10, !dbg !1232
  call void @llvm.dbg.value(metadata i64 %240, i64 0, metadata !1225, metadata !800) #10, !dbg !1232
  call void @llvm.dbg.value(metadata i8* %239, i64 0, metadata !1224, metadata !800) #10, !dbg !1231
  %241 = icmp ult i64 %240, %218, !dbg !1250
  br i1 %241, label %222, label %242, !dbg !1233, !llvm.loop !1252

; <label>:242:                                    ; preds = %236
  br label %243, !dbg !1255

; <label>:243:                                    ; preds = %242, %219
  %244 = phi i8* [ %199, %219 ], [ %239, %242 ]
  %245 = icmp ult i8* %244, %216, !dbg !1255
  br i1 %245, label %246, label %247, !dbg !1257

; <label>:246:                                    ; preds = %243
  store i8 0, i8* %244, align 1, !dbg !1258, !tbaa !1055
  br label %247, !dbg !1259

; <label>:247:                                    ; preds = %246, %243, %215
  call void @llvm.dbg.value(metadata i64 %204, i64 0, metadata !1194, metadata !800) #10, !dbg !1203
  store i8 0, i8* %216, align 1, !dbg !1260, !tbaa !1055
  br label %248, !dbg !1261

; <label>:248:                                    ; preds = %253, %247
  %249 = phi i64 [ %204, %247 ], [ %254, %253 ]
  call void @llvm.dbg.value(metadata i64 %249, i64 0, metadata !1194, metadata !800) #10, !dbg !1203
  %250 = getelementptr inbounds i8, i8* %199, i64 %249, !dbg !1262
  %251 = load i8, i8* %250, align 1, !dbg !1262, !tbaa !1055
  switch i8 %251, label %367 [
    i8 32, label %253
    i8 9, label %253
    i8 61, label %252
  ], !dbg !1262

; <label>:252:                                    ; preds = %248
  br label %255

; <label>:253:                                    ; preds = %248, %248
  %254 = add i64 %249, 1, !dbg !1263
  call void @llvm.dbg.value(metadata i64 %254, i64 0, metadata !1194, metadata !800) #10, !dbg !1203
  br label %248, !dbg !1264, !llvm.loop !1266

; <label>:255:                                    ; preds = %260, %252
  %256 = phi i64 [ %249, %252 ], [ %257, %260 ]
  %257 = add i64 %256, 1
  call void @llvm.dbg.value(metadata i64 %257, i64 0, metadata !1194, metadata !800) #10, !dbg !1203
  %258 = getelementptr inbounds i8, i8* %199, i64 %257, !dbg !1269
  %259 = load i8, i8* %258, align 1, !dbg !1269, !tbaa !1055
  switch i8 %259, label %328 [
    i8 32, label %260
    i8 9, label %260
  ], !dbg !1269

; <label>:260:                                    ; preds = %255, %255
  br label %255, !llvm.loop !1270

; <label>:261:                                    ; preds = %181
  %262 = sub i64 %171, %183, !dbg !1273
  %263 = load i1, i1* @min_digest_line_length, align 8
  %264 = select i1 %263, i64 58, i64 0
  %265 = load i8, i8* %184, align 1, !dbg !1275, !tbaa !1055
  %266 = icmp eq i8 %265, 92, !dbg !1276
  %267 = zext i1 %266 to i64, !dbg !1277
  %268 = or i64 %267, %264, !dbg !1278
  %269 = icmp ult i64 %262, %268, !dbg !1279
  br i1 %269, label %370, label %270, !dbg !1280

; <label>:270:                                    ; preds = %261
  %271 = load i1, i1* @digest_hex_bytes, align 8
  %272 = select i1 %271, i64 56, i64 0
  %273 = add i64 %272, %183, !dbg !1281
  call void @llvm.dbg.value(metadata i64 %273, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  %274 = getelementptr inbounds i8, i8* %170, i64 %273, !dbg !1282
  %275 = load i8, i8* %274, align 1, !dbg !1282, !tbaa !1055
  switch i8 %275, label %370 [
    i8 32, label %276
    i8 9, label %276
  ], !dbg !1282

; <label>:276:                                    ; preds = %270, %270
  %277 = add i64 %273, 1, !dbg !1284
  call void @llvm.dbg.value(metadata i64 %277, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  store i8 0, i8* %274, align 1, !dbg !1285, !tbaa !1055
  %278 = sub i64 %171, %277, !dbg !1286
  %279 = icmp eq i64 %278, 1, !dbg !1288
  br i1 %279, label %283, label %280, !dbg !1289

; <label>:280:                                    ; preds = %276
  %281 = getelementptr inbounds i8, i8* %170, i64 %277, !dbg !1290
  %282 = load i8, i8* %281, align 1, !dbg !1290, !tbaa !1055
  switch i8 %282, label %283 [
    i8 32, label %287
    i8 42, label %287
  ], !dbg !1292

; <label>:283:                                    ; preds = %280, %276
  %284 = load i32, i32* @bsd_reversed, align 4, !dbg !1293, !tbaa !1019
  %285 = icmp eq i32 %284, 0, !dbg !1296
  br i1 %285, label %370, label %286, !dbg !1297

; <label>:286:                                    ; preds = %283
  store i32 1, i32* @bsd_reversed, align 4, !dbg !1298, !tbaa !1019
  br label %292, !dbg !1299

; <label>:287:                                    ; preds = %280, %280
  %288 = load i32, i32* @bsd_reversed, align 4, !dbg !1300, !tbaa !1019
  %289 = icmp eq i32 %288, 1, !dbg !1302
  br i1 %289, label %292, label %290, !dbg !1303

; <label>:290:                                    ; preds = %287
  store i32 0, i32* @bsd_reversed, align 4, !dbg !1304, !tbaa !1019
  %291 = add i64 %273, 2, !dbg !1306
  call void @llvm.dbg.value(metadata i64 %291, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  br label %292, !dbg !1307

; <label>:292:                                    ; preds = %290, %287, %286
  %293 = phi i64 [ %277, %286 ], [ %291, %290 ], [ %277, %287 ]
  call void @llvm.dbg.value(metadata i64 %293, i64 0, metadata !1147, metadata !800) #10, !dbg !1152
  %294 = getelementptr inbounds i8, i8* %170, i64 %293, !dbg !1308
  br i1 %182, label %295, label %329, !dbg !1309

; <label>:295:                                    ; preds = %292
  %296 = sub i64 %171, %293, !dbg !1310
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !1218, metadata !800) #10, !dbg !1312
  call void @llvm.dbg.value(metadata i64 %296, i64 0, metadata !1223, metadata !800) #10, !dbg !1314
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !1224, metadata !800) #10, !dbg !1315
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1225, metadata !800) #10, !dbg !1316
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !1225, metadata !800) #10, !dbg !1316
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !1224, metadata !800) #10, !dbg !1315
  %297 = icmp eq i64 %296, 0, !dbg !1317
  br i1 %297, label %321, label %298, !dbg !1318

; <label>:298:                                    ; preds = %295
  %299 = add i64 %296, -1
  br label %300, !dbg !1318

; <label>:300:                                    ; preds = %314, %298
  %301 = phi i64 [ 0, %298 ], [ %318, %314 ]
  %302 = phi i8* [ %294, %298 ], [ %317, %314 ]
  %303 = getelementptr inbounds i8, i8* %294, i64 %301, !dbg !1319
  %304 = load i8, i8* %303, align 1, !dbg !1319, !tbaa !1055
  %305 = sext i8 %304 to i32, !dbg !1319
  switch i32 %305, label %314 [
    i32 92, label %306
    i32 0, label %369
  ], !dbg !1320

; <label>:306:                                    ; preds = %300
  %307 = icmp eq i64 %301, %299, !dbg !1321
  br i1 %307, label %369, label %308, !dbg !1322

; <label>:308:                                    ; preds = %306
  %309 = add i64 %301, 1, !dbg !1323
  call void @llvm.dbg.value(metadata i64 %309, i64 0, metadata !1225, metadata !800) #10, !dbg !1316
  %310 = getelementptr inbounds i8, i8* %294, i64 %309, !dbg !1324
  %311 = load i8, i8* %310, align 1, !dbg !1324, !tbaa !1055
  %312 = sext i8 %311 to i32, !dbg !1324
  switch i32 %312, label %369 [
    i32 110, label %313
    i32 92, label %314
  ], !dbg !1325

; <label>:313:                                    ; preds = %308
  br label %314, !dbg !1326

; <label>:314:                                    ; preds = %313, %308, %300
  %315 = phi i8 [ 10, %313 ], [ 92, %308 ], [ %304, %300 ]
  %316 = phi i64 [ %309, %313 ], [ %309, %308 ], [ %301, %300 ]
  store i8 %315, i8* %302, align 1, !tbaa !1055
  %317 = getelementptr inbounds i8, i8* %302, i64 1
  call void @llvm.dbg.value(metadata i64 %316, i64 0, metadata !1225, metadata !800) #10, !dbg !1316
  call void @llvm.dbg.value(metadata i8* %317, i64 0, metadata !1224, metadata !800) #10, !dbg !1315
  %318 = add i64 %316, 1, !dbg !1327
  call void @llvm.dbg.value(metadata i64 %318, i64 0, metadata !1225, metadata !800) #10, !dbg !1316
  call void @llvm.dbg.value(metadata i64 %318, i64 0, metadata !1225, metadata !800) #10, !dbg !1316
  call void @llvm.dbg.value(metadata i8* %317, i64 0, metadata !1224, metadata !800) #10, !dbg !1315
  %319 = icmp ult i64 %318, %296, !dbg !1317
  br i1 %319, label %300, label %320, !dbg !1318, !llvm.loop !1252

; <label>:320:                                    ; preds = %314
  br label %321, !dbg !1328

; <label>:321:                                    ; preds = %320, %295
  %322 = phi i8* [ %294, %295 ], [ %317, %320 ]
  %323 = getelementptr inbounds i8, i8* %294, i64 %296, !dbg !1328
  %324 = icmp ult i8* %322, %323, !dbg !1329
  br i1 %324, label %325, label %326, !dbg !1330

; <label>:325:                                    ; preds = %321
  store i8 0, i8* %322, align 1, !dbg !1331, !tbaa !1055
  br label %326, !dbg !1332

; <label>:326:                                    ; preds = %325, %321
  %327 = icmp eq i8* %294, null, !dbg !1333
  br i1 %327, label %370, label %329, !dbg !1334

; <label>:328:                                    ; preds = %255
  br label %329, !dbg !1335

; <label>:329:                                    ; preds = %328, %326, %292
  %330 = phi i8* [ %184, %326 ], [ %184, %292 ], [ %258, %328 ]
  %331 = phi i8* [ %294, %326 ], [ %294, %292 ], [ %199, %328 ]
  br i1 %138, label %332, label %339, !dbg !1335

; <label>:332:                                    ; preds = %329
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !214, metadata !800) #10, !dbg !1337
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !203, metadata !800) #10, !dbg !1338
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !215, metadata !800) #10, !dbg !1339
  %333 = load i8, i8* %331, align 1, !dbg !1340, !tbaa !1055
  %334 = icmp eq i8 %333, 45, !dbg !1342
  br i1 %334, label %335, label %339, !dbg !1345

; <label>:335:                                    ; preds = %332
  %336 = getelementptr inbounds i8, i8* %331, i64 1, !dbg !1347
  %337 = load i8, i8* %336, align 1, !dbg !1347, !tbaa !1055
  %338 = icmp eq i8 %337, 0, !dbg !1350
  br i1 %338, label %370, label %339, !dbg !1352

; <label>:339:                                    ; preds = %335, %332, %329
  call void @llvm.dbg.value(metadata i8* %184, i64 0, metadata !206, metadata !800) #10, !dbg !1353
  call void @llvm.dbg.value(metadata i8* %184, i64 0, metadata !1354, metadata !800) #10, !dbg !1360
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1359, metadata !800) #10, !dbg !1362
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1359, metadata !800) #10, !dbg !1362
  call void @llvm.dbg.value(metadata i8* %184, i64 0, metadata !1354, metadata !800) #10, !dbg !1360
  %340 = load i1, i1* @digest_hex_bytes, align 8
  br i1 %340, label %341, label %362, !dbg !1363

; <label>:341:                                    ; preds = %339
  %342 = tail call i16** @__ctype_b_loc() #1, !dbg !1366
  %343 = load i16*, i16** %342, align 8, !tbaa !808
  br label %344, !dbg !1363

; <label>:344:                                    ; preds = %671, %341
  %345 = phi i32 [ 0, %341 ], [ %673, %671 ]
  %346 = phi i8* [ %330, %341 ], [ %672, %671 ]
  %347 = load i8, i8* %346, align 1, !dbg !1366, !tbaa !1055
  %348 = zext i8 %347 to i64, !dbg !1366
  %349 = getelementptr inbounds i16, i16* %343, i64 %348, !dbg !1366
  %350 = load i16, i16* %349, align 2, !dbg !1366, !tbaa !1370
  %351 = and i16 %350, 4096, !dbg !1366
  %352 = icmp eq i16 %351, 0, !dbg !1366
  br i1 %352, label %366, label %353, !dbg !1372

; <label>:353:                                    ; preds = %344
  %354 = getelementptr inbounds i8, i8* %346, i64 1, !dbg !1373
  call void @llvm.dbg.value(metadata i8* %354, i64 0, metadata !1354, metadata !800) #10, !dbg !1360
  call void @llvm.dbg.value(metadata i8* %354, i64 0, metadata !1354, metadata !800) #10, !dbg !1360
  %355 = load i8, i8* %354, align 1, !dbg !1366, !tbaa !1055
  %356 = zext i8 %355 to i64, !dbg !1366
  %357 = getelementptr inbounds i16, i16* %343, i64 %356, !dbg !1366
  %358 = load i16, i16* %357, align 2, !dbg !1366, !tbaa !1370
  %359 = and i16 %358, 4096, !dbg !1366
  %360 = icmp eq i16 %359, 0, !dbg !1366
  br i1 %360, label %366, label %671, !dbg !1372

; <label>:361:                                    ; preds = %671
  br label %362, !dbg !1374

; <label>:362:                                    ; preds = %361, %339
  %363 = phi i8* [ %330, %339 ], [ %672, %361 ]
  %364 = load i8, i8* %363, align 1, !dbg !1374, !tbaa !1055
  %365 = icmp eq i8 %364, 0, !dbg !1375
  br i1 %365, label %378, label %370, !dbg !1376

; <label>:366:                                    ; preds = %353, %344
  br label %370, !dbg !1378

; <label>:367:                                    ; preds = %248
  br label %370, !dbg !1378

; <label>:368:                                    ; preds = %222, %228, %230
  br label %370, !dbg !1378

; <label>:369:                                    ; preds = %300, %306, %308
  br label %370, !dbg !1378

; <label>:370:                                    ; preds = %369, %368, %367, %366, %362, %335, %326, %283, %270, %261, %211, %197, %187
  %371 = add i64 %149, 1, !dbg !1378
  call void @llvm.dbg.value(metadata i64 %371, i64 0, metadata !182, metadata !800) #10, !dbg !1038
  %372 = load i1, i1* @warn, align 1
  br i1 %372, label %373, label %376, !dbg !1380

; <label>:373:                                    ; preds = %370
  %374 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.63, i64 0, i64 0), i32 5) #10, !dbg !1381
  %375 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %140) #10, !dbg !1384
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %374, i8* %375, i64 %150, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !1385
  br label %376, !dbg !1386

; <label>:376:                                    ; preds = %373, %370
  %377 = add i64 %148, 1, !dbg !1387
  call void @llvm.dbg.value(metadata i64 %377, i64 0, metadata !183, metadata !800) #10, !dbg !1039
  br label %486, !dbg !1388

; <label>:378:                                    ; preds = %362
  call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !220, metadata !1105) #10, !dbg !1389
  call void @llvm.lifetime.start(i64 1, i8* nonnull %6) #10, !dbg !1390
  %379 = load i1, i1* @status_only, align 1
  br i1 %379, label %383, label %380, !dbg !1391

; <label>:380:                                    ; preds = %378
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !203, metadata !800) #10, !dbg !1338
  %381 = call i8* @strchr(i8* %331, i32 10) #10, !dbg !1392
  %382 = icmp ne i8* %381, null, !dbg !1394
  br label %383

; <label>:383:                                    ; preds = %380, %378
  %384 = phi i1 [ false, %378 ], [ %382, %380 ]
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !186, metadata !800) #10, !dbg !1042
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !203, metadata !800) #10, !dbg !1338
  call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !220, metadata !1105) #10, !dbg !1389
  %385 = call fastcc zeroext i1 @digest_file(i8* %331, i8* %107, i8* nonnull %6) #10, !dbg !1395
  br i1 %385, label %404, label %386, !dbg !1396

; <label>:386:                                    ; preds = %383
  %387 = add i64 %146, 1, !dbg !1397
  call void @llvm.dbg.value(metadata i64 %387, i64 0, metadata !185, metadata !800) #10, !dbg !1041
  %388 = load i1, i1* @status_only, align 1
  br i1 %388, label %482, label %389, !dbg !1399

; <label>:389:                                    ; preds = %386
  br i1 %384, label %390, label %401, !dbg !1400

; <label>:390:                                    ; preds = %389
  call void @llvm.dbg.value(metadata i32 92, i64 0, metadata !1403, metadata !800) #10, !dbg !1408
  %391 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1411, !tbaa !808
  %392 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %391, i64 0, i32 5, !dbg !1411
  %393 = load i8*, i8** %392, align 8, !dbg !1411, !tbaa !1412
  %394 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %391, i64 0, i32 6, !dbg !1411
  %395 = load i8*, i8** %394, align 8, !dbg !1411, !tbaa !1414
  %396 = icmp ult i8* %393, %395, !dbg !1411
  br i1 %396, label %399, label %397, !dbg !1411, !prof !1415

; <label>:397:                                    ; preds = %390
  %398 = call i32 @__overflow(%struct._IO_FILE* %391, i32 92) #10, !dbg !1416
  br label %401, !dbg !1416

; <label>:399:                                    ; preds = %390
  %400 = getelementptr inbounds i8, i8* %393, i64 1, !dbg !1418
  store i8* %400, i8** %392, align 8, !dbg !1418, !tbaa !1412
  store i8 92, i8* %393, align 1, !dbg !1418, !tbaa !1055
  br label %401, !dbg !1418

; <label>:401:                                    ; preds = %399, %397, %389
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !203, metadata !800) #10, !dbg !1338
  call fastcc void @print_filename(i8* %331, i1 zeroext %384) #10, !dbg !1420
  %402 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.65, i64 0, i64 0), i32 5) #10, !dbg !1421
  %403 = call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0), i8* %402) #10, !dbg !1422
  br label %482, !dbg !1424

; <label>:404:                                    ; preds = %383
  %405 = load i1, i1* @ignore_missing, align 1
  %406 = xor i1 %405, true, !dbg !1425
  %407 = load i8, i8* %6, align 1, !dbg !1426
  %408 = icmp eq i8 %407, 0, !dbg !1426
  %409 = or i1 %408, %406, !dbg !1425
  br i1 %409, label %410, label %482, !dbg !1425

; <label>:410:                                    ; preds = %404
  %411 = load i1, i1* @digest_hex_bytes, align 8
  %412 = select i1 %411, i64 28, i64 0, !dbg !1428
  call void @llvm.dbg.value(metadata i64 %412, i64 0, metadata !222, metadata !800) #10, !dbg !1429
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !226, metadata !800) #10, !dbg !1430
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !226, metadata !800) #10, !dbg !1430
  br i1 %411, label %413, label %451, !dbg !1431

; <label>:413:                                    ; preds = %410
  %414 = tail call i32** @__ctype_tolower_loc() #1, !dbg !1433
  %415 = load i32*, i32** %414, align 8, !tbaa !808
  br label %416, !dbg !1431

; <label>:416:                                    ; preds = %446, %413
  %417 = phi i64 [ 0, %413 ], [ %447, %446 ]
  call void @llvm.dbg.value(metadata i8* %184, i64 0, metadata !206, metadata !800) #10, !dbg !1353
  %418 = shl i64 %417, 1, !dbg !1433
  %419 = getelementptr inbounds i8, i8* %330, i64 %418, !dbg !1433
  %420 = load i8, i8* %419, align 1, !dbg !1433, !tbaa !1055
  %421 = zext i8 %420 to i64, !dbg !1433
  %422 = getelementptr inbounds i32, i32* %415, i64 %421, !dbg !1433
  %423 = load i32, i32* %422, align 4, !dbg !1433, !tbaa !1019
  call void @llvm.dbg.value(metadata i32 %423, i64 0, metadata !227, metadata !800) #10, !dbg !1435
  %424 = getelementptr inbounds i8, i8* %107, i64 %417, !dbg !1436
  %425 = load i8, i8* %424, align 1, !dbg !1436, !tbaa !1055
  %426 = zext i8 %425 to i32, !dbg !1436
  %427 = lshr i32 %426, 4, !dbg !1437
  %428 = zext i32 %427 to i64, !dbg !1438
  %429 = getelementptr inbounds [16 x i8], [16 x i8]* @digest_check.bin2hex, i64 0, i64 %428, !dbg !1438
  %430 = load i8, i8* %429, align 1, !dbg !1438, !tbaa !1055
  %431 = sext i8 %430 to i32, !dbg !1438
  %432 = icmp eq i32 %423, %431, !dbg !1439
  br i1 %432, label %433, label %449, !dbg !1440

; <label>:433:                                    ; preds = %416
  %434 = or i64 %418, 1, !dbg !1441
  %435 = getelementptr inbounds i8, i8* %330, i64 %434, !dbg !1441
  %436 = load i8, i8* %435, align 1, !dbg !1441, !tbaa !1055
  %437 = zext i8 %436 to i64, !dbg !1441
  %438 = getelementptr inbounds i32, i32* %415, i64 %437, !dbg !1441
  %439 = load i32, i32* %438, align 4, !dbg !1441, !tbaa !1019
  call void @llvm.dbg.value(metadata i32 %439, i64 0, metadata !233, metadata !800) #10, !dbg !1444
  %440 = and i32 %426, 15, !dbg !1445
  %441 = zext i32 %440 to i64, !dbg !1446
  %442 = getelementptr inbounds [16 x i8], [16 x i8]* @digest_check.bin2hex, i64 0, i64 %441, !dbg !1446
  %443 = load i8, i8* %442, align 1, !dbg !1446, !tbaa !1055
  %444 = sext i8 %443 to i32, !dbg !1447
  %445 = icmp eq i32 %439, %444, !dbg !1448
  br i1 %445, label %446, label %449, !dbg !1449

; <label>:446:                                    ; preds = %433
  %447 = add nuw nsw i64 %417, 1, !dbg !1451
  call void @llvm.dbg.value(metadata i64 %447, i64 0, metadata !226, metadata !800) #10, !dbg !1430
  call void @llvm.dbg.value(metadata i64 %447, i64 0, metadata !226, metadata !800) #10, !dbg !1430
  %448 = icmp ult i64 %447, %412, !dbg !1453
  br i1 %448, label %416, label %449, !dbg !1431, !llvm.loop !1455

; <label>:449:                                    ; preds = %416, %433, %446
  %450 = phi i64 [ %447, %446 ], [ %417, %416 ], [ %417, %433 ]
  br label %451, !dbg !1458

; <label>:451:                                    ; preds = %449, %410
  %452 = phi i64 [ 0, %410 ], [ %450, %449 ]
  %453 = icmp ne i64 %452, %412, !dbg !1458
  %454 = add i64 %147, 1, !dbg !1460
  call void @llvm.dbg.value(metadata i64 %454, i64 0, metadata !184, metadata !800) #10, !dbg !1040
  %455 = select i1 %453, i8 %144, i8 1, !dbg !1461
  %456 = select i1 %453, i64 %454, i64 %147, !dbg !1461
  call void @llvm.dbg.value(metadata i64 %456, i64 0, metadata !184, metadata !800) #10, !dbg !1040
  call void @llvm.dbg.value(metadata i8 %455, i64 0, metadata !187, metadata !800) #10, !dbg !1043
  %457 = load i1, i1* @status_only, align 1
  br i1 %457, label %482, label %458, !dbg !1462

; <label>:458:                                    ; preds = %451
  br i1 %453, label %461, label %459, !dbg !1463

; <label>:459:                                    ; preds = %458
  %460 = load i1, i1* @quiet, align 1
  br i1 %460, label %482, label %461, !dbg !1467

; <label>:461:                                    ; preds = %459, %458
  br i1 %384, label %462, label %473, !dbg !1469

; <label>:462:                                    ; preds = %461
  call void @llvm.dbg.value(metadata i32 92, i64 0, metadata !1403, metadata !800) #10, !dbg !1471
  %463 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1474, !tbaa !808
  %464 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %463, i64 0, i32 5, !dbg !1474
  %465 = load i8*, i8** %464, align 8, !dbg !1474, !tbaa !1412
  %466 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %463, i64 0, i32 6, !dbg !1474
  %467 = load i8*, i8** %466, align 8, !dbg !1474, !tbaa !1414
  %468 = icmp ult i8* %465, %467, !dbg !1474
  br i1 %468, label %471, label %469, !dbg !1474, !prof !1415

; <label>:469:                                    ; preds = %462
  %470 = call i32 @__overflow(%struct._IO_FILE* %463, i32 92) #10, !dbg !1475
  br label %473, !dbg !1475

; <label>:471:                                    ; preds = %462
  %472 = getelementptr inbounds i8, i8* %465, i64 1, !dbg !1476
  store i8* %472, i8** %464, align 8, !dbg !1476, !tbaa !1412
  store i8 92, i8* %465, align 1, !dbg !1476, !tbaa !1055
  br label %473, !dbg !1476

; <label>:473:                                    ; preds = %471, %469, %461
  call void @llvm.dbg.value(metadata i8* %294, i64 0, metadata !203, metadata !800) #10, !dbg !1338
  call fastcc void @print_filename(i8* %331, i1 zeroext %384) #10, !dbg !1477
  br i1 %453, label %474, label %477, !dbg !1478

; <label>:474:                                    ; preds = %473
  %475 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i64 0, i64 0), i32 5) #10, !dbg !1479
  %476 = call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0), i8* %475) #10, !dbg !1481
  br label %482, !dbg !1479

; <label>:477:                                    ; preds = %473
  %478 = load i1, i1* @quiet, align 1
  br i1 %478, label %482, label %479, !dbg !1483

; <label>:479:                                    ; preds = %477
  %480 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.67, i64 0, i64 0), i32 5) #10, !dbg !1484
  %481 = call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0), i8* %480) #10, !dbg !1486
  br label %482, !dbg !1484

; <label>:482:                                    ; preds = %479, %477, %474, %459, %451, %404, %401, %386
  %483 = phi i8 [ %144, %386 ], [ %144, %401 ], [ %144, %404 ], [ %144, %474 ], [ 1, %479 ], [ 1, %477 ], [ %455, %451 ], [ 1, %459 ]
  %484 = phi i64 [ %387, %386 ], [ %387, %401 ], [ %146, %404 ], [ %146, %474 ], [ %146, %479 ], [ %146, %477 ], [ %146, %451 ], [ %146, %459 ]
  %485 = phi i64 [ %147, %386 ], [ %147, %401 ], [ %147, %404 ], [ %454, %474 ], [ %147, %479 ], [ %147, %477 ], [ %456, %451 ], [ %147, %459 ]
  call void @llvm.dbg.value(metadata i64 %485, i64 0, metadata !184, metadata !800) #10, !dbg !1040
  call void @llvm.dbg.value(metadata i64 %484, i64 0, metadata !185, metadata !800) #10, !dbg !1041
  call void @llvm.dbg.value(metadata i8 %483, i64 0, metadata !187, metadata !800) #10, !dbg !1043
  call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !220, metadata !1105) #10, !dbg !1389
  call void @llvm.lifetime.end(i64 1, i8* nonnull %6) #10, !dbg !1488
  br label %486

; <label>:486:                                    ; preds = %482, %376, %158
  %487 = phi i8 [ %483, %482 ], [ %144, %376 ], [ %144, %158 ]
  %488 = phi i8 [ 1, %482 ], [ %145, %376 ], [ %145, %158 ]
  %489 = phi i64 [ %484, %482 ], [ %146, %376 ], [ %146, %158 ]
  %490 = phi i64 [ %485, %482 ], [ %147, %376 ], [ %147, %158 ]
  %491 = phi i64 [ %148, %482 ], [ %377, %376 ], [ %148, %158 ]
  %492 = phi i64 [ %149, %482 ], [ %371, %376 ], [ %149, %158 ]
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %139, i64 0, metadata !1489, metadata !800) #10, !dbg !1494
  %493 = load i32, i32* %141, align 8, !dbg !1496, !tbaa !1497
  %494 = and i32 %493, 48, !dbg !1498
  %495 = icmp eq i32 %494, 0, !dbg !1498
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %139, i64 0, metadata !1499, metadata !800) #10, !dbg !1502
  br i1 %495, label %142, label %496, !dbg !1498, !llvm.loop !1093

; <label>:496:                                    ; preds = %486, %155
  %497 = phi i64 [ %492, %486 ], [ %149, %155 ]
  %498 = phi i64 [ %491, %486 ], [ %148, %155 ]
  %499 = phi i64 [ %490, %486 ], [ %147, %155 ]
  %500 = phi i64 [ %489, %486 ], [ %146, %155 ]
  %501 = phi i8 [ %488, %486 ], [ %145, %155 ]
  %502 = phi i8 [ %487, %486 ], [ %144, %155 ]
  %503 = load i8*, i8** %4, align 8, !dbg !1505, !tbaa !808
  call void @llvm.dbg.value(metadata i8* %503, i64 0, metadata !194, metadata !800) #10, !dbg !1086
  call void @free(i8* %503) #10, !dbg !1506
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %139, i64 0, metadata !1499, metadata !800) #10, !dbg !1507
  %504 = load i32, i32* %141, align 8, !dbg !1510, !tbaa !1497
  %505 = and i32 %504, 32, !dbg !1510
  %506 = icmp eq i32 %505, 0, !dbg !1511
  br i1 %506, label %510, label %507, !dbg !1512

; <label>:507:                                    ; preds = %496
  %508 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i64 0, i64 0), i32 5) #10, !dbg !1513
  %509 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %140) #10, !dbg !1515
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %508, i8* %509) #10, !dbg !1517
  br label %559, !dbg !1519

; <label>:510:                                    ; preds = %496
  br i1 %138, label %518, label %511, !dbg !1520

; <label>:511:                                    ; preds = %510
  %512 = call i32 @rpl_fclose(%struct._IO_FILE* nonnull %139) #10, !dbg !1522
  %513 = icmp eq i32 %512, 0, !dbg !1524
  br i1 %513, label %518, label %514, !dbg !1525

; <label>:514:                                    ; preds = %511
  %515 = tail call i32* @__errno_location() #1, !dbg !1526
  %516 = load i32, i32* %515, align 4, !dbg !1526, !tbaa !1019
  %517 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %140) #10, !dbg !1528
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %516, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), i8* %517) #10, !dbg !1530
  br label %559, !dbg !1532

; <label>:518:                                    ; preds = %511, %510
  %519 = and i8 %501, 1, !dbg !1533
  %520 = icmp eq i8 %519, 0, !dbg !1533
  br i1 %520, label %521, label %524, !dbg !1535

; <label>:521:                                    ; preds = %518
  %522 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.69, i64 0, i64 0), i32 5) #10, !dbg !1536
  %523 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %140) #10, !dbg !1538
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %522, i8* %523, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #10, !dbg !1539
  br label %559, !dbg !1541

; <label>:524:                                    ; preds = %518
  %525 = load i1, i1* @status_only, align 1
  br i1 %525, label %526, label %528, !dbg !1542

; <label>:526:                                    ; preds = %524
  %527 = and i8 %502, 1, !dbg !1544
  br label %548, !dbg !1542

; <label>:528:                                    ; preds = %524
  %529 = icmp eq i64 %497, 0, !dbg !1545
  br i1 %529, label %532, label %530, !dbg !1549

; <label>:530:                                    ; preds = %528
  %531 = call i8* @dcngettext(i8* null, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.71, i64 0, i64 0), i64 %497, i32 5) #10, !dbg !1550
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %531, i64 %497) #10, !dbg !1552
  br label %532, !dbg !1552

; <label>:532:                                    ; preds = %530, %528
  %533 = icmp eq i64 %500, 0, !dbg !1553
  br i1 %533, label %536, label %534, !dbg !1555

; <label>:534:                                    ; preds = %532
  %535 = call i8* @dcngettext(i8* null, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.73, i64 0, i64 0), i64 %500, i32 5) #10, !dbg !1556
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %535, i64 %500) #10, !dbg !1558
  br label %536, !dbg !1558

; <label>:536:                                    ; preds = %534, %532
  %537 = icmp eq i64 %499, 0, !dbg !1559
  br i1 %537, label %540, label %538, !dbg !1561

; <label>:538:                                    ; preds = %536
  %539 = call i8* @dcngettext(i8* null, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.75, i64 0, i64 0), i64 %499, i32 5) #10, !dbg !1562
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %539, i64 %499) #10, !dbg !1564
  br label %540, !dbg !1564

; <label>:540:                                    ; preds = %538, %536
  %541 = load i1, i1* @ignore_missing, align 1
  %542 = and i8 %502, 1, !dbg !1565
  %543 = icmp eq i8 %542, 0, !dbg !1565
  %544 = and i1 %543, %541, !dbg !1568
  br i1 %544, label %545, label %548, !dbg !1568

; <label>:545:                                    ; preds = %540
  %546 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.76, i64 0, i64 0), i32 5) #10, !dbg !1569
  %547 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %140) #10, !dbg !1570
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %546, i8* %547) #10, !dbg !1571
  br label %559, !dbg !1572

; <label>:548:                                    ; preds = %540, %526
  %549 = phi i8 [ %527, %526 ], [ %542, %540 ], !dbg !1544
  %550 = icmp ne i8 %549, 0, !dbg !1544
  %551 = or i64 %500, %499, !dbg !1572
  %552 = icmp eq i64 %551, 0, !dbg !1572
  %553 = and i1 %552, %550, !dbg !1572
  br i1 %553, label %554, label %559, !dbg !1572

; <label>:554:                                    ; preds = %548
  %555 = load i1, i1* @strict, align 1
  %556 = icmp eq i64 %498, 0, !dbg !1573
  %557 = xor i1 %555, true, !dbg !1575
  %558 = or i1 %556, %557, !dbg !1575
  br label %559, !dbg !1575

; <label>:559:                                    ; preds = %133, %507, %514, %521, %545, %548, %554
  %560 = phi i1 [ false, %507 ], [ false, %514 ], [ false, %133 ], [ false, %548 ], [ %558, %554 ], [ false, %521 ], [ false, %545 ]
  call void @llvm.lifetime.end(i64 8, i8* nonnull %109) #10, !dbg !1576
  call void @llvm.lifetime.end(i64 8, i8* nonnull %108) #10, !dbg !1576
  call void @llvm.lifetime.end(i64 32, i8* nonnull %102) #10, !dbg !1576
  %561 = zext i1 %560 to i8, !dbg !1577
  %562 = and i8 %561, %118, !dbg !1578
  call void @llvm.dbg.value(metadata i8 %562, i64 0, metadata !881, metadata !800), !dbg !922
  br label %655, !dbg !1579

; <label>:563:                                    ; preds = %116
  call void @llvm.dbg.value(metadata i8* %8, i64 0, metadata !894, metadata !1105), !dbg !1580
  call void @llvm.lifetime.start(i64 1, i8* nonnull %8) #10, !dbg !1581
  call void @llvm.dbg.value(metadata i8* %8, i64 0, metadata !894, metadata !1105), !dbg !1580
  %564 = call fastcc zeroext i1 @digest_file(i8* %119, i8* %14, i8* nonnull %8), !dbg !1582
  br i1 %564, label %565, label %653, !dbg !1583

; <label>:565:                                    ; preds = %563
  %566 = call i8* @strchr(i8* %119, i32 92) #10, !dbg !1584
  %567 = icmp eq i8* %566, null, !dbg !1584
  br i1 %567, label %568, label %571, !dbg !1586

; <label>:568:                                    ; preds = %565
  %569 = call i8* @strchr(i8* %119, i32 10) #10, !dbg !1587
  %570 = icmp ne i8* %569, null, !dbg !1589
  br label %571, !dbg !1589

; <label>:571:                                    ; preds = %565, %568
  %572 = phi i1 [ true, %565 ], [ %570, %568 ]
  br i1 %45, label %573, label %592, !dbg !1590

; <label>:573:                                    ; preds = %571
  br i1 %572, label %574, label %585, !dbg !1591

; <label>:574:                                    ; preds = %573
  call void @llvm.dbg.value(metadata i32 92, i64 0, metadata !1403, metadata !800) #10, !dbg !1594
  %575 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1597, !tbaa !808
  %576 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %575, i64 0, i32 5, !dbg !1597
  %577 = load i8*, i8** %576, align 8, !dbg !1597, !tbaa !1412
  %578 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %575, i64 0, i32 6, !dbg !1597
  %579 = load i8*, i8** %578, align 8, !dbg !1597, !tbaa !1414
  %580 = icmp ult i8* %577, %579, !dbg !1597
  br i1 %580, label %583, label %581, !dbg !1597, !prof !1415

; <label>:581:                                    ; preds = %574
  %582 = call i32 @__overflow(%struct._IO_FILE* %575, i32 92) #10, !dbg !1598
  br label %585, !dbg !1598

; <label>:583:                                    ; preds = %574
  %584 = getelementptr inbounds i8, i8* %577, i64 1, !dbg !1599
  store i8* %584, i8** %576, align 8, !dbg !1599, !tbaa !1412
  store i8 92, i8* %577, align 1, !dbg !1599, !tbaa !1055
  br label %585, !dbg !1599

; <label>:585:                                    ; preds = %583, %581, %573
  %586 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1600, !tbaa !808
  %587 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), %struct._IO_FILE* %586) #10, !dbg !1600
  %588 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1601, !tbaa !808
  %589 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), %struct._IO_FILE* %588) #10, !dbg !1601
  call fastcc void @print_filename(i8* %119, i1 zeroext %572), !dbg !1602
  %590 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1603, !tbaa !808
  %591 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), %struct._IO_FILE* %590) #10, !dbg !1603
  br label %604, !dbg !1604

; <label>:592:                                    ; preds = %571
  br i1 %572, label %593, label %604, !dbg !1606

; <label>:593:                                    ; preds = %592
  call void @llvm.dbg.value(metadata i32 92, i64 0, metadata !1403, metadata !800) #10, !dbg !1608
  %594 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1610, !tbaa !808
  %595 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %594, i64 0, i32 5, !dbg !1610
  %596 = load i8*, i8** %595, align 8, !dbg !1610, !tbaa !1412
  %597 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %594, i64 0, i32 6, !dbg !1610
  %598 = load i8*, i8** %597, align 8, !dbg !1610, !tbaa !1414
  %599 = icmp ult i8* %596, %598, !dbg !1610
  br i1 %599, label %602, label %600, !dbg !1610, !prof !1415

; <label>:600:                                    ; preds = %593
  %601 = call i32 @__overflow(%struct._IO_FILE* %594, i32 92) #10, !dbg !1611
  br label %604, !dbg !1611

; <label>:602:                                    ; preds = %593
  %603 = getelementptr inbounds i8, i8* %596, i64 1, !dbg !1612
  store i8* %603, i8** %595, align 8, !dbg !1612, !tbaa !1412
  store i8 92, i8* %596, align 1, !dbg !1612, !tbaa !1055
  br label %604, !dbg !1612

; <label>:604:                                    ; preds = %592, %585, %600, %602
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !898, metadata !800), !dbg !1613
  %605 = load i1, i1* @digest_hex_bytes, align 8
  br i1 %605, label %606, label %618, !dbg !1614

; <label>:606:                                    ; preds = %604
  br label %607, !dbg !1617

; <label>:607:                                    ; preds = %606, %607
  %608 = phi i64 [ %613, %607 ], [ 0, %606 ]
  %609 = getelementptr inbounds i8, i8* %14, i64 %608, !dbg !1617
  %610 = load i8, i8* %609, align 1, !dbg !1617, !tbaa !1055
  %611 = zext i8 %610 to i32, !dbg !1617
  %612 = call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i32 %611) #10, !dbg !1617
  %613 = add i64 %608, 1, !dbg !1619
  call void @llvm.dbg.value(metadata i64 %613, i64 0, metadata !898, metadata !800), !dbg !1613
  call void @llvm.dbg.value(metadata i64 %613, i64 0, metadata !898, metadata !800), !dbg !1613
  %614 = load i1, i1* @digest_hex_bytes, align 8
  %615 = select i1 %614, i64 28, i64 0, !dbg !1621
  %616 = icmp ult i64 %613, %615, !dbg !1623
  br i1 %616, label %607, label %617, !dbg !1614, !llvm.loop !1624

; <label>:617:                                    ; preds = %607
  br label %618, !dbg !1627

; <label>:618:                                    ; preds = %617, %604
  br i1 %45, label %642, label %619, !dbg !1627

; <label>:619:                                    ; preds = %618
  call void @llvm.dbg.value(metadata i32 32, i64 0, metadata !1403, metadata !800) #10, !dbg !1628
  %620 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1632, !tbaa !808
  %621 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %620, i64 0, i32 5, !dbg !1632
  %622 = load i8*, i8** %621, align 8, !dbg !1632, !tbaa !1412
  %623 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %620, i64 0, i32 6, !dbg !1632
  %624 = load i8*, i8** %623, align 8, !dbg !1632, !tbaa !1414
  %625 = icmp ult i8* %622, %624, !dbg !1632
  br i1 %625, label %628, label %626, !dbg !1632, !prof !1415

; <label>:626:                                    ; preds = %619
  %627 = call i32 @__overflow(%struct._IO_FILE* %620, i32 32) #10, !dbg !1633
  br label %630, !dbg !1633

; <label>:628:                                    ; preds = %619
  %629 = getelementptr inbounds i8, i8* %622, i64 1, !dbg !1634
  store i8* %629, i8** %621, align 8, !dbg !1634, !tbaa !1412
  store i8 32, i8* %622, align 1, !dbg !1634, !tbaa !1055
  br label %630, !dbg !1634

; <label>:630:                                    ; preds = %626, %628
  call void @llvm.dbg.value(metadata i32 %110, i64 0, metadata !1403, metadata !800) #10, !dbg !1635
  %631 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1637, !tbaa !808
  %632 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %631, i64 0, i32 5, !dbg !1637
  %633 = load i8*, i8** %632, align 8, !dbg !1637, !tbaa !1412
  %634 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %631, i64 0, i32 6, !dbg !1637
  %635 = load i8*, i8** %634, align 8, !dbg !1637, !tbaa !1414
  %636 = icmp ult i8* %633, %635, !dbg !1637
  br i1 %636, label %639, label %637, !dbg !1637, !prof !1415

; <label>:637:                                    ; preds = %630
  %638 = call i32 @__overflow(%struct._IO_FILE* %631, i32 %110) #10, !dbg !1638
  br label %641, !dbg !1638

; <label>:639:                                    ; preds = %630
  %640 = getelementptr inbounds i8, i8* %633, i64 1, !dbg !1639
  store i8* %640, i8** %632, align 8, !dbg !1639, !tbaa !1412
  store i8 %111, i8* %633, align 1, !dbg !1639, !tbaa !1055
  br label %641, !dbg !1639

; <label>:641:                                    ; preds = %637, %639
  call fastcc void @print_filename(i8* %119, i1 zeroext %572), !dbg !1640
  br label %642, !dbg !1641

; <label>:642:                                    ; preds = %641, %618
  call void @llvm.dbg.value(metadata i32 10, i64 0, metadata !1403, metadata !800) #10, !dbg !1642
  %643 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1644, !tbaa !808
  %644 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %643, i64 0, i32 5, !dbg !1644
  %645 = load i8*, i8** %644, align 8, !dbg !1644, !tbaa !1412
  %646 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %643, i64 0, i32 6, !dbg !1644
  %647 = load i8*, i8** %646, align 8, !dbg !1644, !tbaa !1414
  %648 = icmp ult i8* %645, %647, !dbg !1644
  br i1 %648, label %651, label %649, !dbg !1644, !prof !1415

; <label>:649:                                    ; preds = %642
  %650 = call i32 @__overflow(%struct._IO_FILE* %643, i32 10) #10, !dbg !1645
  br label %653, !dbg !1645

; <label>:651:                                    ; preds = %642
  %652 = getelementptr inbounds i8, i8* %645, i64 1, !dbg !1646
  store i8* %652, i8** %644, align 8, !dbg !1646, !tbaa !1412
  store i8 10, i8* %645, align 1, !dbg !1646, !tbaa !1055
  br label %653, !dbg !1646

; <label>:653:                                    ; preds = %651, %649, %563
  %654 = phi i8 [ 0, %563 ], [ %118, %649 ], [ %118, %651 ]
  call void @llvm.dbg.value(metadata i8 %654, i64 0, metadata !881, metadata !800), !dbg !922
  call void @llvm.dbg.value(metadata i8* %8, i64 0, metadata !894, metadata !1105), !dbg !1580
  call void @llvm.lifetime.end(i64 1, i8* nonnull %8) #10, !dbg !1647
  br label %655

; <label>:655:                                    ; preds = %653, %559
  %656 = phi i8 [ %562, %559 ], [ %654, %653 ]
  call void @llvm.dbg.value(metadata i8 %656, i64 0, metadata !881, metadata !800), !dbg !922
  %657 = getelementptr inbounds i8*, i8** %117, i64 1, !dbg !1648
  call void @llvm.dbg.value(metadata i8** %657, i64 0, metadata !886, metadata !800), !dbg !1027
  call void @llvm.dbg.value(metadata i8** %657, i64 0, metadata !886, metadata !800), !dbg !1027
  call void @llvm.dbg.value(metadata i8 %656, i64 0, metadata !881, metadata !800), !dbg !922
  %658 = icmp ult i8** %657, %97, !dbg !1028
  br i1 %658, label %116, label %112, !dbg !1030, !llvm.loop !1650

; <label>:659:                                    ; preds = %113
  %660 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1653, !tbaa !808
  %661 = call i32 @rpl_fclose(%struct._IO_FILE* %660) #10, !dbg !1655
  %662 = icmp eq i32 %661, -1, !dbg !1656
  br i1 %662, label %663, label %667, !dbg !1657

; <label>:663:                                    ; preds = %659
  %664 = tail call i32* @__errno_location() #1, !dbg !1658
  %665 = load i32, i32* %664, align 4, !dbg !1658, !tbaa !1019
  %666 = call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0), i32 5) #10, !dbg !1659
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %665, i8* %666) #10, !dbg !1660
  unreachable, !dbg !1658

; <label>:667:                                    ; preds = %659, %113
  %668 = and i8 %114, 1, !dbg !1662
  %669 = xor i8 %668, 1, !dbg !1662
  %670 = zext i8 %669 to i32, !dbg !1662
  call void @llvm.lifetime.end(i64 32, i8* nonnull %9) #10, !dbg !1663
  ret i32 %670, !dbg !1663

; <label>:671:                                    ; preds = %353
  %672 = getelementptr inbounds i8, i8* %346, i64 2, !dbg !1373
  call void @llvm.dbg.value(metadata i8* %354, i64 0, metadata !1354, metadata !800) #10, !dbg !1360
  %673 = add nsw i32 %345, 2, !dbg !1664
  call void @llvm.dbg.value(metadata i8* %354, i64 0, metadata !1354, metadata !800) #10, !dbg !1360
  %674 = icmp ult i32 %673, 56, !dbg !1666
  br i1 %674, label %344, label %361, !dbg !1363, !llvm.loop !1668
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #7

; Function Attrs: nounwind
declare i8* @bindtextdomain(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @textdomain(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @atexit(void ()*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @setvbuf(%struct._IO_FILE* nocapture, i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) local_unnamed_addr #2

declare void @error(i32, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #8

declare i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #8

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc zeroext i1 @digest_file(i8*, i8*, i8* nocapture) unnamed_addr #6 !dbg !1671 {
  tail call void @llvm.dbg.value(metadata i32* null, i64 0, metadata !1677, metadata !800), !dbg !1689
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !1685, metadata !800), !dbg !1690
  %4 = load i8, i8* %0, align 1, !dbg !1691, !tbaa !1055
  %5 = icmp eq i8 %4, 45, !dbg !1693
  br i1 %5, label %7, label %6, !dbg !1696

; <label>:6:                                      ; preds = %3
  store i8 0, i8* %2, align 1, !dbg !1698, !tbaa !1699
  br label %13, !dbg !1701

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds i8, i8* %0, i64 1, !dbg !1702
  %9 = load i8, i8* %8, align 1, !dbg !1702, !tbaa !1055
  %10 = icmp eq i8 %9, 0, !dbg !1705
  store i8 0, i8* %2, align 1, !dbg !1698, !tbaa !1699
  br i1 %10, label %11, label %13, !dbg !1701

; <label>:11:                                     ; preds = %7
  store i1 true, i1* @have_read_stdin, align 1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1707, !tbaa !808
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %12, i64 0, metadata !1680, metadata !800), !dbg !1710
  br label %26, !dbg !1711

; <label>:13:                                     ; preds = %6, %7
  %14 = tail call %struct._IO_FILE* @fopen_safer(i8* nonnull %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0)) #10, !dbg !1712
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %14, i64 0, metadata !1680, metadata !800), !dbg !1710
  %15 = icmp eq %struct._IO_FILE* %14, null, !dbg !1714
  br i1 %15, label %16, label %26, !dbg !1716

; <label>:16:                                     ; preds = %13
  %17 = load i1, i1* @ignore_missing, align 1
  %18 = tail call i32* @__errno_location() #1, !dbg !1717
  br i1 %17, label %19, label %23, !dbg !1721

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* %18, align 4, !dbg !1717, !tbaa !1019
  %21 = icmp eq i32 %20, 2, !dbg !1722
  br i1 %21, label %22, label %23, !dbg !1723

; <label>:22:                                     ; preds = %19
  store i8 1, i8* %2, align 1, !dbg !1725, !tbaa !1699
  br label %47, !dbg !1727

; <label>:23:                                     ; preds = %16, %19
  %24 = load i32, i32* %18, align 4, !dbg !1728, !tbaa !1019
  %25 = tail call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* nonnull %0) #10, !dbg !1729
  tail call void (i32, i32, i8*, ...) @error(i32 0, i32 %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), i8* %25) #10, !dbg !1730
  br label %47, !dbg !1732

; <label>:26:                                     ; preds = %13, %11
  %27 = phi i1 [ true, %11 ], [ false, %13 ]
  %28 = phi %struct._IO_FILE* [ %12, %11 ], [ %14, %13 ]
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %28, i64 0, metadata !1680, metadata !800), !dbg !1710
  tail call void @fadvise(%struct._IO_FILE* %28, i32 2) #10, !dbg !1733
  %29 = tail call i32 @sha224_stream(%struct._IO_FILE* %28, i8* %1) #10, !dbg !1734
  tail call void @llvm.dbg.value(metadata i32 %29, i64 0, metadata !1681, metadata !800), !dbg !1735
  %30 = icmp eq i32 %29, 0, !dbg !1736
  br i1 %30, label %39, label %31, !dbg !1738

; <label>:31:                                     ; preds = %26
  %32 = tail call i32* @__errno_location() #1, !dbg !1739
  %33 = load i32, i32* %32, align 4, !dbg !1739, !tbaa !1019
  %34 = tail call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* nonnull %0) #10, !dbg !1741
  tail call void (i32, i32, i8*, ...) @error(i32 0, i32 %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), i8* %34) #10, !dbg !1743
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !1745, !tbaa !808
  %36 = icmp eq %struct._IO_FILE* %28, %35, !dbg !1747
  br i1 %36, label %47, label %37, !dbg !1748

; <label>:37:                                     ; preds = %31
  %38 = tail call i32 @rpl_fclose(%struct._IO_FILE* %28) #10, !dbg !1749
  br label %47, !dbg !1749

; <label>:39:                                     ; preds = %26
  br i1 %27, label %47, label %40, !dbg !1750

; <label>:40:                                     ; preds = %39
  %41 = tail call i32 @rpl_fclose(%struct._IO_FILE* %28) #10, !dbg !1752
  %42 = icmp eq i32 %41, 0, !dbg !1754
  br i1 %42, label %47, label %43, !dbg !1755

; <label>:43:                                     ; preds = %40
  %44 = tail call i32* @__errno_location() #1, !dbg !1757
  %45 = load i32, i32* %44, align 4, !dbg !1757, !tbaa !1019
  %46 = tail call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* nonnull %0) #10, !dbg !1759
  tail call void (i32, i32, i8*, ...) @error(i32 0, i32 %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), i8* %46) #10, !dbg !1761
  br label %47, !dbg !1763

; <label>:47:                                     ; preds = %39, %40, %37, %31, %43, %23, %22
  %48 = phi i1 [ false, %43 ], [ true, %22 ], [ false, %23 ], [ false, %31 ], [ false, %37 ], [ true, %40 ], [ true, %39 ]
  ret i1 %48, !dbg !1764
}

declare i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @print_filename(i8*, i1 zeroext) unnamed_addr #6 !dbg !1765 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1769, metadata !800), !dbg !1771
  tail call void @llvm.dbg.value(metadata i1 %1, i64 0, metadata !1770, metadata !1198), !dbg !1772
  br i1 %1, label %3, label %7, !dbg !1773

; <label>:3:                                      ; preds = %2
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1769, metadata !800), !dbg !1771
  %4 = load i8, i8* %0, align 1, !dbg !1774, !tbaa !1055
  %5 = icmp eq i8 %4, 0, !dbg !1776
  br i1 %5, label %37, label %6, !dbg !1776

; <label>:6:                                      ; preds = %3
  br label %10, !dbg !1777

; <label>:7:                                      ; preds = %2
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1779, !tbaa !808
  %9 = tail call i32 @fputs_unlocked(i8* %0, %struct._IO_FILE* %8) #10, !dbg !1779
  br label %37, !dbg !1782

; <label>:10:                                     ; preds = %6, %32
  %11 = phi i8 [ %34, %32 ], [ %4, %6 ]
  %12 = phi i8* [ %33, %32 ], [ %0, %6 ]
  %13 = sext i8 %11 to i32, !dbg !1777
  switch i32 %13, label %20 [
    i32 10, label %14
    i32 92, label %17
  ], !dbg !1783

; <label>:14:                                     ; preds = %10
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1784, !tbaa !808
  %16 = tail call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.77, i64 0, i64 0), %struct._IO_FILE* %15) #10, !dbg !1784
  br label %32, !dbg !1786

; <label>:17:                                     ; preds = %10
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1787, !tbaa !808
  %19 = tail call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i64 0, i64 0), %struct._IO_FILE* %18) #10, !dbg !1787
  br label %32, !dbg !1788

; <label>:20:                                     ; preds = %10
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !1403, metadata !800) #10, !dbg !1789
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1791, !tbaa !808
  %22 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %21, i64 0, i32 5, !dbg !1791
  %23 = load i8*, i8** %22, align 8, !dbg !1791, !tbaa !1412
  %24 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %21, i64 0, i32 6, !dbg !1791
  %25 = load i8*, i8** %24, align 8, !dbg !1791, !tbaa !1414
  %26 = icmp ult i8* %23, %25, !dbg !1791
  br i1 %26, label %30, label %27, !dbg !1791, !prof !1415

; <label>:27:                                     ; preds = %20
  %28 = and i32 %13, 255, !dbg !1792
  %29 = tail call i32 @__overflow(%struct._IO_FILE* %21, i32 %28) #10, !dbg !1792
  br label %32, !dbg !1792

; <label>:30:                                     ; preds = %20
  %31 = getelementptr inbounds i8, i8* %23, i64 1, !dbg !1793
  store i8* %31, i8** %22, align 8, !dbg !1793, !tbaa !1412
  store i8 %11, i8* %23, align 1, !dbg !1793, !tbaa !1055
  br label %32, !dbg !1793

; <label>:32:                                     ; preds = %30, %27, %17, %14
  %33 = getelementptr inbounds i8, i8* %12, i64 1, !dbg !1794
  tail call void @llvm.dbg.value(metadata i8* %33, i64 0, metadata !1769, metadata !800), !dbg !1771
  tail call void @llvm.dbg.value(metadata i8* %33, i64 0, metadata !1769, metadata !800), !dbg !1771
  %34 = load i8, i8* %33, align 1, !dbg !1774, !tbaa !1055
  %35 = icmp eq i8 %34, 0, !dbg !1776
  br i1 %35, label %36, label %10, !dbg !1776, !llvm.loop !1795

; <label>:36:                                     ; preds = %32
  br label %37, !dbg !1798

; <label>:37:                                     ; preds = %36, %3, %7
  ret void, !dbg !1798
}

; Function Attrs: nounwind readnone
declare i32** @__ctype_tolower_loc() local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @dcngettext(i8*, i8*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define void @close_stdout_set_file_name(i8*) local_unnamed_addr #6 !dbg !1799 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !1801, metadata !800), !dbg !1802
  store i8* %0, i8** @file_name, align 8, !dbg !1803, !tbaa !808
  ret void, !dbg !1804
}

; Function Attrs: nounwind sspstrong uwtable
define void @close_stdout_set_ignore_EPIPE(i1 zeroext) local_unnamed_addr #6 !dbg !1805 {
  %2 = zext i1 %0 to i8
  tail call void @llvm.dbg.value(metadata i1 %0, i64 0, metadata !1809, metadata !1198), !dbg !1810
  store i8 %2, i8* @ignore_EPIPE, align 1, !dbg !1811, !tbaa !1699
  ret void, !dbg !1812
}

; Function Attrs: nounwind sspstrong uwtable
define void @close_stdout() #6 !dbg !1813 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1818, !tbaa !808
  %2 = tail call i32 @close_stream(%struct._IO_FILE* %1) #10, !dbg !1819
  %3 = icmp eq i32 %2, 0, !dbg !1820
  br i1 %3, label %21, label %4, !dbg !1821

; <label>:4:                                      ; preds = %0
  %5 = load i8, i8* @ignore_EPIPE, align 1, !dbg !1822, !tbaa !1699, !range !1824
  %6 = icmp eq i8 %5, 0, !dbg !1822
  %7 = tail call i32* @__errno_location() #1, !dbg !1825
  br i1 %6, label %11, label %8, !dbg !1827

; <label>:8:                                      ; preds = %4
  %9 = load i32, i32* %7, align 4, !dbg !1828, !tbaa !1019
  %10 = icmp eq i32 %9, 32, !dbg !1830
  br i1 %10, label %21, label %11, !dbg !1831

; <label>:11:                                     ; preds = %4, %8
  %12 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32 5) #10, !dbg !1833
  tail call void @llvm.dbg.value(metadata i8* %12, i64 0, metadata !1815, metadata !800), !dbg !1834
  %13 = load i8*, i8** @file_name, align 8, !dbg !1835, !tbaa !808
  %14 = icmp eq i8* %13, null, !dbg !1835
  %15 = load i32, i32* %7, align 4, !tbaa !1019
  br i1 %14, label %18, label %16, !dbg !1836

; <label>:16:                                     ; preds = %11
  %17 = tail call i8* @quotearg_colon(i8* nonnull %13) #10, !dbg !1837
  tail call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.40, i64 0, i64 0), i8* %17, i8* %12) #10, !dbg !1839
  br label %19, !dbg !1841

; <label>:18:                                     ; preds = %11
  tail call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.41, i64 0, i64 0), i8* %12) #10, !dbg !1842
  br label %19

; <label>:19:                                     ; preds = %18, %16
  %20 = load volatile i32, i32* @exit_failure, align 4, !dbg !1843, !tbaa !1019
  tail call void @_exit(i32 %20) #14, !dbg !1844
  unreachable, !dbg !1844

; <label>:21:                                     ; preds = %0, %8
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !1845, !tbaa !808
  %23 = tail call i32 @close_stream(%struct._IO_FILE* %22) #10, !dbg !1847
  %24 = icmp eq i32 %23, 0, !dbg !1848
  br i1 %24, label %27, label %25, !dbg !1849

; <label>:25:                                     ; preds = %21
  %26 = load volatile i32, i32* @exit_failure, align 4, !dbg !1850, !tbaa !1019
  tail call void @_exit(i32 %26) #14, !dbg !1851
  unreachable, !dbg !1851

; <label>:27:                                     ; preds = %21
  ret void, !dbg !1852
}

; Function Attrs: noreturn
declare void @_exit(i32) local_unnamed_addr #9

; Function Attrs: nounwind sspstrong uwtable
define void @sha256_init_ctx(%struct.sha256_ctx* nocapture) local_unnamed_addr #6 !dbg !1853 {
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !1870, metadata !800), !dbg !1871
  %2 = bitcast %struct.sha256_ctx* %0 to <4 x i32>*, !dbg !1872
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %2, align 8, !dbg !1872, !tbaa !1019
  %3 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 4, !dbg !1873
  %4 = bitcast i32* %3 to <4 x i32>*, !dbg !1874
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %4, align 8, !dbg !1874, !tbaa !1019
  %5 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 1, i64 0, !dbg !1875
  %6 = bitcast i32* %5 to i8*, !dbg !1876
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 16, i32 8, i1 false), !dbg !1877
  ret void, !dbg !1876
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #7

; Function Attrs: nounwind sspstrong uwtable
define void @sha224_init_ctx(%struct.sha256_ctx* nocapture) local_unnamed_addr #6 !dbg !1878 {
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !1880, metadata !800), !dbg !1881
  %2 = bitcast %struct.sha256_ctx* %0 to <4 x i32>*, !dbg !1882
  store <4 x i32> <i32 -1056596264, i32 914150663, i32 812702999, i32 -150054599>, <4 x i32>* %2, align 8, !dbg !1882, !tbaa !1019
  %3 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 4, !dbg !1883
  %4 = bitcast i32* %3 to <4 x i32>*, !dbg !1884
  store <4 x i32> <i32 -4191439, i32 1750603025, i32 1694076839, i32 -1090891868>, <4 x i32>* %4, align 8, !dbg !1884, !tbaa !1019
  %5 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 1, i64 0, !dbg !1885
  %6 = bitcast i32* %5 to i8*, !dbg !1886
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 16, i32 8, i1 false), !dbg !1887
  ret void, !dbg !1886
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @sha256_read_ctx(%struct.sha256_ctx* nocapture readonly, i8* returned) local_unnamed_addr #6 !dbg !1888 {
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !1894, metadata !800), !dbg !1898
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1895, metadata !800), !dbg !1899
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1897, metadata !800), !dbg !1900
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1896, metadata !800), !dbg !1901
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1896, metadata !800), !dbg !1901
  %3 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 0, !dbg !1902
  %4 = load i32, i32* %3, align 4, !dbg !1902, !tbaa !1019
  %5 = tail call i32 @llvm.bswap.i32(i32 %4), !dbg !1902
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1911
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1913
  %6 = bitcast i8* %1 to i32*, !dbg !1914
  store i32 %5, i32* %6, align 1, !dbg !1914
  %7 = getelementptr inbounds i8, i8* %1, i64 4, !dbg !1915
  %8 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 1, !dbg !1902
  %9 = load i32, i32* %8, align 4, !dbg !1902, !tbaa !1019
  %10 = tail call i32 @llvm.bswap.i32(i32 %9), !dbg !1902
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1911
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1913
  %11 = bitcast i8* %7 to i32*, !dbg !1914
  store i32 %10, i32* %11, align 1, !dbg !1914
  %12 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !1915
  %13 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 2, !dbg !1902
  %14 = load i32, i32* %13, align 4, !dbg !1902, !tbaa !1019
  %15 = tail call i32 @llvm.bswap.i32(i32 %14), !dbg !1902
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1911
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1913
  %16 = bitcast i8* %12 to i32*, !dbg !1914
  store i32 %15, i32* %16, align 1, !dbg !1914
  %17 = getelementptr inbounds i8, i8* %1, i64 12, !dbg !1915
  %18 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 3, !dbg !1902
  %19 = load i32, i32* %18, align 4, !dbg !1902, !tbaa !1019
  %20 = tail call i32 @llvm.bswap.i32(i32 %19), !dbg !1902
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1911
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1913
  %21 = bitcast i8* %17 to i32*, !dbg !1914
  store i32 %20, i32* %21, align 1, !dbg !1914
  %22 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !1915
  %23 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 4, !dbg !1902
  %24 = load i32, i32* %23, align 4, !dbg !1902, !tbaa !1019
  %25 = tail call i32 @llvm.bswap.i32(i32 %24), !dbg !1902
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1911
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1913
  %26 = bitcast i8* %22 to i32*, !dbg !1914
  store i32 %25, i32* %26, align 1, !dbg !1914
  %27 = getelementptr inbounds i8, i8* %1, i64 20, !dbg !1915
  %28 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 5, !dbg !1902
  %29 = load i32, i32* %28, align 4, !dbg !1902, !tbaa !1019
  %30 = tail call i32 @llvm.bswap.i32(i32 %29), !dbg !1902
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1911
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1913
  %31 = bitcast i8* %27 to i32*, !dbg !1914
  store i32 %30, i32* %31, align 1, !dbg !1914
  %32 = getelementptr inbounds i8, i8* %1, i64 24, !dbg !1915
  %33 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 6, !dbg !1902
  %34 = load i32, i32* %33, align 4, !dbg !1902, !tbaa !1019
  %35 = tail call i32 @llvm.bswap.i32(i32 %34), !dbg !1902
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1911
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1913
  %36 = bitcast i8* %32 to i32*, !dbg !1914
  store i32 %35, i32* %36, align 1, !dbg !1914
  %37 = getelementptr inbounds i8, i8* %1, i64 28, !dbg !1915
  %38 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 7, !dbg !1902
  %39 = load i32, i32* %38, align 4, !dbg !1902, !tbaa !1019
  %40 = tail call i32 @llvm.bswap.i32(i32 %39), !dbg !1902
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1911
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1913
  %41 = bitcast i8* %37 to i32*, !dbg !1914
  store i32 %40, i32* %41, align 1, !dbg !1914
  ret i8* %1, !dbg !1916
}

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nounwind sspstrong uwtable
define i8* @sha224_read_ctx(%struct.sha256_ctx* nocapture readonly, i8* returned) local_unnamed_addr #6 !dbg !1917 {
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !1919, metadata !800), !dbg !1923
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1920, metadata !800), !dbg !1924
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1922, metadata !800), !dbg !1925
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1921, metadata !800), !dbg !1926
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1921, metadata !800), !dbg !1926
  %3 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 0, !dbg !1927
  %4 = load i32, i32* %3, align 4, !dbg !1927, !tbaa !1019
  %5 = tail call i32 @llvm.bswap.i32(i32 %4), !dbg !1927
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1930
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1932
  %6 = bitcast i8* %1 to i32*, !dbg !1933
  store i32 %5, i32* %6, align 1, !dbg !1933
  %7 = getelementptr inbounds i8, i8* %1, i64 4, !dbg !1934
  %8 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 1, !dbg !1927
  %9 = load i32, i32* %8, align 4, !dbg !1927, !tbaa !1019
  %10 = tail call i32 @llvm.bswap.i32(i32 %9), !dbg !1927
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1930
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1932
  %11 = bitcast i8* %7 to i32*, !dbg !1933
  store i32 %10, i32* %11, align 1, !dbg !1933
  %12 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !1934
  %13 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 2, !dbg !1927
  %14 = load i32, i32* %13, align 4, !dbg !1927, !tbaa !1019
  %15 = tail call i32 @llvm.bswap.i32(i32 %14), !dbg !1927
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1930
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1932
  %16 = bitcast i8* %12 to i32*, !dbg !1933
  store i32 %15, i32* %16, align 1, !dbg !1933
  %17 = getelementptr inbounds i8, i8* %1, i64 12, !dbg !1934
  %18 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 3, !dbg !1927
  %19 = load i32, i32* %18, align 4, !dbg !1927, !tbaa !1019
  %20 = tail call i32 @llvm.bswap.i32(i32 %19), !dbg !1927
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1930
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1932
  %21 = bitcast i8* %17 to i32*, !dbg !1933
  store i32 %20, i32* %21, align 1, !dbg !1933
  %22 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !1934
  %23 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 4, !dbg !1927
  %24 = load i32, i32* %23, align 4, !dbg !1927, !tbaa !1019
  %25 = tail call i32 @llvm.bswap.i32(i32 %24), !dbg !1927
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1930
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1932
  %26 = bitcast i8* %22 to i32*, !dbg !1933
  store i32 %25, i32* %26, align 1, !dbg !1933
  %27 = getelementptr inbounds i8, i8* %1, i64 20, !dbg !1934
  %28 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 5, !dbg !1927
  %29 = load i32, i32* %28, align 4, !dbg !1927, !tbaa !1019
  %30 = tail call i32 @llvm.bswap.i32(i32 %29), !dbg !1927
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1930
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1932
  %31 = bitcast i8* %27 to i32*, !dbg !1933
  store i32 %30, i32* %31, align 1, !dbg !1933
  %32 = getelementptr inbounds i8, i8* %1, i64 24, !dbg !1934
  %33 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 6, !dbg !1927
  %34 = load i32, i32* %33, align 4, !dbg !1927, !tbaa !1019
  %35 = tail call i32 @llvm.bswap.i32(i32 %34), !dbg !1927
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800), !dbg !1930
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800), !dbg !1932
  %36 = bitcast i8* %32 to i32*, !dbg !1933
  store i32 %35, i32* %36, align 1, !dbg !1933
  ret i8* %1, !dbg !1935
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @sha256_finish_ctx(%struct.sha256_ctx*, i8* returned) local_unnamed_addr #6 !dbg !1936 {
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !1940, metadata !800), !dbg !1942
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1941, metadata !800), !dbg !1943
  tail call fastcc void @sha256_conclude_ctx(%struct.sha256_ctx* %0), !dbg !1944
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !1894, metadata !800) #10, !dbg !1945
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1895, metadata !800) #10, !dbg !1947
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1897, metadata !800) #10, !dbg !1948
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1896, metadata !800) #10, !dbg !1949
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1896, metadata !800) #10, !dbg !1949
  %3 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 0, !dbg !1950
  %4 = load i32, i32* %3, align 4, !dbg !1950, !tbaa !1019
  %5 = tail call i32 @llvm.bswap.i32(i32 %4) #10, !dbg !1950
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !1953
  %6 = bitcast i8* %1 to i32*, !dbg !1954
  store i32 %5, i32* %6, align 1, !dbg !1954
  %7 = getelementptr inbounds i8, i8* %1, i64 4, !dbg !1955
  %8 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 1, !dbg !1950
  %9 = load i32, i32* %8, align 4, !dbg !1950, !tbaa !1019
  %10 = tail call i32 @llvm.bswap.i32(i32 %9) #10, !dbg !1950
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !1953
  %11 = bitcast i8* %7 to i32*, !dbg !1954
  store i32 %10, i32* %11, align 1, !dbg !1954
  %12 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !1955
  %13 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 2, !dbg !1950
  %14 = load i32, i32* %13, align 4, !dbg !1950, !tbaa !1019
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #10, !dbg !1950
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !1953
  %16 = bitcast i8* %12 to i32*, !dbg !1954
  store i32 %15, i32* %16, align 1, !dbg !1954
  %17 = getelementptr inbounds i8, i8* %1, i64 12, !dbg !1955
  %18 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 3, !dbg !1950
  %19 = load i32, i32* %18, align 4, !dbg !1950, !tbaa !1019
  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #10, !dbg !1950
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !1953
  %21 = bitcast i8* %17 to i32*, !dbg !1954
  store i32 %20, i32* %21, align 1, !dbg !1954
  %22 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !1955
  %23 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 4, !dbg !1950
  %24 = load i32, i32* %23, align 4, !dbg !1950, !tbaa !1019
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #10, !dbg !1950
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !1953
  %26 = bitcast i8* %22 to i32*, !dbg !1954
  store i32 %25, i32* %26, align 1, !dbg !1954
  %27 = getelementptr inbounds i8, i8* %1, i64 20, !dbg !1955
  %28 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 5, !dbg !1950
  %29 = load i32, i32* %28, align 4, !dbg !1950, !tbaa !1019
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #10, !dbg !1950
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !1953
  %31 = bitcast i8* %27 to i32*, !dbg !1954
  store i32 %30, i32* %31, align 1, !dbg !1954
  %32 = getelementptr inbounds i8, i8* %1, i64 24, !dbg !1955
  %33 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 6, !dbg !1950
  %34 = load i32, i32* %33, align 4, !dbg !1950, !tbaa !1019
  %35 = tail call i32 @llvm.bswap.i32(i32 %34) #10, !dbg !1950
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !1953
  %36 = bitcast i8* %32 to i32*, !dbg !1954
  store i32 %35, i32* %36, align 1, !dbg !1954
  %37 = getelementptr inbounds i8, i8* %1, i64 28, !dbg !1955
  %38 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 7, !dbg !1950
  %39 = load i32, i32* %38, align 4, !dbg !1950, !tbaa !1019
  %40 = tail call i32 @llvm.bswap.i32(i32 %39) #10, !dbg !1950
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !1951
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !1953
  %41 = bitcast i8* %37 to i32*, !dbg !1954
  store i32 %40, i32* %41, align 1, !dbg !1954
  ret i8* %1, !dbg !1956
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc void @sha256_conclude_ctx(%struct.sha256_ctx*) unnamed_addr #6 !dbg !1957 {
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !1959, metadata !800), !dbg !1962
  %2 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 2, !dbg !1963
  %3 = load i64, i64* %2, align 8, !dbg !1963, !tbaa !1964
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !1960, metadata !800), !dbg !1966
  %4 = icmp ult i64 %3, 56, !dbg !1967
  %5 = select i1 %4, i64 16, i64 32, !dbg !1968
  tail call void @llvm.dbg.value(metadata i64 %5, i64 0, metadata !1961, metadata !800), !dbg !1969
  %6 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 1, i64 0, !dbg !1970
  %7 = load i32, i32* %6, align 8, !dbg !1971, !tbaa !1019
  %8 = zext i32 %7 to i64, !dbg !1971
  %9 = add i64 %8, %3, !dbg !1971
  %10 = trunc i64 %9 to i32, !dbg !1971
  store i32 %10, i32* %6, align 8, !dbg !1971, !tbaa !1019
  %11 = and i64 %9, 4294967295, !dbg !1972
  %12 = icmp ult i64 %11, %3, !dbg !1974
  %13 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 1, i64 1
  %14 = load i32, i32* %13, align 4, !tbaa !1019
  br i1 %12, label %15, label %17, !dbg !1975

; <label>:15:                                     ; preds = %1
  %16 = add i32 %14, 1, !dbg !1976
  store i32 %16, i32* %13, align 4, !dbg !1976, !tbaa !1019
  br label %17, !dbg !1976

; <label>:17:                                     ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ %14, %1 ], !dbg !1977
  %19 = add nsw i64 %5, -2, !dbg !1978
  %20 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 3, i64 %19, !dbg !1979
  %21 = shl i32 %18, 3, !dbg !1977
  %22 = lshr i32 %10, 29, !dbg !1977
  %23 = or i32 %22, %21, !dbg !1977
  %24 = shl i32 %23, 24, !dbg !1977
  %25 = shl i32 %18, 11, !dbg !1977
  %26 = and i32 %25, 16711680, !dbg !1977
  %27 = lshr i32 %18, 5, !dbg !1977
  %28 = and i32 %27, 65280, !dbg !1977
  %29 = lshr i32 %18, 21, !dbg !1977
  %30 = and i32 %29, 255, !dbg !1977
  %31 = or i32 %28, %26, !dbg !1977
  %32 = or i32 %31, %30, !dbg !1977
  %33 = or i32 %32, %24, !dbg !1977
  tail call void @llvm.dbg.value(metadata i32 %33, i64 0, metadata !1910, metadata !800), !dbg !1980
  store i32 %33, i32* %20, align 1, !dbg !1982
  %34 = add nsw i64 %5, -1, !dbg !1983
  %35 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 3, i64 %34, !dbg !1984
  %36 = shl i32 %10, 27, !dbg !1985
  %37 = shl i32 %10, 11, !dbg !1985
  %38 = and i32 %37, 16711680, !dbg !1985
  %39 = or i32 %38, %36, !dbg !1985
  %40 = lshr i32 %10, 5, !dbg !1985
  %41 = and i32 %40, 65280, !dbg !1985
  %42 = or i32 %39, %41, !dbg !1985
  %43 = lshr i32 %10, 21, !dbg !1985
  %44 = and i32 %43, 255, !dbg !1985
  %45 = or i32 %42, %44, !dbg !1985
  tail call void @llvm.dbg.value(metadata i32 %45, i64 0, metadata !1910, metadata !800), !dbg !1986
  store i32 %45, i32* %35, align 1, !dbg !1988
  %46 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 3, i64 0, !dbg !1989
  %47 = bitcast i32* %46 to i8*, !dbg !1989
  %48 = getelementptr inbounds i8, i8* %47, i64 %3, !dbg !1989
  %49 = shl nsw i64 %19, 2, !dbg !1990
  %50 = sub i64 %49, %3, !dbg !1991
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @fillbuf, i64 0, i64 0), i64 %50, i32 1, i1 false), !dbg !1992
  %51 = shl nuw nsw i64 %5, 2, !dbg !1993
  tail call void @sha256_process_block(i8* %47, i64 %51, %struct.sha256_ctx* nonnull %0), !dbg !1994
  ret void, !dbg !1995
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: nounwind sspstrong uwtable
define void @sha256_process_block(i8* readonly, i64, %struct.sha256_ctx* nocapture) local_unnamed_addr #6 !dbg !1996 {
  %4 = alloca [16 x i32], align 16
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2000, metadata !800), !dbg !2023
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !2001, metadata !800), !dbg !2024
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %2, i64 0, metadata !2002, metadata !800), !dbg !2025
  %5 = bitcast i8* %0 to i32*, !dbg !2026
  tail call void @llvm.dbg.value(metadata i32* %5, i64 0, metadata !2003, metadata !800), !dbg !2027
  %6 = lshr i64 %1, 2, !dbg !2028
  tail call void @llvm.dbg.value(metadata i64 %6, i64 0, metadata !2005, metadata !800), !dbg !2029
  %7 = getelementptr inbounds i32, i32* %5, i64 %6, !dbg !2030
  tail call void @llvm.dbg.value(metadata i32* %7, i64 0, metadata !2006, metadata !800), !dbg !2031
  %8 = bitcast [16 x i32]* %4 to i8*, !dbg !2032
  call void @llvm.lifetime.start(i64 64, i8* nonnull %8) #10, !dbg !2032
  tail call void @llvm.dbg.declare(metadata [16 x i32]* %4, metadata !2007, metadata !800), !dbg !2033
  %9 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 0, i64 0, !dbg !2034
  %10 = load i32, i32* %9, align 8, !dbg !2034, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !2009, metadata !800), !dbg !2035
  %11 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 0, i64 1, !dbg !2036
  %12 = load i32, i32* %11, align 4, !dbg !2036, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !2010, metadata !800), !dbg !2037
  %13 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 0, i64 2, !dbg !2038
  %14 = load i32, i32* %13, align 8, !dbg !2038, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !2011, metadata !800), !dbg !2039
  %15 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 0, i64 3, !dbg !2040
  %16 = load i32, i32* %15, align 4, !dbg !2040, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !2012, metadata !800), !dbg !2041
  %17 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 0, i64 4, !dbg !2042
  %18 = load i32, i32* %17, align 8, !dbg !2042, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !2013, metadata !800), !dbg !2043
  %19 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 0, i64 5, !dbg !2044
  %20 = load i32, i32* %19, align 4, !dbg !2044, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !2014, metadata !800), !dbg !2045
  %21 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 0, i64 6, !dbg !2046
  %22 = load i32, i32* %21, align 8, !dbg !2046, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !2015, metadata !800), !dbg !2047
  %23 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 0, i64 7, !dbg !2048
  %24 = load i32, i32* %23, align 4, !dbg !2048, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !2016, metadata !800), !dbg !2049
  %25 = trunc i64 %1 to i32, !dbg !2050
  tail call void @llvm.dbg.value(metadata i32 %25, i64 0, metadata !2017, metadata !800), !dbg !2051
  %26 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 1, i64 0, !dbg !2052
  %27 = load i32, i32* %26, align 8, !dbg !2053, !tbaa !1019
  %28 = add i32 %27, %25, !dbg !2053
  store i32 %28, i32* %26, align 8, !dbg !2053, !tbaa !1019
  %29 = lshr i64 %1, 32, !dbg !2054
  %30 = icmp ult i32 %28, %25, !dbg !2055
  %31 = zext i1 %30 to i64, !dbg !2056
  %32 = add nuw nsw i64 %31, %29, !dbg !2057
  %33 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 1, i64 1, !dbg !2058
  %34 = load i32, i32* %33, align 4, !dbg !2059, !tbaa !1019
  %35 = zext i32 %34 to i64, !dbg !2059
  %36 = add nuw nsw i64 %32, %35, !dbg !2059
  %37 = trunc i64 %36 to i32, !dbg !2059
  store i32 %37, i32* %33, align 4, !dbg !2059, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32* %5, i64 0, metadata !2003, metadata !800), !dbg !2027
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !2009, metadata !800), !dbg !2035
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !2010, metadata !800), !dbg !2037
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !2011, metadata !800), !dbg !2039
  tail call void @llvm.dbg.value(metadata i32 %24, i64 0, metadata !2016, metadata !800), !dbg !2049
  tail call void @llvm.dbg.value(metadata i32 %22, i64 0, metadata !2015, metadata !800), !dbg !2047
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !2014, metadata !800), !dbg !2045
  tail call void @llvm.dbg.value(metadata i32 %18, i64 0, metadata !2013, metadata !800), !dbg !2043
  tail call void @llvm.dbg.value(metadata i32 %16, i64 0, metadata !2012, metadata !800), !dbg !2041
  %38 = icmp ult i32* %5, %7, !dbg !2060
  br i1 %38, label %39, label %3527, !dbg !2062

; <label>:39:                                     ; preds = %3
  %40 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 0
  %41 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 1
  %42 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 2
  %43 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 3
  %44 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 4
  %45 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 5
  %46 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 6
  %47 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 7
  %48 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 8
  %49 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 9
  %50 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 10
  %51 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 11
  %52 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 12
  %53 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 13
  %54 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 14
  %55 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 15
  %56 = bitcast [16 x i32]* %4 to <4 x i32>*
  %57 = bitcast i32* %44 to <4 x i32>*
  %58 = bitcast i32* %48 to <4 x i32>*
  %59 = bitcast i32* %52 to <4 x i32>*
  br label %60, !dbg !2062

; <label>:60:                                     ; preds = %39, %60
  %61 = phi i32* [ %5, %39 ], [ %85, %60 ]
  %62 = phi i32 [ %10, %39 ], [ %3509, %60 ]
  %63 = phi i32 [ %12, %39 ], [ %3511, %60 ]
  %64 = phi i32 [ %14, %39 ], [ %3513, %60 ]
  %65 = phi i32 [ %24, %39 ], [ %3524, %60 ]
  %66 = phi i32 [ %22, %39 ], [ %3522, %60 ]
  %67 = phi i32 [ %20, %39 ], [ %3520, %60 ]
  %68 = phi i32 [ %18, %39 ], [ %3518, %60 ]
  %69 = phi i32 [ %16, %39 ], [ %3515, %60 ]
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2022, metadata !800), !dbg !2063
  tail call void @llvm.dbg.value(metadata i32* %61, i64 0, metadata !2003, metadata !800), !dbg !2027
  %70 = bitcast i32* %61 to <4 x i32>*, !dbg !2064
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !dbg !2064, !tbaa !1019
  %72 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %71), !dbg !2064
  store <4 x i32> %72, <4 x i32>* %56, align 16, !dbg !2068, !tbaa !1019
  %73 = getelementptr inbounds i32, i32* %61, i64 4, !dbg !2069
  %74 = bitcast i32* %73 to <4 x i32>*, !dbg !2064
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !dbg !2064, !tbaa !1019
  %76 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %75), !dbg !2064
  store <4 x i32> %76, <4 x i32>* %57, align 16, !dbg !2068, !tbaa !1019
  %77 = getelementptr inbounds i32, i32* %61, i64 8, !dbg !2069
  %78 = bitcast i32* %77 to <4 x i32>*, !dbg !2064
  %79 = load <4 x i32>, <4 x i32>* %78, align 4, !dbg !2064, !tbaa !1019
  %80 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %79), !dbg !2064
  store <4 x i32> %80, <4 x i32>* %58, align 16, !dbg !2068, !tbaa !1019
  %81 = getelementptr inbounds i32, i32* %61, i64 12, !dbg !2069
  %82 = bitcast i32* %81 to <4 x i32>*, !dbg !2064
  %83 = load <4 x i32>, <4 x i32>* %82, align 4, !dbg !2064, !tbaa !1019
  %84 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %83), !dbg !2064
  store <4 x i32> %84, <4 x i32>* %59, align 16, !dbg !2068, !tbaa !1019
  %85 = getelementptr i32, i32* %61, i64 16, !dbg !2070
  %86 = shl i32 %62, 30, !dbg !2072
  %87 = lshr i32 %62, 2, !dbg !2072
  %88 = or i32 %86, %87, !dbg !2072
  %89 = shl i32 %62, 19, !dbg !2072
  %90 = lshr i32 %62, 13, !dbg !2072
  %91 = or i32 %89, %90, !dbg !2072
  %92 = xor i32 %88, %91, !dbg !2072
  %93 = shl i32 %62, 10, !dbg !2072
  %94 = lshr i32 %62, 22, !dbg !2072
  %95 = or i32 %93, %94, !dbg !2072
  %96 = xor i32 %92, %95, !dbg !2072
  %97 = and i32 %62, %63, !dbg !2072
  %98 = or i32 %62, %63, !dbg !2072
  %99 = and i32 %98, %64, !dbg !2072
  %100 = or i32 %99, %97, !dbg !2072
  %101 = add i32 %96, %100, !dbg !2072
  tail call void @llvm.dbg.value(metadata i32 %101, i64 0, metadata !2020, metadata !800), !dbg !2075
  %102 = shl i32 %68, 26, !dbg !2072
  %103 = lshr i32 %68, 6, !dbg !2072
  %104 = or i32 %102, %103, !dbg !2072
  %105 = shl i32 %68, 21, !dbg !2072
  %106 = lshr i32 %68, 11, !dbg !2072
  %107 = or i32 %105, %106, !dbg !2072
  %108 = xor i32 %104, %107, !dbg !2072
  %109 = shl i32 %68, 7, !dbg !2072
  %110 = lshr i32 %68, 25, !dbg !2072
  %111 = or i32 %109, %110, !dbg !2072
  %112 = xor i32 %108, %111, !dbg !2072
  %113 = xor i32 %66, %67, !dbg !2072
  %114 = and i32 %113, %68, !dbg !2072
  %115 = xor i32 %114, %66, !dbg !2072
  %116 = add i32 %65, 1116352408, !dbg !2072
  %117 = add i32 %116, %112, !dbg !2072
  %118 = add i32 %117, %115, !dbg !2072
  %119 = extractelement <4 x i32> %72, i32 0, !dbg !2072
  %120 = add i32 %118, %119, !dbg !2072
  tail call void @llvm.dbg.value(metadata i32 %120, i64 0, metadata !2021, metadata !800), !dbg !2076
  %121 = add i32 %120, %69, !dbg !2072
  tail call void @llvm.dbg.value(metadata i32 %121, i64 0, metadata !2012, metadata !800), !dbg !2041
  %122 = add i32 %101, %120, !dbg !2072
  tail call void @llvm.dbg.value(metadata i32 %122, i64 0, metadata !2016, metadata !800), !dbg !2049
  %123 = shl i32 %122, 30, !dbg !2077
  %124 = lshr i32 %122, 2, !dbg !2077
  %125 = or i32 %123, %124, !dbg !2077
  %126 = shl i32 %122, 19, !dbg !2077
  %127 = lshr i32 %122, 13, !dbg !2077
  %128 = or i32 %126, %127, !dbg !2077
  %129 = xor i32 %125, %128, !dbg !2077
  %130 = shl i32 %122, 10, !dbg !2077
  %131 = lshr i32 %122, 22, !dbg !2077
  %132 = or i32 %130, %131, !dbg !2077
  %133 = xor i32 %129, %132, !dbg !2077
  %134 = and i32 %122, %62, !dbg !2077
  %135 = or i32 %122, %62, !dbg !2077
  %136 = and i32 %135, %63, !dbg !2077
  %137 = or i32 %136, %134, !dbg !2077
  %138 = add i32 %133, %137, !dbg !2077
  tail call void @llvm.dbg.value(metadata i32 %138, i64 0, metadata !2020, metadata !800), !dbg !2075
  %139 = shl i32 %121, 26, !dbg !2077
  %140 = lshr i32 %121, 6, !dbg !2077
  %141 = or i32 %139, %140, !dbg !2077
  %142 = shl i32 %121, 21, !dbg !2077
  %143 = lshr i32 %121, 11, !dbg !2077
  %144 = or i32 %142, %143, !dbg !2077
  %145 = xor i32 %141, %144, !dbg !2077
  %146 = shl i32 %121, 7, !dbg !2077
  %147 = lshr i32 %121, 25, !dbg !2077
  %148 = or i32 %146, %147, !dbg !2077
  %149 = xor i32 %145, %148, !dbg !2077
  %150 = xor i32 %67, %68, !dbg !2077
  %151 = and i32 %121, %150, !dbg !2077
  %152 = xor i32 %151, %67, !dbg !2077
  %153 = load i32, i32* %41, align 4, !dbg !2077, !tbaa !1019
  %154 = add i32 %66, 1899447441, !dbg !2077
  %155 = add i32 %154, %153, !dbg !2077
  %156 = add i32 %155, %152, !dbg !2077
  %157 = add i32 %156, %149, !dbg !2077
  tail call void @llvm.dbg.value(metadata i32 %157, i64 0, metadata !2021, metadata !800), !dbg !2076
  %158 = add i32 %157, %64, !dbg !2077
  tail call void @llvm.dbg.value(metadata i32 %158, i64 0, metadata !2011, metadata !800), !dbg !2039
  %159 = add i32 %138, %157, !dbg !2077
  tail call void @llvm.dbg.value(metadata i32 %159, i64 0, metadata !2015, metadata !800), !dbg !2047
  %160 = shl i32 %159, 30, !dbg !2080
  %161 = lshr i32 %159, 2, !dbg !2080
  %162 = or i32 %160, %161, !dbg !2080
  %163 = shl i32 %159, 19, !dbg !2080
  %164 = lshr i32 %159, 13, !dbg !2080
  %165 = or i32 %163, %164, !dbg !2080
  %166 = xor i32 %162, %165, !dbg !2080
  %167 = shl i32 %159, 10, !dbg !2080
  %168 = lshr i32 %159, 22, !dbg !2080
  %169 = or i32 %167, %168, !dbg !2080
  %170 = xor i32 %166, %169, !dbg !2080
  %171 = and i32 %159, %122, !dbg !2080
  %172 = or i32 %159, %122, !dbg !2080
  %173 = and i32 %172, %62, !dbg !2080
  %174 = or i32 %173, %171, !dbg !2080
  %175 = add i32 %170, %174, !dbg !2080
  tail call void @llvm.dbg.value(metadata i32 %175, i64 0, metadata !2020, metadata !800), !dbg !2075
  %176 = shl i32 %158, 26, !dbg !2080
  %177 = lshr i32 %158, 6, !dbg !2080
  %178 = or i32 %176, %177, !dbg !2080
  %179 = shl i32 %158, 21, !dbg !2080
  %180 = lshr i32 %158, 11, !dbg !2080
  %181 = or i32 %179, %180, !dbg !2080
  %182 = xor i32 %178, %181, !dbg !2080
  %183 = shl i32 %158, 7, !dbg !2080
  %184 = lshr i32 %158, 25, !dbg !2080
  %185 = or i32 %183, %184, !dbg !2080
  %186 = xor i32 %182, %185, !dbg !2080
  %187 = xor i32 %121, %68, !dbg !2080
  %188 = and i32 %158, %187, !dbg !2080
  %189 = xor i32 %188, %68, !dbg !2080
  %190 = load i32, i32* %42, align 8, !dbg !2080, !tbaa !1019
  %191 = add i32 %67, -1245643825, !dbg !2080
  %192 = add i32 %191, %190, !dbg !2080
  %193 = add i32 %192, %189, !dbg !2080
  %194 = add i32 %193, %186, !dbg !2080
  tail call void @llvm.dbg.value(metadata i32 %194, i64 0, metadata !2021, metadata !800), !dbg !2076
  %195 = add i32 %194, %63, !dbg !2080
  tail call void @llvm.dbg.value(metadata i32 %195, i64 0, metadata !2010, metadata !800), !dbg !2037
  %196 = add i32 %175, %194, !dbg !2080
  tail call void @llvm.dbg.value(metadata i32 %196, i64 0, metadata !2014, metadata !800), !dbg !2045
  %197 = shl i32 %196, 30, !dbg !2083
  %198 = lshr i32 %196, 2, !dbg !2083
  %199 = or i32 %197, %198, !dbg !2083
  %200 = shl i32 %196, 19, !dbg !2083
  %201 = lshr i32 %196, 13, !dbg !2083
  %202 = or i32 %200, %201, !dbg !2083
  %203 = xor i32 %199, %202, !dbg !2083
  %204 = shl i32 %196, 10, !dbg !2083
  %205 = lshr i32 %196, 22, !dbg !2083
  %206 = or i32 %204, %205, !dbg !2083
  %207 = xor i32 %203, %206, !dbg !2083
  %208 = and i32 %196, %159, !dbg !2083
  %209 = or i32 %196, %159, !dbg !2083
  %210 = and i32 %209, %122, !dbg !2083
  %211 = or i32 %210, %208, !dbg !2083
  %212 = add i32 %207, %211, !dbg !2083
  tail call void @llvm.dbg.value(metadata i32 %212, i64 0, metadata !2020, metadata !800), !dbg !2075
  %213 = shl i32 %195, 26, !dbg !2083
  %214 = lshr i32 %195, 6, !dbg !2083
  %215 = or i32 %213, %214, !dbg !2083
  %216 = shl i32 %195, 21, !dbg !2083
  %217 = lshr i32 %195, 11, !dbg !2083
  %218 = or i32 %216, %217, !dbg !2083
  %219 = xor i32 %215, %218, !dbg !2083
  %220 = shl i32 %195, 7, !dbg !2083
  %221 = lshr i32 %195, 25, !dbg !2083
  %222 = or i32 %220, %221, !dbg !2083
  %223 = xor i32 %219, %222, !dbg !2083
  %224 = xor i32 %158, %121, !dbg !2083
  %225 = and i32 %195, %224, !dbg !2083
  %226 = xor i32 %225, %121, !dbg !2083
  %227 = load i32, i32* %43, align 4, !dbg !2083, !tbaa !1019
  %228 = add i32 %68, -373957723, !dbg !2083
  %229 = add i32 %228, %227, !dbg !2083
  %230 = add i32 %229, %226, !dbg !2083
  %231 = add i32 %230, %223, !dbg !2083
  tail call void @llvm.dbg.value(metadata i32 %231, i64 0, metadata !2021, metadata !800), !dbg !2076
  %232 = add i32 %231, %62, !dbg !2083
  tail call void @llvm.dbg.value(metadata i32 %232, i64 0, metadata !2009, metadata !800), !dbg !2035
  %233 = add i32 %212, %231, !dbg !2083
  tail call void @llvm.dbg.value(metadata i32 %233, i64 0, metadata !2013, metadata !800), !dbg !2043
  %234 = shl i32 %233, 30, !dbg !2086
  %235 = lshr i32 %233, 2, !dbg !2086
  %236 = or i32 %234, %235, !dbg !2086
  %237 = shl i32 %233, 19, !dbg !2086
  %238 = lshr i32 %233, 13, !dbg !2086
  %239 = or i32 %237, %238, !dbg !2086
  %240 = xor i32 %236, %239, !dbg !2086
  %241 = shl i32 %233, 10, !dbg !2086
  %242 = lshr i32 %233, 22, !dbg !2086
  %243 = or i32 %241, %242, !dbg !2086
  %244 = xor i32 %240, %243, !dbg !2086
  %245 = and i32 %233, %196, !dbg !2086
  %246 = or i32 %233, %196, !dbg !2086
  %247 = and i32 %246, %159, !dbg !2086
  %248 = or i32 %247, %245, !dbg !2086
  %249 = add i32 %244, %248, !dbg !2086
  tail call void @llvm.dbg.value(metadata i32 %249, i64 0, metadata !2020, metadata !800), !dbg !2075
  %250 = shl i32 %232, 26, !dbg !2086
  %251 = lshr i32 %232, 6, !dbg !2086
  %252 = or i32 %250, %251, !dbg !2086
  %253 = shl i32 %232, 21, !dbg !2086
  %254 = lshr i32 %232, 11, !dbg !2086
  %255 = or i32 %253, %254, !dbg !2086
  %256 = xor i32 %252, %255, !dbg !2086
  %257 = shl i32 %232, 7, !dbg !2086
  %258 = lshr i32 %232, 25, !dbg !2086
  %259 = or i32 %257, %258, !dbg !2086
  %260 = xor i32 %256, %259, !dbg !2086
  %261 = xor i32 %195, %158, !dbg !2086
  %262 = and i32 %232, %261, !dbg !2086
  %263 = xor i32 %262, %158, !dbg !2086
  %264 = load i32, i32* %44, align 16, !dbg !2086, !tbaa !1019
  %265 = add i32 %121, 961987163, !dbg !2086
  %266 = add i32 %265, %264, !dbg !2086
  %267 = add i32 %266, %263, !dbg !2086
  %268 = add i32 %267, %260, !dbg !2086
  tail call void @llvm.dbg.value(metadata i32 %268, i64 0, metadata !2021, metadata !800), !dbg !2076
  %269 = add i32 %268, %122, !dbg !2086
  tail call void @llvm.dbg.value(metadata i32 %269, i64 0, metadata !2016, metadata !800), !dbg !2049
  %270 = add i32 %249, %268, !dbg !2086
  tail call void @llvm.dbg.value(metadata i32 %270, i64 0, metadata !2012, metadata !800), !dbg !2041
  %271 = shl i32 %270, 30, !dbg !2089
  %272 = lshr i32 %270, 2, !dbg !2089
  %273 = or i32 %271, %272, !dbg !2089
  %274 = shl i32 %270, 19, !dbg !2089
  %275 = lshr i32 %270, 13, !dbg !2089
  %276 = or i32 %274, %275, !dbg !2089
  %277 = xor i32 %273, %276, !dbg !2089
  %278 = shl i32 %270, 10, !dbg !2089
  %279 = lshr i32 %270, 22, !dbg !2089
  %280 = or i32 %278, %279, !dbg !2089
  %281 = xor i32 %277, %280, !dbg !2089
  %282 = and i32 %270, %233, !dbg !2089
  %283 = or i32 %270, %233, !dbg !2089
  %284 = and i32 %283, %196, !dbg !2089
  %285 = or i32 %284, %282, !dbg !2089
  %286 = add i32 %281, %285, !dbg !2089
  tail call void @llvm.dbg.value(metadata i32 %286, i64 0, metadata !2020, metadata !800), !dbg !2075
  %287 = shl i32 %269, 26, !dbg !2089
  %288 = lshr i32 %269, 6, !dbg !2089
  %289 = or i32 %287, %288, !dbg !2089
  %290 = shl i32 %269, 21, !dbg !2089
  %291 = lshr i32 %269, 11, !dbg !2089
  %292 = or i32 %290, %291, !dbg !2089
  %293 = xor i32 %289, %292, !dbg !2089
  %294 = shl i32 %269, 7, !dbg !2089
  %295 = lshr i32 %269, 25, !dbg !2089
  %296 = or i32 %294, %295, !dbg !2089
  %297 = xor i32 %293, %296, !dbg !2089
  %298 = xor i32 %232, %195, !dbg !2089
  %299 = and i32 %269, %298, !dbg !2089
  %300 = xor i32 %299, %195, !dbg !2089
  %301 = load i32, i32* %45, align 4, !dbg !2089, !tbaa !1019
  %302 = add i32 %301, 1508970993, !dbg !2089
  %303 = add i32 %302, %158, !dbg !2089
  %304 = add i32 %303, %300, !dbg !2089
  %305 = add i32 %304, %297, !dbg !2089
  tail call void @llvm.dbg.value(metadata i32 %305, i64 0, metadata !2021, metadata !800), !dbg !2076
  %306 = add i32 %305, %159, !dbg !2089
  tail call void @llvm.dbg.value(metadata i32 %306, i64 0, metadata !2015, metadata !800), !dbg !2047
  %307 = add i32 %286, %305, !dbg !2089
  tail call void @llvm.dbg.value(metadata i32 %307, i64 0, metadata !2011, metadata !800), !dbg !2039
  %308 = shl i32 %307, 30, !dbg !2092
  %309 = lshr i32 %307, 2, !dbg !2092
  %310 = or i32 %308, %309, !dbg !2092
  %311 = shl i32 %307, 19, !dbg !2092
  %312 = lshr i32 %307, 13, !dbg !2092
  %313 = or i32 %311, %312, !dbg !2092
  %314 = xor i32 %310, %313, !dbg !2092
  %315 = shl i32 %307, 10, !dbg !2092
  %316 = lshr i32 %307, 22, !dbg !2092
  %317 = or i32 %315, %316, !dbg !2092
  %318 = xor i32 %314, %317, !dbg !2092
  %319 = and i32 %307, %270, !dbg !2092
  %320 = or i32 %307, %270, !dbg !2092
  %321 = and i32 %320, %233, !dbg !2092
  %322 = or i32 %321, %319, !dbg !2092
  %323 = add i32 %318, %322, !dbg !2092
  tail call void @llvm.dbg.value(metadata i32 %323, i64 0, metadata !2020, metadata !800), !dbg !2075
  %324 = shl i32 %306, 26, !dbg !2092
  %325 = lshr i32 %306, 6, !dbg !2092
  %326 = or i32 %324, %325, !dbg !2092
  %327 = shl i32 %306, 21, !dbg !2092
  %328 = lshr i32 %306, 11, !dbg !2092
  %329 = or i32 %327, %328, !dbg !2092
  %330 = xor i32 %326, %329, !dbg !2092
  %331 = shl i32 %306, 7, !dbg !2092
  %332 = lshr i32 %306, 25, !dbg !2092
  %333 = or i32 %331, %332, !dbg !2092
  %334 = xor i32 %330, %333, !dbg !2092
  %335 = xor i32 %269, %232, !dbg !2092
  %336 = and i32 %306, %335, !dbg !2092
  %337 = xor i32 %336, %232, !dbg !2092
  %338 = load i32, i32* %46, align 8, !dbg !2092, !tbaa !1019
  %339 = add i32 %338, -1841331548, !dbg !2092
  %340 = add i32 %339, %195, !dbg !2092
  %341 = add i32 %340, %337, !dbg !2092
  %342 = add i32 %341, %334, !dbg !2092
  tail call void @llvm.dbg.value(metadata i32 %342, i64 0, metadata !2021, metadata !800), !dbg !2076
  %343 = add i32 %342, %196, !dbg !2092
  tail call void @llvm.dbg.value(metadata i32 %343, i64 0, metadata !2014, metadata !800), !dbg !2045
  %344 = add i32 %323, %342, !dbg !2092
  tail call void @llvm.dbg.value(metadata i32 %344, i64 0, metadata !2010, metadata !800), !dbg !2037
  %345 = shl i32 %344, 30, !dbg !2095
  %346 = lshr i32 %344, 2, !dbg !2095
  %347 = or i32 %345, %346, !dbg !2095
  %348 = shl i32 %344, 19, !dbg !2095
  %349 = lshr i32 %344, 13, !dbg !2095
  %350 = or i32 %348, %349, !dbg !2095
  %351 = xor i32 %347, %350, !dbg !2095
  %352 = shl i32 %344, 10, !dbg !2095
  %353 = lshr i32 %344, 22, !dbg !2095
  %354 = or i32 %352, %353, !dbg !2095
  %355 = xor i32 %351, %354, !dbg !2095
  %356 = and i32 %344, %307, !dbg !2095
  %357 = or i32 %344, %307, !dbg !2095
  %358 = and i32 %357, %270, !dbg !2095
  %359 = or i32 %358, %356, !dbg !2095
  %360 = add i32 %355, %359, !dbg !2095
  tail call void @llvm.dbg.value(metadata i32 %360, i64 0, metadata !2020, metadata !800), !dbg !2075
  %361 = shl i32 %343, 26, !dbg !2095
  %362 = lshr i32 %343, 6, !dbg !2095
  %363 = or i32 %361, %362, !dbg !2095
  %364 = shl i32 %343, 21, !dbg !2095
  %365 = lshr i32 %343, 11, !dbg !2095
  %366 = or i32 %364, %365, !dbg !2095
  %367 = xor i32 %363, %366, !dbg !2095
  %368 = shl i32 %343, 7, !dbg !2095
  %369 = lshr i32 %343, 25, !dbg !2095
  %370 = or i32 %368, %369, !dbg !2095
  %371 = xor i32 %367, %370, !dbg !2095
  %372 = xor i32 %306, %269, !dbg !2095
  %373 = and i32 %343, %372, !dbg !2095
  %374 = xor i32 %373, %269, !dbg !2095
  %375 = load i32, i32* %47, align 4, !dbg !2095, !tbaa !1019
  %376 = add i32 %375, -1424204075, !dbg !2095
  %377 = add i32 %376, %232, !dbg !2095
  %378 = add i32 %377, %374, !dbg !2095
  %379 = add i32 %378, %371, !dbg !2095
  tail call void @llvm.dbg.value(metadata i32 %379, i64 0, metadata !2021, metadata !800), !dbg !2076
  %380 = add i32 %379, %233, !dbg !2095
  tail call void @llvm.dbg.value(metadata i32 %380, i64 0, metadata !2013, metadata !800), !dbg !2043
  %381 = add i32 %360, %379, !dbg !2095
  tail call void @llvm.dbg.value(metadata i32 %381, i64 0, metadata !2009, metadata !800), !dbg !2035
  %382 = shl i32 %381, 30, !dbg !2098
  %383 = lshr i32 %381, 2, !dbg !2098
  %384 = or i32 %382, %383, !dbg !2098
  %385 = shl i32 %381, 19, !dbg !2098
  %386 = lshr i32 %381, 13, !dbg !2098
  %387 = or i32 %385, %386, !dbg !2098
  %388 = xor i32 %384, %387, !dbg !2098
  %389 = shl i32 %381, 10, !dbg !2098
  %390 = lshr i32 %381, 22, !dbg !2098
  %391 = or i32 %389, %390, !dbg !2098
  %392 = xor i32 %388, %391, !dbg !2098
  %393 = and i32 %381, %344, !dbg !2098
  %394 = or i32 %381, %344, !dbg !2098
  %395 = and i32 %394, %307, !dbg !2098
  %396 = or i32 %395, %393, !dbg !2098
  %397 = add i32 %392, %396, !dbg !2098
  tail call void @llvm.dbg.value(metadata i32 %397, i64 0, metadata !2020, metadata !800), !dbg !2075
  %398 = shl i32 %380, 26, !dbg !2098
  %399 = lshr i32 %380, 6, !dbg !2098
  %400 = or i32 %398, %399, !dbg !2098
  %401 = shl i32 %380, 21, !dbg !2098
  %402 = lshr i32 %380, 11, !dbg !2098
  %403 = or i32 %401, %402, !dbg !2098
  %404 = xor i32 %400, %403, !dbg !2098
  %405 = shl i32 %380, 7, !dbg !2098
  %406 = lshr i32 %380, 25, !dbg !2098
  %407 = or i32 %405, %406, !dbg !2098
  %408 = xor i32 %404, %407, !dbg !2098
  %409 = xor i32 %343, %306, !dbg !2098
  %410 = and i32 %380, %409, !dbg !2098
  %411 = xor i32 %410, %306, !dbg !2098
  %412 = load i32, i32* %48, align 16, !dbg !2098, !tbaa !1019
  %413 = add i32 %412, -670586216, !dbg !2098
  %414 = add i32 %413, %269, !dbg !2098
  %415 = add i32 %414, %411, !dbg !2098
  %416 = add i32 %415, %408, !dbg !2098
  tail call void @llvm.dbg.value(metadata i32 %416, i64 0, metadata !2021, metadata !800), !dbg !2076
  %417 = add i32 %416, %270, !dbg !2098
  tail call void @llvm.dbg.value(metadata i32 %417, i64 0, metadata !2012, metadata !800), !dbg !2041
  %418 = add i32 %397, %416, !dbg !2098
  tail call void @llvm.dbg.value(metadata i32 %418, i64 0, metadata !2016, metadata !800), !dbg !2049
  %419 = shl i32 %418, 30, !dbg !2101
  %420 = lshr i32 %418, 2, !dbg !2101
  %421 = or i32 %419, %420, !dbg !2101
  %422 = shl i32 %418, 19, !dbg !2101
  %423 = lshr i32 %418, 13, !dbg !2101
  %424 = or i32 %422, %423, !dbg !2101
  %425 = xor i32 %421, %424, !dbg !2101
  %426 = shl i32 %418, 10, !dbg !2101
  %427 = lshr i32 %418, 22, !dbg !2101
  %428 = or i32 %426, %427, !dbg !2101
  %429 = xor i32 %425, %428, !dbg !2101
  %430 = and i32 %418, %381, !dbg !2101
  %431 = or i32 %418, %381, !dbg !2101
  %432 = and i32 %431, %344, !dbg !2101
  %433 = or i32 %432, %430, !dbg !2101
  %434 = add i32 %429, %433, !dbg !2101
  tail call void @llvm.dbg.value(metadata i32 %434, i64 0, metadata !2020, metadata !800), !dbg !2075
  %435 = shl i32 %417, 26, !dbg !2101
  %436 = lshr i32 %417, 6, !dbg !2101
  %437 = or i32 %435, %436, !dbg !2101
  %438 = shl i32 %417, 21, !dbg !2101
  %439 = lshr i32 %417, 11, !dbg !2101
  %440 = or i32 %438, %439, !dbg !2101
  %441 = xor i32 %437, %440, !dbg !2101
  %442 = shl i32 %417, 7, !dbg !2101
  %443 = lshr i32 %417, 25, !dbg !2101
  %444 = or i32 %442, %443, !dbg !2101
  %445 = xor i32 %441, %444, !dbg !2101
  %446 = xor i32 %380, %343, !dbg !2101
  %447 = and i32 %417, %446, !dbg !2101
  %448 = xor i32 %447, %343, !dbg !2101
  %449 = load i32, i32* %49, align 4, !dbg !2101, !tbaa !1019
  %450 = add i32 %449, 310598401, !dbg !2101
  %451 = add i32 %450, %306, !dbg !2101
  %452 = add i32 %451, %448, !dbg !2101
  %453 = add i32 %452, %445, !dbg !2101
  tail call void @llvm.dbg.value(metadata i32 %453, i64 0, metadata !2021, metadata !800), !dbg !2076
  %454 = add i32 %453, %307, !dbg !2101
  tail call void @llvm.dbg.value(metadata i32 %454, i64 0, metadata !2011, metadata !800), !dbg !2039
  %455 = add i32 %434, %453, !dbg !2101
  tail call void @llvm.dbg.value(metadata i32 %455, i64 0, metadata !2015, metadata !800), !dbg !2047
  %456 = shl i32 %455, 30, !dbg !2104
  %457 = lshr i32 %455, 2, !dbg !2104
  %458 = or i32 %456, %457, !dbg !2104
  %459 = shl i32 %455, 19, !dbg !2104
  %460 = lshr i32 %455, 13, !dbg !2104
  %461 = or i32 %459, %460, !dbg !2104
  %462 = xor i32 %458, %461, !dbg !2104
  %463 = shl i32 %455, 10, !dbg !2104
  %464 = lshr i32 %455, 22, !dbg !2104
  %465 = or i32 %463, %464, !dbg !2104
  %466 = xor i32 %462, %465, !dbg !2104
  %467 = and i32 %455, %418, !dbg !2104
  %468 = or i32 %455, %418, !dbg !2104
  %469 = and i32 %468, %381, !dbg !2104
  %470 = or i32 %469, %467, !dbg !2104
  %471 = add i32 %466, %470, !dbg !2104
  tail call void @llvm.dbg.value(metadata i32 %471, i64 0, metadata !2020, metadata !800), !dbg !2075
  %472 = shl i32 %454, 26, !dbg !2104
  %473 = lshr i32 %454, 6, !dbg !2104
  %474 = or i32 %472, %473, !dbg !2104
  %475 = shl i32 %454, 21, !dbg !2104
  %476 = lshr i32 %454, 11, !dbg !2104
  %477 = or i32 %475, %476, !dbg !2104
  %478 = xor i32 %474, %477, !dbg !2104
  %479 = shl i32 %454, 7, !dbg !2104
  %480 = lshr i32 %454, 25, !dbg !2104
  %481 = or i32 %479, %480, !dbg !2104
  %482 = xor i32 %478, %481, !dbg !2104
  %483 = xor i32 %417, %380, !dbg !2104
  %484 = and i32 %454, %483, !dbg !2104
  %485 = xor i32 %484, %380, !dbg !2104
  %486 = load i32, i32* %50, align 8, !dbg !2104, !tbaa !1019
  %487 = add i32 %486, 607225278, !dbg !2104
  %488 = add i32 %487, %343, !dbg !2104
  %489 = add i32 %488, %485, !dbg !2104
  %490 = add i32 %489, %482, !dbg !2104
  tail call void @llvm.dbg.value(metadata i32 %490, i64 0, metadata !2021, metadata !800), !dbg !2076
  %491 = add i32 %490, %344, !dbg !2104
  tail call void @llvm.dbg.value(metadata i32 %491, i64 0, metadata !2010, metadata !800), !dbg !2037
  %492 = add i32 %471, %490, !dbg !2104
  tail call void @llvm.dbg.value(metadata i32 %492, i64 0, metadata !2014, metadata !800), !dbg !2045
  %493 = shl i32 %492, 30, !dbg !2107
  %494 = lshr i32 %492, 2, !dbg !2107
  %495 = or i32 %493, %494, !dbg !2107
  %496 = shl i32 %492, 19, !dbg !2107
  %497 = lshr i32 %492, 13, !dbg !2107
  %498 = or i32 %496, %497, !dbg !2107
  %499 = xor i32 %495, %498, !dbg !2107
  %500 = shl i32 %492, 10, !dbg !2107
  %501 = lshr i32 %492, 22, !dbg !2107
  %502 = or i32 %500, %501, !dbg !2107
  %503 = xor i32 %499, %502, !dbg !2107
  %504 = and i32 %492, %455, !dbg !2107
  %505 = or i32 %492, %455, !dbg !2107
  %506 = and i32 %505, %418, !dbg !2107
  %507 = or i32 %506, %504, !dbg !2107
  %508 = add i32 %503, %507, !dbg !2107
  tail call void @llvm.dbg.value(metadata i32 %508, i64 0, metadata !2020, metadata !800), !dbg !2075
  %509 = shl i32 %491, 26, !dbg !2107
  %510 = lshr i32 %491, 6, !dbg !2107
  %511 = or i32 %509, %510, !dbg !2107
  %512 = shl i32 %491, 21, !dbg !2107
  %513 = lshr i32 %491, 11, !dbg !2107
  %514 = or i32 %512, %513, !dbg !2107
  %515 = xor i32 %511, %514, !dbg !2107
  %516 = shl i32 %491, 7, !dbg !2107
  %517 = lshr i32 %491, 25, !dbg !2107
  %518 = or i32 %516, %517, !dbg !2107
  %519 = xor i32 %515, %518, !dbg !2107
  %520 = xor i32 %454, %417, !dbg !2107
  %521 = and i32 %491, %520, !dbg !2107
  %522 = xor i32 %521, %417, !dbg !2107
  %523 = load i32, i32* %51, align 4, !dbg !2107, !tbaa !1019
  %524 = add i32 %523, 1426881987, !dbg !2107
  %525 = add i32 %524, %380, !dbg !2107
  %526 = add i32 %525, %522, !dbg !2107
  %527 = add i32 %526, %519, !dbg !2107
  tail call void @llvm.dbg.value(metadata i32 %527, i64 0, metadata !2021, metadata !800), !dbg !2076
  %528 = add i32 %527, %381, !dbg !2107
  tail call void @llvm.dbg.value(metadata i32 %528, i64 0, metadata !2009, metadata !800), !dbg !2035
  %529 = add i32 %508, %527, !dbg !2107
  tail call void @llvm.dbg.value(metadata i32 %529, i64 0, metadata !2013, metadata !800), !dbg !2043
  %530 = shl i32 %529, 30, !dbg !2110
  %531 = lshr i32 %529, 2, !dbg !2110
  %532 = or i32 %530, %531, !dbg !2110
  %533 = shl i32 %529, 19, !dbg !2110
  %534 = lshr i32 %529, 13, !dbg !2110
  %535 = or i32 %533, %534, !dbg !2110
  %536 = xor i32 %532, %535, !dbg !2110
  %537 = shl i32 %529, 10, !dbg !2110
  %538 = lshr i32 %529, 22, !dbg !2110
  %539 = or i32 %537, %538, !dbg !2110
  %540 = xor i32 %536, %539, !dbg !2110
  %541 = and i32 %529, %492, !dbg !2110
  %542 = or i32 %529, %492, !dbg !2110
  %543 = and i32 %542, %455, !dbg !2110
  %544 = or i32 %543, %541, !dbg !2110
  %545 = add i32 %540, %544, !dbg !2110
  tail call void @llvm.dbg.value(metadata i32 %545, i64 0, metadata !2020, metadata !800), !dbg !2075
  %546 = shl i32 %528, 26, !dbg !2110
  %547 = lshr i32 %528, 6, !dbg !2110
  %548 = or i32 %546, %547, !dbg !2110
  %549 = shl i32 %528, 21, !dbg !2110
  %550 = lshr i32 %528, 11, !dbg !2110
  %551 = or i32 %549, %550, !dbg !2110
  %552 = xor i32 %548, %551, !dbg !2110
  %553 = shl i32 %528, 7, !dbg !2110
  %554 = lshr i32 %528, 25, !dbg !2110
  %555 = or i32 %553, %554, !dbg !2110
  %556 = xor i32 %552, %555, !dbg !2110
  %557 = xor i32 %491, %454, !dbg !2110
  %558 = and i32 %528, %557, !dbg !2110
  %559 = xor i32 %558, %454, !dbg !2110
  %560 = load i32, i32* %52, align 16, !dbg !2110, !tbaa !1019
  %561 = add i32 %560, 1925078388, !dbg !2110
  %562 = add i32 %561, %417, !dbg !2110
  %563 = add i32 %562, %559, !dbg !2110
  %564 = add i32 %563, %556, !dbg !2110
  tail call void @llvm.dbg.value(metadata i32 %564, i64 0, metadata !2021, metadata !800), !dbg !2076
  %565 = add i32 %564, %418, !dbg !2110
  tail call void @llvm.dbg.value(metadata i32 %565, i64 0, metadata !2016, metadata !800), !dbg !2049
  %566 = add i32 %545, %564, !dbg !2110
  tail call void @llvm.dbg.value(metadata i32 %566, i64 0, metadata !2012, metadata !800), !dbg !2041
  %567 = shl i32 %566, 30, !dbg !2113
  %568 = lshr i32 %566, 2, !dbg !2113
  %569 = or i32 %567, %568, !dbg !2113
  %570 = shl i32 %566, 19, !dbg !2113
  %571 = lshr i32 %566, 13, !dbg !2113
  %572 = or i32 %570, %571, !dbg !2113
  %573 = xor i32 %569, %572, !dbg !2113
  %574 = shl i32 %566, 10, !dbg !2113
  %575 = lshr i32 %566, 22, !dbg !2113
  %576 = or i32 %574, %575, !dbg !2113
  %577 = xor i32 %573, %576, !dbg !2113
  %578 = and i32 %566, %529, !dbg !2113
  %579 = or i32 %566, %529, !dbg !2113
  %580 = and i32 %579, %492, !dbg !2113
  %581 = or i32 %580, %578, !dbg !2113
  %582 = add i32 %577, %581, !dbg !2113
  tail call void @llvm.dbg.value(metadata i32 %582, i64 0, metadata !2020, metadata !800), !dbg !2075
  %583 = shl i32 %565, 26, !dbg !2113
  %584 = lshr i32 %565, 6, !dbg !2113
  %585 = or i32 %583, %584, !dbg !2113
  %586 = shl i32 %565, 21, !dbg !2113
  %587 = lshr i32 %565, 11, !dbg !2113
  %588 = or i32 %586, %587, !dbg !2113
  %589 = xor i32 %585, %588, !dbg !2113
  %590 = shl i32 %565, 7, !dbg !2113
  %591 = lshr i32 %565, 25, !dbg !2113
  %592 = or i32 %590, %591, !dbg !2113
  %593 = xor i32 %589, %592, !dbg !2113
  %594 = xor i32 %528, %491, !dbg !2113
  %595 = and i32 %565, %594, !dbg !2113
  %596 = xor i32 %595, %491, !dbg !2113
  %597 = load i32, i32* %53, align 4, !dbg !2113, !tbaa !1019
  %598 = add i32 %597, -2132889090, !dbg !2113
  %599 = add i32 %598, %454, !dbg !2113
  %600 = add i32 %599, %596, !dbg !2113
  %601 = add i32 %600, %593, !dbg !2113
  tail call void @llvm.dbg.value(metadata i32 %601, i64 0, metadata !2021, metadata !800), !dbg !2076
  %602 = add i32 %601, %455, !dbg !2113
  tail call void @llvm.dbg.value(metadata i32 %602, i64 0, metadata !2015, metadata !800), !dbg !2047
  %603 = add i32 %582, %601, !dbg !2113
  tail call void @llvm.dbg.value(metadata i32 %603, i64 0, metadata !2011, metadata !800), !dbg !2039
  %604 = shl i32 %603, 30, !dbg !2116
  %605 = lshr i32 %603, 2, !dbg !2116
  %606 = or i32 %604, %605, !dbg !2116
  %607 = shl i32 %603, 19, !dbg !2116
  %608 = lshr i32 %603, 13, !dbg !2116
  %609 = or i32 %607, %608, !dbg !2116
  %610 = xor i32 %606, %609, !dbg !2116
  %611 = shl i32 %603, 10, !dbg !2116
  %612 = lshr i32 %603, 22, !dbg !2116
  %613 = or i32 %611, %612, !dbg !2116
  %614 = xor i32 %610, %613, !dbg !2116
  %615 = and i32 %603, %566, !dbg !2116
  %616 = or i32 %603, %566, !dbg !2116
  %617 = and i32 %616, %529, !dbg !2116
  %618 = or i32 %617, %615, !dbg !2116
  %619 = add i32 %614, %618, !dbg !2116
  tail call void @llvm.dbg.value(metadata i32 %619, i64 0, metadata !2020, metadata !800), !dbg !2075
  %620 = shl i32 %602, 26, !dbg !2116
  %621 = lshr i32 %602, 6, !dbg !2116
  %622 = or i32 %620, %621, !dbg !2116
  %623 = shl i32 %602, 21, !dbg !2116
  %624 = lshr i32 %602, 11, !dbg !2116
  %625 = or i32 %623, %624, !dbg !2116
  %626 = xor i32 %622, %625, !dbg !2116
  %627 = shl i32 %602, 7, !dbg !2116
  %628 = lshr i32 %602, 25, !dbg !2116
  %629 = or i32 %627, %628, !dbg !2116
  %630 = xor i32 %626, %629, !dbg !2116
  %631 = xor i32 %565, %528, !dbg !2116
  %632 = and i32 %602, %631, !dbg !2116
  %633 = xor i32 %632, %528, !dbg !2116
  %634 = load i32, i32* %54, align 8, !dbg !2116, !tbaa !1019
  %635 = add i32 %634, -1680079193, !dbg !2116
  %636 = add i32 %635, %491, !dbg !2116
  %637 = add i32 %636, %633, !dbg !2116
  %638 = add i32 %637, %630, !dbg !2116
  tail call void @llvm.dbg.value(metadata i32 %638, i64 0, metadata !2021, metadata !800), !dbg !2076
  %639 = add i32 %638, %492, !dbg !2116
  tail call void @llvm.dbg.value(metadata i32 %639, i64 0, metadata !2014, metadata !800), !dbg !2045
  %640 = add i32 %619, %638, !dbg !2116
  tail call void @llvm.dbg.value(metadata i32 %640, i64 0, metadata !2010, metadata !800), !dbg !2037
  %641 = shl i32 %640, 30, !dbg !2119
  %642 = lshr i32 %640, 2, !dbg !2119
  %643 = or i32 %641, %642, !dbg !2119
  %644 = shl i32 %640, 19, !dbg !2119
  %645 = lshr i32 %640, 13, !dbg !2119
  %646 = or i32 %644, %645, !dbg !2119
  %647 = xor i32 %643, %646, !dbg !2119
  %648 = shl i32 %640, 10, !dbg !2119
  %649 = lshr i32 %640, 22, !dbg !2119
  %650 = or i32 %648, %649, !dbg !2119
  %651 = xor i32 %647, %650, !dbg !2119
  %652 = and i32 %640, %603, !dbg !2119
  %653 = or i32 %640, %603, !dbg !2119
  %654 = and i32 %653, %566, !dbg !2119
  %655 = or i32 %654, %652, !dbg !2119
  %656 = add i32 %651, %655, !dbg !2119
  tail call void @llvm.dbg.value(metadata i32 %656, i64 0, metadata !2020, metadata !800), !dbg !2075
  %657 = shl i32 %639, 26, !dbg !2119
  %658 = lshr i32 %639, 6, !dbg !2119
  %659 = or i32 %657, %658, !dbg !2119
  %660 = shl i32 %639, 21, !dbg !2119
  %661 = lshr i32 %639, 11, !dbg !2119
  %662 = or i32 %660, %661, !dbg !2119
  %663 = xor i32 %659, %662, !dbg !2119
  %664 = shl i32 %639, 7, !dbg !2119
  %665 = lshr i32 %639, 25, !dbg !2119
  %666 = or i32 %664, %665, !dbg !2119
  %667 = xor i32 %663, %666, !dbg !2119
  %668 = xor i32 %602, %565, !dbg !2119
  %669 = and i32 %639, %668, !dbg !2119
  %670 = xor i32 %669, %565, !dbg !2119
  %671 = load i32, i32* %55, align 4, !dbg !2119, !tbaa !1019
  %672 = add i32 %671, -1046744716, !dbg !2119
  %673 = add i32 %672, %528, !dbg !2119
  %674 = add i32 %673, %670, !dbg !2119
  %675 = add i32 %674, %667, !dbg !2119
  tail call void @llvm.dbg.value(metadata i32 %675, i64 0, metadata !2021, metadata !800), !dbg !2076
  %676 = add i32 %675, %529, !dbg !2119
  tail call void @llvm.dbg.value(metadata i32 %676, i64 0, metadata !2013, metadata !800), !dbg !2043
  %677 = add i32 %656, %675, !dbg !2119
  tail call void @llvm.dbg.value(metadata i32 %677, i64 0, metadata !2009, metadata !800), !dbg !2035
  %678 = shl i32 %677, 30, !dbg !2122
  %679 = lshr i32 %677, 2, !dbg !2122
  %680 = or i32 %678, %679, !dbg !2122
  %681 = shl i32 %677, 19, !dbg !2122
  %682 = lshr i32 %677, 13, !dbg !2122
  %683 = or i32 %681, %682, !dbg !2122
  %684 = xor i32 %680, %683, !dbg !2122
  %685 = shl i32 %677, 10, !dbg !2122
  %686 = lshr i32 %677, 22, !dbg !2122
  %687 = or i32 %685, %686, !dbg !2122
  %688 = xor i32 %684, %687, !dbg !2122
  %689 = and i32 %677, %640, !dbg !2122
  %690 = or i32 %677, %640, !dbg !2122
  %691 = and i32 %690, %603, !dbg !2122
  %692 = or i32 %691, %689, !dbg !2122
  %693 = add i32 %688, %692, !dbg !2122
  tail call void @llvm.dbg.value(metadata i32 %693, i64 0, metadata !2020, metadata !800), !dbg !2075
  %694 = shl i32 %676, 26, !dbg !2122
  %695 = lshr i32 %676, 6, !dbg !2122
  %696 = or i32 %694, %695, !dbg !2122
  %697 = shl i32 %676, 21, !dbg !2122
  %698 = lshr i32 %676, 11, !dbg !2122
  %699 = or i32 %697, %698, !dbg !2122
  %700 = xor i32 %696, %699, !dbg !2122
  %701 = shl i32 %676, 7, !dbg !2122
  %702 = lshr i32 %676, 25, !dbg !2122
  %703 = or i32 %701, %702, !dbg !2122
  %704 = xor i32 %700, %703, !dbg !2122
  %705 = xor i32 %639, %602, !dbg !2122
  %706 = and i32 %676, %705, !dbg !2122
  %707 = xor i32 %706, %602, !dbg !2122
  %708 = shl i32 %634, 15, !dbg !2122
  %709 = lshr i32 %634, 17, !dbg !2122
  %710 = or i32 %708, %709, !dbg !2122
  %711 = shl i32 %634, 13, !dbg !2122
  %712 = lshr i32 %634, 19, !dbg !2122
  %713 = or i32 %711, %712, !dbg !2122
  %714 = lshr i32 %634, 10, !dbg !2122
  %715 = xor i32 %713, %714, !dbg !2122
  %716 = xor i32 %715, %710, !dbg !2122
  %717 = shl i32 %153, 25, !dbg !2122
  %718 = lshr i32 %153, 7, !dbg !2122
  %719 = or i32 %717, %718, !dbg !2122
  %720 = shl i32 %153, 14, !dbg !2122
  %721 = lshr i32 %153, 18, !dbg !2122
  %722 = or i32 %720, %721, !dbg !2122
  %723 = lshr i32 %153, 3, !dbg !2122
  %724 = xor i32 %722, %723, !dbg !2122
  %725 = xor i32 %724, %719, !dbg !2122
  %726 = add i32 %725, %119, !dbg !2122
  %727 = add i32 %726, %449, !dbg !2122
  %728 = add i32 %727, %716, !dbg !2122
  tail call void @llvm.dbg.value(metadata i32 %728, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %728, i32* %40, align 16, !dbg !2122, !tbaa !1019
  %729 = add i32 %728, -459576895, !dbg !2122
  %730 = add i32 %729, %565, !dbg !2122
  %731 = add i32 %730, %707, !dbg !2122
  %732 = add i32 %731, %704, !dbg !2122
  tail call void @llvm.dbg.value(metadata i32 %732, i64 0, metadata !2021, metadata !800), !dbg !2076
  %733 = add i32 %732, %566, !dbg !2122
  tail call void @llvm.dbg.value(metadata i32 %733, i64 0, metadata !2012, metadata !800), !dbg !2041
  %734 = add i32 %693, %732, !dbg !2122
  tail call void @llvm.dbg.value(metadata i32 %734, i64 0, metadata !2016, metadata !800), !dbg !2049
  %735 = shl i32 %734, 30, !dbg !2126
  %736 = lshr i32 %734, 2, !dbg !2126
  %737 = or i32 %735, %736, !dbg !2126
  %738 = shl i32 %734, 19, !dbg !2126
  %739 = lshr i32 %734, 13, !dbg !2126
  %740 = or i32 %738, %739, !dbg !2126
  %741 = xor i32 %737, %740, !dbg !2126
  %742 = shl i32 %734, 10, !dbg !2126
  %743 = lshr i32 %734, 22, !dbg !2126
  %744 = or i32 %742, %743, !dbg !2126
  %745 = xor i32 %741, %744, !dbg !2126
  %746 = and i32 %734, %677, !dbg !2126
  %747 = or i32 %734, %677, !dbg !2126
  %748 = and i32 %747, %640, !dbg !2126
  %749 = or i32 %748, %746, !dbg !2126
  %750 = add i32 %745, %749, !dbg !2126
  tail call void @llvm.dbg.value(metadata i32 %750, i64 0, metadata !2020, metadata !800), !dbg !2075
  %751 = shl i32 %733, 26, !dbg !2126
  %752 = lshr i32 %733, 6, !dbg !2126
  %753 = or i32 %751, %752, !dbg !2126
  %754 = shl i32 %733, 21, !dbg !2126
  %755 = lshr i32 %733, 11, !dbg !2126
  %756 = or i32 %754, %755, !dbg !2126
  %757 = xor i32 %753, %756, !dbg !2126
  %758 = shl i32 %733, 7, !dbg !2126
  %759 = lshr i32 %733, 25, !dbg !2126
  %760 = or i32 %758, %759, !dbg !2126
  %761 = xor i32 %757, %760, !dbg !2126
  %762 = xor i32 %676, %639, !dbg !2126
  %763 = and i32 %733, %762, !dbg !2126
  %764 = xor i32 %763, %639, !dbg !2126
  %765 = shl i32 %671, 15, !dbg !2126
  %766 = lshr i32 %671, 17, !dbg !2126
  %767 = or i32 %765, %766, !dbg !2126
  %768 = shl i32 %671, 13, !dbg !2126
  %769 = lshr i32 %671, 19, !dbg !2126
  %770 = or i32 %768, %769, !dbg !2126
  %771 = lshr i32 %671, 10, !dbg !2126
  %772 = xor i32 %770, %771, !dbg !2126
  %773 = xor i32 %772, %767, !dbg !2126
  %774 = load i32, i32* %50, align 8, !dbg !2126, !tbaa !1019
  %775 = load i32, i32* %42, align 8, !dbg !2126, !tbaa !1019
  %776 = shl i32 %775, 25, !dbg !2126
  %777 = lshr i32 %775, 7, !dbg !2126
  %778 = or i32 %776, %777, !dbg !2126
  %779 = shl i32 %775, 14, !dbg !2126
  %780 = lshr i32 %775, 18, !dbg !2126
  %781 = or i32 %779, %780, !dbg !2126
  %782 = lshr i32 %775, 3, !dbg !2126
  %783 = xor i32 %781, %782, !dbg !2126
  %784 = xor i32 %783, %778, !dbg !2126
  %785 = load i32, i32* %41, align 4, !dbg !2126, !tbaa !1019
  %786 = add i32 %785, %774, !dbg !2126
  %787 = add i32 %786, %773, !dbg !2126
  %788 = add i32 %787, %784, !dbg !2126
  tail call void @llvm.dbg.value(metadata i32 %788, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %788, i32* %41, align 4, !dbg !2126, !tbaa !1019
  %789 = add i32 %788, -272742522, !dbg !2126
  %790 = add i32 %789, %602, !dbg !2126
  %791 = add i32 %790, %764, !dbg !2126
  %792 = add i32 %791, %761, !dbg !2126
  tail call void @llvm.dbg.value(metadata i32 %792, i64 0, metadata !2021, metadata !800), !dbg !2076
  %793 = add i32 %792, %603, !dbg !2126
  tail call void @llvm.dbg.value(metadata i32 %793, i64 0, metadata !2011, metadata !800), !dbg !2039
  %794 = add i32 %750, %792, !dbg !2126
  tail call void @llvm.dbg.value(metadata i32 %794, i64 0, metadata !2015, metadata !800), !dbg !2047
  %795 = shl i32 %794, 30, !dbg !2129
  %796 = lshr i32 %794, 2, !dbg !2129
  %797 = or i32 %795, %796, !dbg !2129
  %798 = shl i32 %794, 19, !dbg !2129
  %799 = lshr i32 %794, 13, !dbg !2129
  %800 = or i32 %798, %799, !dbg !2129
  %801 = xor i32 %797, %800, !dbg !2129
  %802 = shl i32 %794, 10, !dbg !2129
  %803 = lshr i32 %794, 22, !dbg !2129
  %804 = or i32 %802, %803, !dbg !2129
  %805 = xor i32 %801, %804, !dbg !2129
  %806 = and i32 %794, %734, !dbg !2129
  %807 = or i32 %794, %734, !dbg !2129
  %808 = and i32 %807, %677, !dbg !2129
  %809 = or i32 %808, %806, !dbg !2129
  %810 = add i32 %805, %809, !dbg !2129
  tail call void @llvm.dbg.value(metadata i32 %810, i64 0, metadata !2020, metadata !800), !dbg !2075
  %811 = shl i32 %793, 26, !dbg !2129
  %812 = lshr i32 %793, 6, !dbg !2129
  %813 = or i32 %811, %812, !dbg !2129
  %814 = shl i32 %793, 21, !dbg !2129
  %815 = lshr i32 %793, 11, !dbg !2129
  %816 = or i32 %814, %815, !dbg !2129
  %817 = xor i32 %813, %816, !dbg !2129
  %818 = shl i32 %793, 7, !dbg !2129
  %819 = lshr i32 %793, 25, !dbg !2129
  %820 = or i32 %818, %819, !dbg !2129
  %821 = xor i32 %817, %820, !dbg !2129
  %822 = xor i32 %733, %676, !dbg !2129
  %823 = and i32 %793, %822, !dbg !2129
  %824 = xor i32 %823, %676, !dbg !2129
  %825 = shl i32 %728, 15, !dbg !2129
  %826 = lshr i32 %728, 17, !dbg !2129
  %827 = or i32 %825, %826, !dbg !2129
  %828 = shl i32 %728, 13, !dbg !2129
  %829 = lshr i32 %728, 19, !dbg !2129
  %830 = or i32 %828, %829, !dbg !2129
  %831 = lshr i32 %728, 10, !dbg !2129
  %832 = xor i32 %830, %831, !dbg !2129
  %833 = xor i32 %832, %827, !dbg !2129
  %834 = load i32, i32* %51, align 4, !dbg !2129, !tbaa !1019
  %835 = load i32, i32* %43, align 4, !dbg !2129, !tbaa !1019
  %836 = shl i32 %835, 25, !dbg !2129
  %837 = lshr i32 %835, 7, !dbg !2129
  %838 = or i32 %836, %837, !dbg !2129
  %839 = shl i32 %835, 14, !dbg !2129
  %840 = lshr i32 %835, 18, !dbg !2129
  %841 = or i32 %839, %840, !dbg !2129
  %842 = lshr i32 %835, 3, !dbg !2129
  %843 = xor i32 %841, %842, !dbg !2129
  %844 = xor i32 %843, %838, !dbg !2129
  %845 = add i32 %775, %834, !dbg !2129
  %846 = add i32 %845, %833, !dbg !2129
  %847 = add i32 %846, %844, !dbg !2129
  tail call void @llvm.dbg.value(metadata i32 %847, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %847, i32* %42, align 8, !dbg !2129, !tbaa !1019
  %848 = add i32 %847, 264347078, !dbg !2129
  %849 = add i32 %848, %639, !dbg !2129
  %850 = add i32 %849, %824, !dbg !2129
  %851 = add i32 %850, %821, !dbg !2129
  tail call void @llvm.dbg.value(metadata i32 %851, i64 0, metadata !2021, metadata !800), !dbg !2076
  %852 = add i32 %851, %640, !dbg !2129
  tail call void @llvm.dbg.value(metadata i32 %852, i64 0, metadata !2010, metadata !800), !dbg !2037
  %853 = add i32 %810, %851, !dbg !2129
  tail call void @llvm.dbg.value(metadata i32 %853, i64 0, metadata !2014, metadata !800), !dbg !2045
  %854 = shl i32 %853, 30, !dbg !2132
  %855 = lshr i32 %853, 2, !dbg !2132
  %856 = or i32 %854, %855, !dbg !2132
  %857 = shl i32 %853, 19, !dbg !2132
  %858 = lshr i32 %853, 13, !dbg !2132
  %859 = or i32 %857, %858, !dbg !2132
  %860 = xor i32 %856, %859, !dbg !2132
  %861 = shl i32 %853, 10, !dbg !2132
  %862 = lshr i32 %853, 22, !dbg !2132
  %863 = or i32 %861, %862, !dbg !2132
  %864 = xor i32 %860, %863, !dbg !2132
  %865 = and i32 %853, %794, !dbg !2132
  %866 = or i32 %853, %794, !dbg !2132
  %867 = and i32 %866, %734, !dbg !2132
  %868 = or i32 %867, %865, !dbg !2132
  %869 = add i32 %864, %868, !dbg !2132
  tail call void @llvm.dbg.value(metadata i32 %869, i64 0, metadata !2020, metadata !800), !dbg !2075
  %870 = shl i32 %852, 26, !dbg !2132
  %871 = lshr i32 %852, 6, !dbg !2132
  %872 = or i32 %870, %871, !dbg !2132
  %873 = shl i32 %852, 21, !dbg !2132
  %874 = lshr i32 %852, 11, !dbg !2132
  %875 = or i32 %873, %874, !dbg !2132
  %876 = xor i32 %872, %875, !dbg !2132
  %877 = shl i32 %852, 7, !dbg !2132
  %878 = lshr i32 %852, 25, !dbg !2132
  %879 = or i32 %877, %878, !dbg !2132
  %880 = xor i32 %876, %879, !dbg !2132
  %881 = xor i32 %793, %733, !dbg !2132
  %882 = and i32 %852, %881, !dbg !2132
  %883 = xor i32 %882, %733, !dbg !2132
  %884 = shl i32 %788, 15, !dbg !2132
  %885 = lshr i32 %788, 17, !dbg !2132
  %886 = or i32 %884, %885, !dbg !2132
  %887 = shl i32 %788, 13, !dbg !2132
  %888 = lshr i32 %788, 19, !dbg !2132
  %889 = or i32 %887, %888, !dbg !2132
  %890 = lshr i32 %788, 10, !dbg !2132
  %891 = xor i32 %889, %890, !dbg !2132
  %892 = xor i32 %891, %886, !dbg !2132
  %893 = load i32, i32* %52, align 16, !dbg !2132, !tbaa !1019
  %894 = load i32, i32* %44, align 16, !dbg !2132, !tbaa !1019
  %895 = shl i32 %894, 25, !dbg !2132
  %896 = lshr i32 %894, 7, !dbg !2132
  %897 = or i32 %895, %896, !dbg !2132
  %898 = shl i32 %894, 14, !dbg !2132
  %899 = lshr i32 %894, 18, !dbg !2132
  %900 = or i32 %898, %899, !dbg !2132
  %901 = lshr i32 %894, 3, !dbg !2132
  %902 = xor i32 %900, %901, !dbg !2132
  %903 = xor i32 %902, %897, !dbg !2132
  %904 = add i32 %835, %893, !dbg !2132
  %905 = add i32 %904, %892, !dbg !2132
  %906 = add i32 %905, %903, !dbg !2132
  tail call void @llvm.dbg.value(metadata i32 %906, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %906, i32* %43, align 4, !dbg !2132, !tbaa !1019
  %907 = add i32 %906, 604807628, !dbg !2132
  %908 = add i32 %907, %676, !dbg !2132
  %909 = add i32 %908, %883, !dbg !2132
  %910 = add i32 %909, %880, !dbg !2132
  tail call void @llvm.dbg.value(metadata i32 %910, i64 0, metadata !2021, metadata !800), !dbg !2076
  %911 = add i32 %910, %677, !dbg !2132
  tail call void @llvm.dbg.value(metadata i32 %911, i64 0, metadata !2009, metadata !800), !dbg !2035
  %912 = add i32 %869, %910, !dbg !2132
  tail call void @llvm.dbg.value(metadata i32 %912, i64 0, metadata !2013, metadata !800), !dbg !2043
  %913 = shl i32 %912, 30, !dbg !2135
  %914 = lshr i32 %912, 2, !dbg !2135
  %915 = or i32 %913, %914, !dbg !2135
  %916 = shl i32 %912, 19, !dbg !2135
  %917 = lshr i32 %912, 13, !dbg !2135
  %918 = or i32 %916, %917, !dbg !2135
  %919 = xor i32 %915, %918, !dbg !2135
  %920 = shl i32 %912, 10, !dbg !2135
  %921 = lshr i32 %912, 22, !dbg !2135
  %922 = or i32 %920, %921, !dbg !2135
  %923 = xor i32 %919, %922, !dbg !2135
  %924 = and i32 %912, %853, !dbg !2135
  %925 = or i32 %912, %853, !dbg !2135
  %926 = and i32 %925, %794, !dbg !2135
  %927 = or i32 %926, %924, !dbg !2135
  %928 = add i32 %923, %927, !dbg !2135
  tail call void @llvm.dbg.value(metadata i32 %928, i64 0, metadata !2020, metadata !800), !dbg !2075
  %929 = shl i32 %911, 26, !dbg !2135
  %930 = lshr i32 %911, 6, !dbg !2135
  %931 = or i32 %929, %930, !dbg !2135
  %932 = shl i32 %911, 21, !dbg !2135
  %933 = lshr i32 %911, 11, !dbg !2135
  %934 = or i32 %932, %933, !dbg !2135
  %935 = xor i32 %931, %934, !dbg !2135
  %936 = shl i32 %911, 7, !dbg !2135
  %937 = lshr i32 %911, 25, !dbg !2135
  %938 = or i32 %936, %937, !dbg !2135
  %939 = xor i32 %935, %938, !dbg !2135
  %940 = xor i32 %852, %793, !dbg !2135
  %941 = and i32 %911, %940, !dbg !2135
  %942 = xor i32 %941, %793, !dbg !2135
  %943 = shl i32 %847, 15, !dbg !2135
  %944 = lshr i32 %847, 17, !dbg !2135
  %945 = or i32 %943, %944, !dbg !2135
  %946 = shl i32 %847, 13, !dbg !2135
  %947 = lshr i32 %847, 19, !dbg !2135
  %948 = or i32 %946, %947, !dbg !2135
  %949 = lshr i32 %847, 10, !dbg !2135
  %950 = xor i32 %948, %949, !dbg !2135
  %951 = xor i32 %950, %945, !dbg !2135
  %952 = load i32, i32* %53, align 4, !dbg !2135, !tbaa !1019
  %953 = load i32, i32* %45, align 4, !dbg !2135, !tbaa !1019
  %954 = shl i32 %953, 25, !dbg !2135
  %955 = lshr i32 %953, 7, !dbg !2135
  %956 = or i32 %954, %955, !dbg !2135
  %957 = shl i32 %953, 14, !dbg !2135
  %958 = lshr i32 %953, 18, !dbg !2135
  %959 = or i32 %957, %958, !dbg !2135
  %960 = lshr i32 %953, 3, !dbg !2135
  %961 = xor i32 %959, %960, !dbg !2135
  %962 = xor i32 %961, %956, !dbg !2135
  %963 = add i32 %894, %952, !dbg !2135
  %964 = add i32 %963, %951, !dbg !2135
  %965 = add i32 %964, %962, !dbg !2135
  tail call void @llvm.dbg.value(metadata i32 %965, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %965, i32* %44, align 16, !dbg !2135, !tbaa !1019
  %966 = add i32 %965, 770255983, !dbg !2135
  %967 = add i32 %966, %733, !dbg !2135
  %968 = add i32 %967, %942, !dbg !2135
  %969 = add i32 %968, %939, !dbg !2135
  tail call void @llvm.dbg.value(metadata i32 %969, i64 0, metadata !2021, metadata !800), !dbg !2076
  %970 = add i32 %969, %734, !dbg !2135
  tail call void @llvm.dbg.value(metadata i32 %970, i64 0, metadata !2016, metadata !800), !dbg !2049
  %971 = add i32 %928, %969, !dbg !2135
  tail call void @llvm.dbg.value(metadata i32 %971, i64 0, metadata !2012, metadata !800), !dbg !2041
  %972 = shl i32 %971, 30, !dbg !2138
  %973 = lshr i32 %971, 2, !dbg !2138
  %974 = or i32 %972, %973, !dbg !2138
  %975 = shl i32 %971, 19, !dbg !2138
  %976 = lshr i32 %971, 13, !dbg !2138
  %977 = or i32 %975, %976, !dbg !2138
  %978 = xor i32 %974, %977, !dbg !2138
  %979 = shl i32 %971, 10, !dbg !2138
  %980 = lshr i32 %971, 22, !dbg !2138
  %981 = or i32 %979, %980, !dbg !2138
  %982 = xor i32 %978, %981, !dbg !2138
  %983 = and i32 %971, %912, !dbg !2138
  %984 = or i32 %971, %912, !dbg !2138
  %985 = and i32 %984, %853, !dbg !2138
  %986 = or i32 %985, %983, !dbg !2138
  %987 = add i32 %982, %986, !dbg !2138
  tail call void @llvm.dbg.value(metadata i32 %987, i64 0, metadata !2020, metadata !800), !dbg !2075
  %988 = shl i32 %970, 26, !dbg !2138
  %989 = lshr i32 %970, 6, !dbg !2138
  %990 = or i32 %988, %989, !dbg !2138
  %991 = shl i32 %970, 21, !dbg !2138
  %992 = lshr i32 %970, 11, !dbg !2138
  %993 = or i32 %991, %992, !dbg !2138
  %994 = xor i32 %990, %993, !dbg !2138
  %995 = shl i32 %970, 7, !dbg !2138
  %996 = lshr i32 %970, 25, !dbg !2138
  %997 = or i32 %995, %996, !dbg !2138
  %998 = xor i32 %994, %997, !dbg !2138
  %999 = xor i32 %911, %852, !dbg !2138
  %1000 = and i32 %970, %999, !dbg !2138
  %1001 = xor i32 %1000, %852, !dbg !2138
  %1002 = shl i32 %906, 15, !dbg !2138
  %1003 = lshr i32 %906, 17, !dbg !2138
  %1004 = or i32 %1002, %1003, !dbg !2138
  %1005 = shl i32 %906, 13, !dbg !2138
  %1006 = lshr i32 %906, 19, !dbg !2138
  %1007 = or i32 %1005, %1006, !dbg !2138
  %1008 = lshr i32 %906, 10, !dbg !2138
  %1009 = xor i32 %1007, %1008, !dbg !2138
  %1010 = xor i32 %1009, %1004, !dbg !2138
  %1011 = load i32, i32* %54, align 8, !dbg !2138, !tbaa !1019
  %1012 = load i32, i32* %46, align 8, !dbg !2138, !tbaa !1019
  %1013 = shl i32 %1012, 25, !dbg !2138
  %1014 = lshr i32 %1012, 7, !dbg !2138
  %1015 = or i32 %1013, %1014, !dbg !2138
  %1016 = shl i32 %1012, 14, !dbg !2138
  %1017 = lshr i32 %1012, 18, !dbg !2138
  %1018 = or i32 %1016, %1017, !dbg !2138
  %1019 = lshr i32 %1012, 3, !dbg !2138
  %1020 = xor i32 %1018, %1019, !dbg !2138
  %1021 = xor i32 %1020, %1015, !dbg !2138
  %1022 = add i32 %953, %1011, !dbg !2138
  %1023 = add i32 %1022, %1010, !dbg !2138
  %1024 = add i32 %1023, %1021, !dbg !2138
  tail call void @llvm.dbg.value(metadata i32 %1024, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1024, i32* %45, align 4, !dbg !2138, !tbaa !1019
  %1025 = add i32 %1024, 1249150122, !dbg !2138
  %1026 = add i32 %1025, %793, !dbg !2138
  %1027 = add i32 %1026, %1001, !dbg !2138
  %1028 = add i32 %1027, %998, !dbg !2138
  tail call void @llvm.dbg.value(metadata i32 %1028, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1029 = add i32 %1028, %794, !dbg !2138
  tail call void @llvm.dbg.value(metadata i32 %1029, i64 0, metadata !2015, metadata !800), !dbg !2047
  %1030 = add i32 %987, %1028, !dbg !2138
  tail call void @llvm.dbg.value(metadata i32 %1030, i64 0, metadata !2011, metadata !800), !dbg !2039
  %1031 = shl i32 %1030, 30, !dbg !2141
  %1032 = lshr i32 %1030, 2, !dbg !2141
  %1033 = or i32 %1031, %1032, !dbg !2141
  %1034 = shl i32 %1030, 19, !dbg !2141
  %1035 = lshr i32 %1030, 13, !dbg !2141
  %1036 = or i32 %1034, %1035, !dbg !2141
  %1037 = xor i32 %1033, %1036, !dbg !2141
  %1038 = shl i32 %1030, 10, !dbg !2141
  %1039 = lshr i32 %1030, 22, !dbg !2141
  %1040 = or i32 %1038, %1039, !dbg !2141
  %1041 = xor i32 %1037, %1040, !dbg !2141
  %1042 = and i32 %1030, %971, !dbg !2141
  %1043 = or i32 %1030, %971, !dbg !2141
  %1044 = and i32 %1043, %912, !dbg !2141
  %1045 = or i32 %1044, %1042, !dbg !2141
  %1046 = add i32 %1041, %1045, !dbg !2141
  tail call void @llvm.dbg.value(metadata i32 %1046, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1047 = shl i32 %1029, 26, !dbg !2141
  %1048 = lshr i32 %1029, 6, !dbg !2141
  %1049 = or i32 %1047, %1048, !dbg !2141
  %1050 = shl i32 %1029, 21, !dbg !2141
  %1051 = lshr i32 %1029, 11, !dbg !2141
  %1052 = or i32 %1050, %1051, !dbg !2141
  %1053 = xor i32 %1049, %1052, !dbg !2141
  %1054 = shl i32 %1029, 7, !dbg !2141
  %1055 = lshr i32 %1029, 25, !dbg !2141
  %1056 = or i32 %1054, %1055, !dbg !2141
  %1057 = xor i32 %1053, %1056, !dbg !2141
  %1058 = xor i32 %970, %911, !dbg !2141
  %1059 = and i32 %1029, %1058, !dbg !2141
  %1060 = xor i32 %1059, %911, !dbg !2141
  %1061 = shl i32 %965, 15, !dbg !2141
  %1062 = lshr i32 %965, 17, !dbg !2141
  %1063 = or i32 %1061, %1062, !dbg !2141
  %1064 = shl i32 %965, 13, !dbg !2141
  %1065 = lshr i32 %965, 19, !dbg !2141
  %1066 = or i32 %1064, %1065, !dbg !2141
  %1067 = lshr i32 %965, 10, !dbg !2141
  %1068 = xor i32 %1066, %1067, !dbg !2141
  %1069 = xor i32 %1068, %1063, !dbg !2141
  %1070 = load i32, i32* %55, align 4, !dbg !2141, !tbaa !1019
  %1071 = load i32, i32* %47, align 4, !dbg !2141, !tbaa !1019
  %1072 = shl i32 %1071, 25, !dbg !2141
  %1073 = lshr i32 %1071, 7, !dbg !2141
  %1074 = or i32 %1072, %1073, !dbg !2141
  %1075 = shl i32 %1071, 14, !dbg !2141
  %1076 = lshr i32 %1071, 18, !dbg !2141
  %1077 = or i32 %1075, %1076, !dbg !2141
  %1078 = lshr i32 %1071, 3, !dbg !2141
  %1079 = xor i32 %1077, %1078, !dbg !2141
  %1080 = xor i32 %1079, %1074, !dbg !2141
  %1081 = add i32 %1012, %1070, !dbg !2141
  %1082 = add i32 %1081, %1069, !dbg !2141
  %1083 = add i32 %1082, %1080, !dbg !2141
  tail call void @llvm.dbg.value(metadata i32 %1083, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1083, i32* %46, align 8, !dbg !2141, !tbaa !1019
  %1084 = add i32 %1083, 1555081692, !dbg !2141
  %1085 = add i32 %1084, %852, !dbg !2141
  %1086 = add i32 %1085, %1060, !dbg !2141
  %1087 = add i32 %1086, %1057, !dbg !2141
  tail call void @llvm.dbg.value(metadata i32 %1087, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1088 = add i32 %1087, %853, !dbg !2141
  tail call void @llvm.dbg.value(metadata i32 %1088, i64 0, metadata !2014, metadata !800), !dbg !2045
  %1089 = add i32 %1046, %1087, !dbg !2141
  tail call void @llvm.dbg.value(metadata i32 %1089, i64 0, metadata !2010, metadata !800), !dbg !2037
  %1090 = shl i32 %1089, 30, !dbg !2144
  %1091 = lshr i32 %1089, 2, !dbg !2144
  %1092 = or i32 %1090, %1091, !dbg !2144
  %1093 = shl i32 %1089, 19, !dbg !2144
  %1094 = lshr i32 %1089, 13, !dbg !2144
  %1095 = or i32 %1093, %1094, !dbg !2144
  %1096 = xor i32 %1092, %1095, !dbg !2144
  %1097 = shl i32 %1089, 10, !dbg !2144
  %1098 = lshr i32 %1089, 22, !dbg !2144
  %1099 = or i32 %1097, %1098, !dbg !2144
  %1100 = xor i32 %1096, %1099, !dbg !2144
  %1101 = and i32 %1089, %1030, !dbg !2144
  %1102 = or i32 %1089, %1030, !dbg !2144
  %1103 = and i32 %1102, %971, !dbg !2144
  %1104 = or i32 %1103, %1101, !dbg !2144
  %1105 = add i32 %1100, %1104, !dbg !2144
  tail call void @llvm.dbg.value(metadata i32 %1105, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1106 = shl i32 %1088, 26, !dbg !2144
  %1107 = lshr i32 %1088, 6, !dbg !2144
  %1108 = or i32 %1106, %1107, !dbg !2144
  %1109 = shl i32 %1088, 21, !dbg !2144
  %1110 = lshr i32 %1088, 11, !dbg !2144
  %1111 = or i32 %1109, %1110, !dbg !2144
  %1112 = xor i32 %1108, %1111, !dbg !2144
  %1113 = shl i32 %1088, 7, !dbg !2144
  %1114 = lshr i32 %1088, 25, !dbg !2144
  %1115 = or i32 %1113, %1114, !dbg !2144
  %1116 = xor i32 %1112, %1115, !dbg !2144
  %1117 = xor i32 %1029, %970, !dbg !2144
  %1118 = and i32 %1088, %1117, !dbg !2144
  %1119 = xor i32 %1118, %970, !dbg !2144
  %1120 = shl i32 %1024, 15, !dbg !2144
  %1121 = lshr i32 %1024, 17, !dbg !2144
  %1122 = or i32 %1120, %1121, !dbg !2144
  %1123 = shl i32 %1024, 13, !dbg !2144
  %1124 = lshr i32 %1024, 19, !dbg !2144
  %1125 = or i32 %1123, %1124, !dbg !2144
  %1126 = lshr i32 %1024, 10, !dbg !2144
  %1127 = xor i32 %1125, %1126, !dbg !2144
  %1128 = xor i32 %1127, %1122, !dbg !2144
  %1129 = load i32, i32* %40, align 16, !dbg !2144, !tbaa !1019
  %1130 = load i32, i32* %48, align 16, !dbg !2144, !tbaa !1019
  %1131 = shl i32 %1130, 25, !dbg !2144
  %1132 = lshr i32 %1130, 7, !dbg !2144
  %1133 = or i32 %1131, %1132, !dbg !2144
  %1134 = shl i32 %1130, 14, !dbg !2144
  %1135 = lshr i32 %1130, 18, !dbg !2144
  %1136 = or i32 %1134, %1135, !dbg !2144
  %1137 = lshr i32 %1130, 3, !dbg !2144
  %1138 = xor i32 %1136, %1137, !dbg !2144
  %1139 = xor i32 %1138, %1133, !dbg !2144
  %1140 = add i32 %1071, %1129, !dbg !2144
  %1141 = add i32 %1140, %1128, !dbg !2144
  %1142 = add i32 %1141, %1139, !dbg !2144
  tail call void @llvm.dbg.value(metadata i32 %1142, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1142, i32* %47, align 4, !dbg !2144, !tbaa !1019
  %1143 = add i32 %1142, 1996064986, !dbg !2144
  %1144 = add i32 %1143, %911, !dbg !2144
  %1145 = add i32 %1144, %1119, !dbg !2144
  %1146 = add i32 %1145, %1116, !dbg !2144
  tail call void @llvm.dbg.value(metadata i32 %1146, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1147 = add i32 %1146, %912, !dbg !2144
  tail call void @llvm.dbg.value(metadata i32 %1147, i64 0, metadata !2013, metadata !800), !dbg !2043
  %1148 = add i32 %1105, %1146, !dbg !2144
  tail call void @llvm.dbg.value(metadata i32 %1148, i64 0, metadata !2009, metadata !800), !dbg !2035
  %1149 = shl i32 %1148, 30, !dbg !2147
  %1150 = lshr i32 %1148, 2, !dbg !2147
  %1151 = or i32 %1149, %1150, !dbg !2147
  %1152 = shl i32 %1148, 19, !dbg !2147
  %1153 = lshr i32 %1148, 13, !dbg !2147
  %1154 = or i32 %1152, %1153, !dbg !2147
  %1155 = xor i32 %1151, %1154, !dbg !2147
  %1156 = shl i32 %1148, 10, !dbg !2147
  %1157 = lshr i32 %1148, 22, !dbg !2147
  %1158 = or i32 %1156, %1157, !dbg !2147
  %1159 = xor i32 %1155, %1158, !dbg !2147
  %1160 = and i32 %1148, %1089, !dbg !2147
  %1161 = or i32 %1148, %1089, !dbg !2147
  %1162 = and i32 %1161, %1030, !dbg !2147
  %1163 = or i32 %1162, %1160, !dbg !2147
  %1164 = add i32 %1159, %1163, !dbg !2147
  tail call void @llvm.dbg.value(metadata i32 %1164, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1165 = shl i32 %1147, 26, !dbg !2147
  %1166 = lshr i32 %1147, 6, !dbg !2147
  %1167 = or i32 %1165, %1166, !dbg !2147
  %1168 = shl i32 %1147, 21, !dbg !2147
  %1169 = lshr i32 %1147, 11, !dbg !2147
  %1170 = or i32 %1168, %1169, !dbg !2147
  %1171 = xor i32 %1167, %1170, !dbg !2147
  %1172 = shl i32 %1147, 7, !dbg !2147
  %1173 = lshr i32 %1147, 25, !dbg !2147
  %1174 = or i32 %1172, %1173, !dbg !2147
  %1175 = xor i32 %1171, %1174, !dbg !2147
  %1176 = xor i32 %1088, %1029, !dbg !2147
  %1177 = and i32 %1147, %1176, !dbg !2147
  %1178 = xor i32 %1177, %1029, !dbg !2147
  %1179 = shl i32 %1083, 15, !dbg !2147
  %1180 = lshr i32 %1083, 17, !dbg !2147
  %1181 = or i32 %1179, %1180, !dbg !2147
  %1182 = shl i32 %1083, 13, !dbg !2147
  %1183 = lshr i32 %1083, 19, !dbg !2147
  %1184 = or i32 %1182, %1183, !dbg !2147
  %1185 = lshr i32 %1083, 10, !dbg !2147
  %1186 = xor i32 %1184, %1185, !dbg !2147
  %1187 = xor i32 %1186, %1181, !dbg !2147
  %1188 = load i32, i32* %41, align 4, !dbg !2147, !tbaa !1019
  %1189 = load i32, i32* %49, align 4, !dbg !2147, !tbaa !1019
  %1190 = shl i32 %1189, 25, !dbg !2147
  %1191 = lshr i32 %1189, 7, !dbg !2147
  %1192 = or i32 %1190, %1191, !dbg !2147
  %1193 = shl i32 %1189, 14, !dbg !2147
  %1194 = lshr i32 %1189, 18, !dbg !2147
  %1195 = or i32 %1193, %1194, !dbg !2147
  %1196 = lshr i32 %1189, 3, !dbg !2147
  %1197 = xor i32 %1195, %1196, !dbg !2147
  %1198 = xor i32 %1197, %1192, !dbg !2147
  %1199 = add i32 %1130, %1188, !dbg !2147
  %1200 = add i32 %1199, %1187, !dbg !2147
  %1201 = add i32 %1200, %1198, !dbg !2147
  tail call void @llvm.dbg.value(metadata i32 %1201, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1201, i32* %48, align 16, !dbg !2147, !tbaa !1019
  %1202 = add i32 %1201, -1740746414, !dbg !2147
  %1203 = add i32 %1202, %970, !dbg !2147
  %1204 = add i32 %1203, %1178, !dbg !2147
  %1205 = add i32 %1204, %1175, !dbg !2147
  tail call void @llvm.dbg.value(metadata i32 %1205, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1206 = add i32 %1205, %971, !dbg !2147
  tail call void @llvm.dbg.value(metadata i32 %1206, i64 0, metadata !2012, metadata !800), !dbg !2041
  %1207 = add i32 %1164, %1205, !dbg !2147
  tail call void @llvm.dbg.value(metadata i32 %1207, i64 0, metadata !2016, metadata !800), !dbg !2049
  %1208 = shl i32 %1207, 30, !dbg !2150
  %1209 = lshr i32 %1207, 2, !dbg !2150
  %1210 = or i32 %1208, %1209, !dbg !2150
  %1211 = shl i32 %1207, 19, !dbg !2150
  %1212 = lshr i32 %1207, 13, !dbg !2150
  %1213 = or i32 %1211, %1212, !dbg !2150
  %1214 = xor i32 %1210, %1213, !dbg !2150
  %1215 = shl i32 %1207, 10, !dbg !2150
  %1216 = lshr i32 %1207, 22, !dbg !2150
  %1217 = or i32 %1215, %1216, !dbg !2150
  %1218 = xor i32 %1214, %1217, !dbg !2150
  %1219 = and i32 %1207, %1148, !dbg !2150
  %1220 = or i32 %1207, %1148, !dbg !2150
  %1221 = and i32 %1220, %1089, !dbg !2150
  %1222 = or i32 %1221, %1219, !dbg !2150
  %1223 = add i32 %1218, %1222, !dbg !2150
  tail call void @llvm.dbg.value(metadata i32 %1223, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1224 = shl i32 %1206, 26, !dbg !2150
  %1225 = lshr i32 %1206, 6, !dbg !2150
  %1226 = or i32 %1224, %1225, !dbg !2150
  %1227 = shl i32 %1206, 21, !dbg !2150
  %1228 = lshr i32 %1206, 11, !dbg !2150
  %1229 = or i32 %1227, %1228, !dbg !2150
  %1230 = xor i32 %1226, %1229, !dbg !2150
  %1231 = shl i32 %1206, 7, !dbg !2150
  %1232 = lshr i32 %1206, 25, !dbg !2150
  %1233 = or i32 %1231, %1232, !dbg !2150
  %1234 = xor i32 %1230, %1233, !dbg !2150
  %1235 = xor i32 %1147, %1088, !dbg !2150
  %1236 = and i32 %1206, %1235, !dbg !2150
  %1237 = xor i32 %1236, %1088, !dbg !2150
  %1238 = shl i32 %1142, 15, !dbg !2150
  %1239 = lshr i32 %1142, 17, !dbg !2150
  %1240 = or i32 %1238, %1239, !dbg !2150
  %1241 = shl i32 %1142, 13, !dbg !2150
  %1242 = lshr i32 %1142, 19, !dbg !2150
  %1243 = or i32 %1241, %1242, !dbg !2150
  %1244 = lshr i32 %1142, 10, !dbg !2150
  %1245 = xor i32 %1243, %1244, !dbg !2150
  %1246 = xor i32 %1245, %1240, !dbg !2150
  %1247 = load i32, i32* %42, align 8, !dbg !2150, !tbaa !1019
  %1248 = load i32, i32* %50, align 8, !dbg !2150, !tbaa !1019
  %1249 = shl i32 %1248, 25, !dbg !2150
  %1250 = lshr i32 %1248, 7, !dbg !2150
  %1251 = or i32 %1249, %1250, !dbg !2150
  %1252 = shl i32 %1248, 14, !dbg !2150
  %1253 = lshr i32 %1248, 18, !dbg !2150
  %1254 = or i32 %1252, %1253, !dbg !2150
  %1255 = lshr i32 %1248, 3, !dbg !2150
  %1256 = xor i32 %1254, %1255, !dbg !2150
  %1257 = xor i32 %1256, %1251, !dbg !2150
  %1258 = add i32 %1189, %1247, !dbg !2150
  %1259 = add i32 %1258, %1246, !dbg !2150
  %1260 = add i32 %1259, %1257, !dbg !2150
  tail call void @llvm.dbg.value(metadata i32 %1260, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1260, i32* %49, align 4, !dbg !2150, !tbaa !1019
  %1261 = add i32 %1260, -1473132947, !dbg !2150
  %1262 = add i32 %1261, %1029, !dbg !2150
  %1263 = add i32 %1262, %1237, !dbg !2150
  %1264 = add i32 %1263, %1234, !dbg !2150
  tail call void @llvm.dbg.value(metadata i32 %1264, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1265 = add i32 %1264, %1030, !dbg !2150
  tail call void @llvm.dbg.value(metadata i32 %1265, i64 0, metadata !2011, metadata !800), !dbg !2039
  %1266 = add i32 %1223, %1264, !dbg !2150
  tail call void @llvm.dbg.value(metadata i32 %1266, i64 0, metadata !2015, metadata !800), !dbg !2047
  %1267 = shl i32 %1266, 30, !dbg !2153
  %1268 = lshr i32 %1266, 2, !dbg !2153
  %1269 = or i32 %1267, %1268, !dbg !2153
  %1270 = shl i32 %1266, 19, !dbg !2153
  %1271 = lshr i32 %1266, 13, !dbg !2153
  %1272 = or i32 %1270, %1271, !dbg !2153
  %1273 = xor i32 %1269, %1272, !dbg !2153
  %1274 = shl i32 %1266, 10, !dbg !2153
  %1275 = lshr i32 %1266, 22, !dbg !2153
  %1276 = or i32 %1274, %1275, !dbg !2153
  %1277 = xor i32 %1273, %1276, !dbg !2153
  %1278 = and i32 %1266, %1207, !dbg !2153
  %1279 = or i32 %1266, %1207, !dbg !2153
  %1280 = and i32 %1279, %1148, !dbg !2153
  %1281 = or i32 %1280, %1278, !dbg !2153
  %1282 = add i32 %1277, %1281, !dbg !2153
  tail call void @llvm.dbg.value(metadata i32 %1282, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1283 = shl i32 %1265, 26, !dbg !2153
  %1284 = lshr i32 %1265, 6, !dbg !2153
  %1285 = or i32 %1283, %1284, !dbg !2153
  %1286 = shl i32 %1265, 21, !dbg !2153
  %1287 = lshr i32 %1265, 11, !dbg !2153
  %1288 = or i32 %1286, %1287, !dbg !2153
  %1289 = xor i32 %1285, %1288, !dbg !2153
  %1290 = shl i32 %1265, 7, !dbg !2153
  %1291 = lshr i32 %1265, 25, !dbg !2153
  %1292 = or i32 %1290, %1291, !dbg !2153
  %1293 = xor i32 %1289, %1292, !dbg !2153
  %1294 = xor i32 %1206, %1147, !dbg !2153
  %1295 = and i32 %1265, %1294, !dbg !2153
  %1296 = xor i32 %1295, %1147, !dbg !2153
  %1297 = shl i32 %1201, 15, !dbg !2153
  %1298 = lshr i32 %1201, 17, !dbg !2153
  %1299 = or i32 %1297, %1298, !dbg !2153
  %1300 = shl i32 %1201, 13, !dbg !2153
  %1301 = lshr i32 %1201, 19, !dbg !2153
  %1302 = or i32 %1300, %1301, !dbg !2153
  %1303 = lshr i32 %1201, 10, !dbg !2153
  %1304 = xor i32 %1302, %1303, !dbg !2153
  %1305 = xor i32 %1304, %1299, !dbg !2153
  %1306 = load i32, i32* %43, align 4, !dbg !2153, !tbaa !1019
  %1307 = load i32, i32* %51, align 4, !dbg !2153, !tbaa !1019
  %1308 = shl i32 %1307, 25, !dbg !2153
  %1309 = lshr i32 %1307, 7, !dbg !2153
  %1310 = or i32 %1308, %1309, !dbg !2153
  %1311 = shl i32 %1307, 14, !dbg !2153
  %1312 = lshr i32 %1307, 18, !dbg !2153
  %1313 = or i32 %1311, %1312, !dbg !2153
  %1314 = lshr i32 %1307, 3, !dbg !2153
  %1315 = xor i32 %1313, %1314, !dbg !2153
  %1316 = xor i32 %1315, %1310, !dbg !2153
  %1317 = add i32 %1248, %1306, !dbg !2153
  %1318 = add i32 %1317, %1305, !dbg !2153
  %1319 = add i32 %1318, %1316, !dbg !2153
  tail call void @llvm.dbg.value(metadata i32 %1319, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1319, i32* %50, align 8, !dbg !2153, !tbaa !1019
  %1320 = add i32 %1319, -1341970488, !dbg !2153
  %1321 = add i32 %1320, %1088, !dbg !2153
  %1322 = add i32 %1321, %1296, !dbg !2153
  %1323 = add i32 %1322, %1293, !dbg !2153
  tail call void @llvm.dbg.value(metadata i32 %1323, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1324 = add i32 %1323, %1089, !dbg !2153
  tail call void @llvm.dbg.value(metadata i32 %1324, i64 0, metadata !2010, metadata !800), !dbg !2037
  %1325 = add i32 %1282, %1323, !dbg !2153
  tail call void @llvm.dbg.value(metadata i32 %1325, i64 0, metadata !2014, metadata !800), !dbg !2045
  %1326 = shl i32 %1325, 30, !dbg !2156
  %1327 = lshr i32 %1325, 2, !dbg !2156
  %1328 = or i32 %1326, %1327, !dbg !2156
  %1329 = shl i32 %1325, 19, !dbg !2156
  %1330 = lshr i32 %1325, 13, !dbg !2156
  %1331 = or i32 %1329, %1330, !dbg !2156
  %1332 = xor i32 %1328, %1331, !dbg !2156
  %1333 = shl i32 %1325, 10, !dbg !2156
  %1334 = lshr i32 %1325, 22, !dbg !2156
  %1335 = or i32 %1333, %1334, !dbg !2156
  %1336 = xor i32 %1332, %1335, !dbg !2156
  %1337 = and i32 %1325, %1266, !dbg !2156
  %1338 = or i32 %1325, %1266, !dbg !2156
  %1339 = and i32 %1338, %1207, !dbg !2156
  %1340 = or i32 %1339, %1337, !dbg !2156
  %1341 = add i32 %1336, %1340, !dbg !2156
  tail call void @llvm.dbg.value(metadata i32 %1341, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1342 = shl i32 %1324, 26, !dbg !2156
  %1343 = lshr i32 %1324, 6, !dbg !2156
  %1344 = or i32 %1342, %1343, !dbg !2156
  %1345 = shl i32 %1324, 21, !dbg !2156
  %1346 = lshr i32 %1324, 11, !dbg !2156
  %1347 = or i32 %1345, %1346, !dbg !2156
  %1348 = xor i32 %1344, %1347, !dbg !2156
  %1349 = shl i32 %1324, 7, !dbg !2156
  %1350 = lshr i32 %1324, 25, !dbg !2156
  %1351 = or i32 %1349, %1350, !dbg !2156
  %1352 = xor i32 %1348, %1351, !dbg !2156
  %1353 = xor i32 %1265, %1206, !dbg !2156
  %1354 = and i32 %1324, %1353, !dbg !2156
  %1355 = xor i32 %1354, %1206, !dbg !2156
  %1356 = shl i32 %1260, 15, !dbg !2156
  %1357 = lshr i32 %1260, 17, !dbg !2156
  %1358 = or i32 %1356, %1357, !dbg !2156
  %1359 = shl i32 %1260, 13, !dbg !2156
  %1360 = lshr i32 %1260, 19, !dbg !2156
  %1361 = or i32 %1359, %1360, !dbg !2156
  %1362 = lshr i32 %1260, 10, !dbg !2156
  %1363 = xor i32 %1361, %1362, !dbg !2156
  %1364 = xor i32 %1363, %1358, !dbg !2156
  %1365 = load i32, i32* %44, align 16, !dbg !2156, !tbaa !1019
  %1366 = load i32, i32* %52, align 16, !dbg !2156, !tbaa !1019
  %1367 = shl i32 %1366, 25, !dbg !2156
  %1368 = lshr i32 %1366, 7, !dbg !2156
  %1369 = or i32 %1367, %1368, !dbg !2156
  %1370 = shl i32 %1366, 14, !dbg !2156
  %1371 = lshr i32 %1366, 18, !dbg !2156
  %1372 = or i32 %1370, %1371, !dbg !2156
  %1373 = lshr i32 %1366, 3, !dbg !2156
  %1374 = xor i32 %1372, %1373, !dbg !2156
  %1375 = xor i32 %1374, %1369, !dbg !2156
  %1376 = add i32 %1307, %1365, !dbg !2156
  %1377 = add i32 %1376, %1364, !dbg !2156
  %1378 = add i32 %1377, %1375, !dbg !2156
  tail call void @llvm.dbg.value(metadata i32 %1378, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1378, i32* %51, align 4, !dbg !2156, !tbaa !1019
  %1379 = add i32 %1378, -1084653625, !dbg !2156
  %1380 = add i32 %1379, %1147, !dbg !2156
  %1381 = add i32 %1380, %1355, !dbg !2156
  %1382 = add i32 %1381, %1352, !dbg !2156
  tail call void @llvm.dbg.value(metadata i32 %1382, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1383 = add i32 %1382, %1148, !dbg !2156
  tail call void @llvm.dbg.value(metadata i32 %1383, i64 0, metadata !2009, metadata !800), !dbg !2035
  %1384 = add i32 %1341, %1382, !dbg !2156
  tail call void @llvm.dbg.value(metadata i32 %1384, i64 0, metadata !2013, metadata !800), !dbg !2043
  %1385 = shl i32 %1384, 30, !dbg !2159
  %1386 = lshr i32 %1384, 2, !dbg !2159
  %1387 = or i32 %1385, %1386, !dbg !2159
  %1388 = shl i32 %1384, 19, !dbg !2159
  %1389 = lshr i32 %1384, 13, !dbg !2159
  %1390 = or i32 %1388, %1389, !dbg !2159
  %1391 = xor i32 %1387, %1390, !dbg !2159
  %1392 = shl i32 %1384, 10, !dbg !2159
  %1393 = lshr i32 %1384, 22, !dbg !2159
  %1394 = or i32 %1392, %1393, !dbg !2159
  %1395 = xor i32 %1391, %1394, !dbg !2159
  %1396 = and i32 %1384, %1325, !dbg !2159
  %1397 = or i32 %1384, %1325, !dbg !2159
  %1398 = and i32 %1397, %1266, !dbg !2159
  %1399 = or i32 %1398, %1396, !dbg !2159
  %1400 = add i32 %1395, %1399, !dbg !2159
  tail call void @llvm.dbg.value(metadata i32 %1400, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1401 = shl i32 %1383, 26, !dbg !2159
  %1402 = lshr i32 %1383, 6, !dbg !2159
  %1403 = or i32 %1401, %1402, !dbg !2159
  %1404 = shl i32 %1383, 21, !dbg !2159
  %1405 = lshr i32 %1383, 11, !dbg !2159
  %1406 = or i32 %1404, %1405, !dbg !2159
  %1407 = xor i32 %1403, %1406, !dbg !2159
  %1408 = shl i32 %1383, 7, !dbg !2159
  %1409 = lshr i32 %1383, 25, !dbg !2159
  %1410 = or i32 %1408, %1409, !dbg !2159
  %1411 = xor i32 %1407, %1410, !dbg !2159
  %1412 = xor i32 %1324, %1265, !dbg !2159
  %1413 = and i32 %1383, %1412, !dbg !2159
  %1414 = xor i32 %1413, %1265, !dbg !2159
  %1415 = shl i32 %1319, 15, !dbg !2159
  %1416 = lshr i32 %1319, 17, !dbg !2159
  %1417 = or i32 %1415, %1416, !dbg !2159
  %1418 = shl i32 %1319, 13, !dbg !2159
  %1419 = lshr i32 %1319, 19, !dbg !2159
  %1420 = or i32 %1418, %1419, !dbg !2159
  %1421 = lshr i32 %1319, 10, !dbg !2159
  %1422 = xor i32 %1420, %1421, !dbg !2159
  %1423 = xor i32 %1422, %1417, !dbg !2159
  %1424 = load i32, i32* %45, align 4, !dbg !2159, !tbaa !1019
  %1425 = load i32, i32* %53, align 4, !dbg !2159, !tbaa !1019
  %1426 = shl i32 %1425, 25, !dbg !2159
  %1427 = lshr i32 %1425, 7, !dbg !2159
  %1428 = or i32 %1426, %1427, !dbg !2159
  %1429 = shl i32 %1425, 14, !dbg !2159
  %1430 = lshr i32 %1425, 18, !dbg !2159
  %1431 = or i32 %1429, %1430, !dbg !2159
  %1432 = lshr i32 %1425, 3, !dbg !2159
  %1433 = xor i32 %1431, %1432, !dbg !2159
  %1434 = xor i32 %1433, %1428, !dbg !2159
  %1435 = add i32 %1366, %1424, !dbg !2159
  %1436 = add i32 %1435, %1423, !dbg !2159
  %1437 = add i32 %1436, %1434, !dbg !2159
  tail call void @llvm.dbg.value(metadata i32 %1437, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1437, i32* %52, align 16, !dbg !2159, !tbaa !1019
  %1438 = add i32 %1437, -958395405, !dbg !2159
  %1439 = add i32 %1438, %1206, !dbg !2159
  %1440 = add i32 %1439, %1414, !dbg !2159
  %1441 = add i32 %1440, %1411, !dbg !2159
  tail call void @llvm.dbg.value(metadata i32 %1441, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1442 = add i32 %1441, %1207, !dbg !2159
  tail call void @llvm.dbg.value(metadata i32 %1442, i64 0, metadata !2016, metadata !800), !dbg !2049
  %1443 = add i32 %1400, %1441, !dbg !2159
  tail call void @llvm.dbg.value(metadata i32 %1443, i64 0, metadata !2012, metadata !800), !dbg !2041
  %1444 = shl i32 %1443, 30, !dbg !2162
  %1445 = lshr i32 %1443, 2, !dbg !2162
  %1446 = or i32 %1444, %1445, !dbg !2162
  %1447 = shl i32 %1443, 19, !dbg !2162
  %1448 = lshr i32 %1443, 13, !dbg !2162
  %1449 = or i32 %1447, %1448, !dbg !2162
  %1450 = xor i32 %1446, %1449, !dbg !2162
  %1451 = shl i32 %1443, 10, !dbg !2162
  %1452 = lshr i32 %1443, 22, !dbg !2162
  %1453 = or i32 %1451, %1452, !dbg !2162
  %1454 = xor i32 %1450, %1453, !dbg !2162
  %1455 = and i32 %1443, %1384, !dbg !2162
  %1456 = or i32 %1443, %1384, !dbg !2162
  %1457 = and i32 %1456, %1325, !dbg !2162
  %1458 = or i32 %1457, %1455, !dbg !2162
  %1459 = add i32 %1454, %1458, !dbg !2162
  tail call void @llvm.dbg.value(metadata i32 %1459, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1460 = shl i32 %1442, 26, !dbg !2162
  %1461 = lshr i32 %1442, 6, !dbg !2162
  %1462 = or i32 %1460, %1461, !dbg !2162
  %1463 = shl i32 %1442, 21, !dbg !2162
  %1464 = lshr i32 %1442, 11, !dbg !2162
  %1465 = or i32 %1463, %1464, !dbg !2162
  %1466 = xor i32 %1462, %1465, !dbg !2162
  %1467 = shl i32 %1442, 7, !dbg !2162
  %1468 = lshr i32 %1442, 25, !dbg !2162
  %1469 = or i32 %1467, %1468, !dbg !2162
  %1470 = xor i32 %1466, %1469, !dbg !2162
  %1471 = xor i32 %1383, %1324, !dbg !2162
  %1472 = and i32 %1442, %1471, !dbg !2162
  %1473 = xor i32 %1472, %1324, !dbg !2162
  %1474 = shl i32 %1378, 15, !dbg !2162
  %1475 = lshr i32 %1378, 17, !dbg !2162
  %1476 = or i32 %1474, %1475, !dbg !2162
  %1477 = shl i32 %1378, 13, !dbg !2162
  %1478 = lshr i32 %1378, 19, !dbg !2162
  %1479 = or i32 %1477, %1478, !dbg !2162
  %1480 = lshr i32 %1378, 10, !dbg !2162
  %1481 = xor i32 %1479, %1480, !dbg !2162
  %1482 = xor i32 %1481, %1476, !dbg !2162
  %1483 = load i32, i32* %46, align 8, !dbg !2162, !tbaa !1019
  %1484 = load i32, i32* %54, align 8, !dbg !2162, !tbaa !1019
  %1485 = shl i32 %1484, 25, !dbg !2162
  %1486 = lshr i32 %1484, 7, !dbg !2162
  %1487 = or i32 %1485, %1486, !dbg !2162
  %1488 = shl i32 %1484, 14, !dbg !2162
  %1489 = lshr i32 %1484, 18, !dbg !2162
  %1490 = or i32 %1488, %1489, !dbg !2162
  %1491 = lshr i32 %1484, 3, !dbg !2162
  %1492 = xor i32 %1490, %1491, !dbg !2162
  %1493 = xor i32 %1492, %1487, !dbg !2162
  %1494 = add i32 %1425, %1483, !dbg !2162
  %1495 = add i32 %1494, %1482, !dbg !2162
  %1496 = add i32 %1495, %1493, !dbg !2162
  tail call void @llvm.dbg.value(metadata i32 %1496, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1496, i32* %53, align 4, !dbg !2162, !tbaa !1019
  %1497 = add i32 %1496, -710438585, !dbg !2162
  %1498 = add i32 %1497, %1265, !dbg !2162
  %1499 = add i32 %1498, %1473, !dbg !2162
  %1500 = add i32 %1499, %1470, !dbg !2162
  tail call void @llvm.dbg.value(metadata i32 %1500, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1501 = add i32 %1500, %1266, !dbg !2162
  tail call void @llvm.dbg.value(metadata i32 %1501, i64 0, metadata !2015, metadata !800), !dbg !2047
  %1502 = add i32 %1459, %1500, !dbg !2162
  tail call void @llvm.dbg.value(metadata i32 %1502, i64 0, metadata !2011, metadata !800), !dbg !2039
  %1503 = shl i32 %1502, 30, !dbg !2165
  %1504 = lshr i32 %1502, 2, !dbg !2165
  %1505 = or i32 %1503, %1504, !dbg !2165
  %1506 = shl i32 %1502, 19, !dbg !2165
  %1507 = lshr i32 %1502, 13, !dbg !2165
  %1508 = or i32 %1506, %1507, !dbg !2165
  %1509 = xor i32 %1505, %1508, !dbg !2165
  %1510 = shl i32 %1502, 10, !dbg !2165
  %1511 = lshr i32 %1502, 22, !dbg !2165
  %1512 = or i32 %1510, %1511, !dbg !2165
  %1513 = xor i32 %1509, %1512, !dbg !2165
  %1514 = and i32 %1502, %1443, !dbg !2165
  %1515 = or i32 %1502, %1443, !dbg !2165
  %1516 = and i32 %1515, %1384, !dbg !2165
  %1517 = or i32 %1516, %1514, !dbg !2165
  %1518 = add i32 %1513, %1517, !dbg !2165
  tail call void @llvm.dbg.value(metadata i32 %1518, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1519 = shl i32 %1501, 26, !dbg !2165
  %1520 = lshr i32 %1501, 6, !dbg !2165
  %1521 = or i32 %1519, %1520, !dbg !2165
  %1522 = shl i32 %1501, 21, !dbg !2165
  %1523 = lshr i32 %1501, 11, !dbg !2165
  %1524 = or i32 %1522, %1523, !dbg !2165
  %1525 = xor i32 %1521, %1524, !dbg !2165
  %1526 = shl i32 %1501, 7, !dbg !2165
  %1527 = lshr i32 %1501, 25, !dbg !2165
  %1528 = or i32 %1526, %1527, !dbg !2165
  %1529 = xor i32 %1525, %1528, !dbg !2165
  %1530 = xor i32 %1442, %1383, !dbg !2165
  %1531 = and i32 %1501, %1530, !dbg !2165
  %1532 = xor i32 %1531, %1383, !dbg !2165
  %1533 = shl i32 %1437, 15, !dbg !2165
  %1534 = lshr i32 %1437, 17, !dbg !2165
  %1535 = or i32 %1533, %1534, !dbg !2165
  %1536 = shl i32 %1437, 13, !dbg !2165
  %1537 = lshr i32 %1437, 19, !dbg !2165
  %1538 = or i32 %1536, %1537, !dbg !2165
  %1539 = lshr i32 %1437, 10, !dbg !2165
  %1540 = xor i32 %1538, %1539, !dbg !2165
  %1541 = xor i32 %1540, %1535, !dbg !2165
  %1542 = load i32, i32* %47, align 4, !dbg !2165, !tbaa !1019
  %1543 = load i32, i32* %55, align 4, !dbg !2165, !tbaa !1019
  %1544 = shl i32 %1543, 25, !dbg !2165
  %1545 = lshr i32 %1543, 7, !dbg !2165
  %1546 = or i32 %1544, %1545, !dbg !2165
  %1547 = shl i32 %1543, 14, !dbg !2165
  %1548 = lshr i32 %1543, 18, !dbg !2165
  %1549 = or i32 %1547, %1548, !dbg !2165
  %1550 = lshr i32 %1543, 3, !dbg !2165
  %1551 = xor i32 %1549, %1550, !dbg !2165
  %1552 = xor i32 %1551, %1546, !dbg !2165
  %1553 = add i32 %1484, %1542, !dbg !2165
  %1554 = add i32 %1553, %1541, !dbg !2165
  %1555 = add i32 %1554, %1552, !dbg !2165
  tail call void @llvm.dbg.value(metadata i32 %1555, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1555, i32* %54, align 8, !dbg !2165, !tbaa !1019
  %1556 = add i32 %1555, 113926993, !dbg !2165
  %1557 = add i32 %1556, %1324, !dbg !2165
  %1558 = add i32 %1557, %1532, !dbg !2165
  %1559 = add i32 %1558, %1529, !dbg !2165
  tail call void @llvm.dbg.value(metadata i32 %1559, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1560 = add i32 %1559, %1325, !dbg !2165
  tail call void @llvm.dbg.value(metadata i32 %1560, i64 0, metadata !2014, metadata !800), !dbg !2045
  %1561 = add i32 %1518, %1559, !dbg !2165
  tail call void @llvm.dbg.value(metadata i32 %1561, i64 0, metadata !2010, metadata !800), !dbg !2037
  %1562 = shl i32 %1561, 30, !dbg !2168
  %1563 = lshr i32 %1561, 2, !dbg !2168
  %1564 = or i32 %1562, %1563, !dbg !2168
  %1565 = shl i32 %1561, 19, !dbg !2168
  %1566 = lshr i32 %1561, 13, !dbg !2168
  %1567 = or i32 %1565, %1566, !dbg !2168
  %1568 = xor i32 %1564, %1567, !dbg !2168
  %1569 = shl i32 %1561, 10, !dbg !2168
  %1570 = lshr i32 %1561, 22, !dbg !2168
  %1571 = or i32 %1569, %1570, !dbg !2168
  %1572 = xor i32 %1568, %1571, !dbg !2168
  %1573 = and i32 %1561, %1502, !dbg !2168
  %1574 = or i32 %1561, %1502, !dbg !2168
  %1575 = and i32 %1574, %1443, !dbg !2168
  %1576 = or i32 %1575, %1573, !dbg !2168
  %1577 = add i32 %1572, %1576, !dbg !2168
  tail call void @llvm.dbg.value(metadata i32 %1577, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1578 = shl i32 %1560, 26, !dbg !2168
  %1579 = lshr i32 %1560, 6, !dbg !2168
  %1580 = or i32 %1578, %1579, !dbg !2168
  %1581 = shl i32 %1560, 21, !dbg !2168
  %1582 = lshr i32 %1560, 11, !dbg !2168
  %1583 = or i32 %1581, %1582, !dbg !2168
  %1584 = xor i32 %1580, %1583, !dbg !2168
  %1585 = shl i32 %1560, 7, !dbg !2168
  %1586 = lshr i32 %1560, 25, !dbg !2168
  %1587 = or i32 %1585, %1586, !dbg !2168
  %1588 = xor i32 %1584, %1587, !dbg !2168
  %1589 = xor i32 %1501, %1442, !dbg !2168
  %1590 = and i32 %1560, %1589, !dbg !2168
  %1591 = xor i32 %1590, %1442, !dbg !2168
  %1592 = shl i32 %1496, 15, !dbg !2168
  %1593 = lshr i32 %1496, 17, !dbg !2168
  %1594 = or i32 %1592, %1593, !dbg !2168
  %1595 = shl i32 %1496, 13, !dbg !2168
  %1596 = lshr i32 %1496, 19, !dbg !2168
  %1597 = or i32 %1595, %1596, !dbg !2168
  %1598 = lshr i32 %1496, 10, !dbg !2168
  %1599 = xor i32 %1597, %1598, !dbg !2168
  %1600 = xor i32 %1599, %1594, !dbg !2168
  %1601 = load i32, i32* %48, align 16, !dbg !2168, !tbaa !1019
  %1602 = load i32, i32* %40, align 16, !dbg !2168, !tbaa !1019
  %1603 = shl i32 %1602, 25, !dbg !2168
  %1604 = lshr i32 %1602, 7, !dbg !2168
  %1605 = or i32 %1603, %1604, !dbg !2168
  %1606 = shl i32 %1602, 14, !dbg !2168
  %1607 = lshr i32 %1602, 18, !dbg !2168
  %1608 = or i32 %1606, %1607, !dbg !2168
  %1609 = lshr i32 %1602, 3, !dbg !2168
  %1610 = xor i32 %1608, %1609, !dbg !2168
  %1611 = xor i32 %1610, %1605, !dbg !2168
  %1612 = add i32 %1543, %1601, !dbg !2168
  %1613 = add i32 %1612, %1600, !dbg !2168
  %1614 = add i32 %1613, %1611, !dbg !2168
  tail call void @llvm.dbg.value(metadata i32 %1614, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1614, i32* %55, align 4, !dbg !2168, !tbaa !1019
  %1615 = add i32 %1614, 338241895, !dbg !2168
  %1616 = add i32 %1615, %1383, !dbg !2168
  %1617 = add i32 %1616, %1591, !dbg !2168
  %1618 = add i32 %1617, %1588, !dbg !2168
  tail call void @llvm.dbg.value(metadata i32 %1618, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1619 = add i32 %1618, %1384, !dbg !2168
  tail call void @llvm.dbg.value(metadata i32 %1619, i64 0, metadata !2013, metadata !800), !dbg !2043
  %1620 = add i32 %1577, %1618, !dbg !2168
  tail call void @llvm.dbg.value(metadata i32 %1620, i64 0, metadata !2009, metadata !800), !dbg !2035
  %1621 = shl i32 %1620, 30, !dbg !2171
  %1622 = lshr i32 %1620, 2, !dbg !2171
  %1623 = or i32 %1621, %1622, !dbg !2171
  %1624 = shl i32 %1620, 19, !dbg !2171
  %1625 = lshr i32 %1620, 13, !dbg !2171
  %1626 = or i32 %1624, %1625, !dbg !2171
  %1627 = xor i32 %1623, %1626, !dbg !2171
  %1628 = shl i32 %1620, 10, !dbg !2171
  %1629 = lshr i32 %1620, 22, !dbg !2171
  %1630 = or i32 %1628, %1629, !dbg !2171
  %1631 = xor i32 %1627, %1630, !dbg !2171
  %1632 = and i32 %1620, %1561, !dbg !2171
  %1633 = or i32 %1620, %1561, !dbg !2171
  %1634 = and i32 %1633, %1502, !dbg !2171
  %1635 = or i32 %1634, %1632, !dbg !2171
  %1636 = add i32 %1631, %1635, !dbg !2171
  tail call void @llvm.dbg.value(metadata i32 %1636, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1637 = shl i32 %1619, 26, !dbg !2171
  %1638 = lshr i32 %1619, 6, !dbg !2171
  %1639 = or i32 %1637, %1638, !dbg !2171
  %1640 = shl i32 %1619, 21, !dbg !2171
  %1641 = lshr i32 %1619, 11, !dbg !2171
  %1642 = or i32 %1640, %1641, !dbg !2171
  %1643 = xor i32 %1639, %1642, !dbg !2171
  %1644 = shl i32 %1619, 7, !dbg !2171
  %1645 = lshr i32 %1619, 25, !dbg !2171
  %1646 = or i32 %1644, %1645, !dbg !2171
  %1647 = xor i32 %1643, %1646, !dbg !2171
  %1648 = xor i32 %1560, %1501, !dbg !2171
  %1649 = and i32 %1619, %1648, !dbg !2171
  %1650 = xor i32 %1649, %1501, !dbg !2171
  %1651 = shl i32 %1555, 15, !dbg !2171
  %1652 = lshr i32 %1555, 17, !dbg !2171
  %1653 = or i32 %1651, %1652, !dbg !2171
  %1654 = shl i32 %1555, 13, !dbg !2171
  %1655 = lshr i32 %1555, 19, !dbg !2171
  %1656 = or i32 %1654, %1655, !dbg !2171
  %1657 = lshr i32 %1555, 10, !dbg !2171
  %1658 = xor i32 %1656, %1657, !dbg !2171
  %1659 = xor i32 %1658, %1653, !dbg !2171
  %1660 = load i32, i32* %49, align 4, !dbg !2171, !tbaa !1019
  %1661 = load i32, i32* %41, align 4, !dbg !2171, !tbaa !1019
  %1662 = shl i32 %1661, 25, !dbg !2171
  %1663 = lshr i32 %1661, 7, !dbg !2171
  %1664 = or i32 %1662, %1663, !dbg !2171
  %1665 = shl i32 %1661, 14, !dbg !2171
  %1666 = lshr i32 %1661, 18, !dbg !2171
  %1667 = or i32 %1665, %1666, !dbg !2171
  %1668 = lshr i32 %1661, 3, !dbg !2171
  %1669 = xor i32 %1667, %1668, !dbg !2171
  %1670 = xor i32 %1669, %1664, !dbg !2171
  %1671 = add i32 %1602, %1660, !dbg !2171
  %1672 = add i32 %1671, %1659, !dbg !2171
  %1673 = add i32 %1672, %1670, !dbg !2171
  tail call void @llvm.dbg.value(metadata i32 %1673, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1673, i32* %40, align 16, !dbg !2171, !tbaa !1019
  %1674 = add i32 %1673, 666307205, !dbg !2171
  %1675 = add i32 %1674, %1442, !dbg !2171
  %1676 = add i32 %1675, %1650, !dbg !2171
  %1677 = add i32 %1676, %1647, !dbg !2171
  tail call void @llvm.dbg.value(metadata i32 %1677, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1678 = add i32 %1677, %1443, !dbg !2171
  tail call void @llvm.dbg.value(metadata i32 %1678, i64 0, metadata !2012, metadata !800), !dbg !2041
  %1679 = add i32 %1636, %1677, !dbg !2171
  tail call void @llvm.dbg.value(metadata i32 %1679, i64 0, metadata !2016, metadata !800), !dbg !2049
  %1680 = shl i32 %1679, 30, !dbg !2174
  %1681 = lshr i32 %1679, 2, !dbg !2174
  %1682 = or i32 %1680, %1681, !dbg !2174
  %1683 = shl i32 %1679, 19, !dbg !2174
  %1684 = lshr i32 %1679, 13, !dbg !2174
  %1685 = or i32 %1683, %1684, !dbg !2174
  %1686 = xor i32 %1682, %1685, !dbg !2174
  %1687 = shl i32 %1679, 10, !dbg !2174
  %1688 = lshr i32 %1679, 22, !dbg !2174
  %1689 = or i32 %1687, %1688, !dbg !2174
  %1690 = xor i32 %1686, %1689, !dbg !2174
  %1691 = and i32 %1679, %1620, !dbg !2174
  %1692 = or i32 %1679, %1620, !dbg !2174
  %1693 = and i32 %1692, %1561, !dbg !2174
  %1694 = or i32 %1693, %1691, !dbg !2174
  %1695 = add i32 %1690, %1694, !dbg !2174
  tail call void @llvm.dbg.value(metadata i32 %1695, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1696 = shl i32 %1678, 26, !dbg !2174
  %1697 = lshr i32 %1678, 6, !dbg !2174
  %1698 = or i32 %1696, %1697, !dbg !2174
  %1699 = shl i32 %1678, 21, !dbg !2174
  %1700 = lshr i32 %1678, 11, !dbg !2174
  %1701 = or i32 %1699, %1700, !dbg !2174
  %1702 = xor i32 %1698, %1701, !dbg !2174
  %1703 = shl i32 %1678, 7, !dbg !2174
  %1704 = lshr i32 %1678, 25, !dbg !2174
  %1705 = or i32 %1703, %1704, !dbg !2174
  %1706 = xor i32 %1702, %1705, !dbg !2174
  %1707 = xor i32 %1619, %1560, !dbg !2174
  %1708 = and i32 %1678, %1707, !dbg !2174
  %1709 = xor i32 %1708, %1560, !dbg !2174
  %1710 = shl i32 %1614, 15, !dbg !2174
  %1711 = lshr i32 %1614, 17, !dbg !2174
  %1712 = or i32 %1710, %1711, !dbg !2174
  %1713 = shl i32 %1614, 13, !dbg !2174
  %1714 = lshr i32 %1614, 19, !dbg !2174
  %1715 = or i32 %1713, %1714, !dbg !2174
  %1716 = lshr i32 %1614, 10, !dbg !2174
  %1717 = xor i32 %1715, %1716, !dbg !2174
  %1718 = xor i32 %1717, %1712, !dbg !2174
  %1719 = load i32, i32* %50, align 8, !dbg !2174, !tbaa !1019
  %1720 = load i32, i32* %42, align 8, !dbg !2174, !tbaa !1019
  %1721 = shl i32 %1720, 25, !dbg !2174
  %1722 = lshr i32 %1720, 7, !dbg !2174
  %1723 = or i32 %1721, %1722, !dbg !2174
  %1724 = shl i32 %1720, 14, !dbg !2174
  %1725 = lshr i32 %1720, 18, !dbg !2174
  %1726 = or i32 %1724, %1725, !dbg !2174
  %1727 = lshr i32 %1720, 3, !dbg !2174
  %1728 = xor i32 %1726, %1727, !dbg !2174
  %1729 = xor i32 %1728, %1723, !dbg !2174
  %1730 = add i32 %1661, %1719, !dbg !2174
  %1731 = add i32 %1730, %1718, !dbg !2174
  %1732 = add i32 %1731, %1729, !dbg !2174
  tail call void @llvm.dbg.value(metadata i32 %1732, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1732, i32* %41, align 4, !dbg !2174, !tbaa !1019
  %1733 = add i32 %1732, 773529912, !dbg !2174
  %1734 = add i32 %1733, %1501, !dbg !2174
  %1735 = add i32 %1734, %1709, !dbg !2174
  %1736 = add i32 %1735, %1706, !dbg !2174
  tail call void @llvm.dbg.value(metadata i32 %1736, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1737 = add i32 %1736, %1502, !dbg !2174
  tail call void @llvm.dbg.value(metadata i32 %1737, i64 0, metadata !2011, metadata !800), !dbg !2039
  %1738 = add i32 %1695, %1736, !dbg !2174
  tail call void @llvm.dbg.value(metadata i32 %1738, i64 0, metadata !2015, metadata !800), !dbg !2047
  %1739 = shl i32 %1738, 30, !dbg !2177
  %1740 = lshr i32 %1738, 2, !dbg !2177
  %1741 = or i32 %1739, %1740, !dbg !2177
  %1742 = shl i32 %1738, 19, !dbg !2177
  %1743 = lshr i32 %1738, 13, !dbg !2177
  %1744 = or i32 %1742, %1743, !dbg !2177
  %1745 = xor i32 %1741, %1744, !dbg !2177
  %1746 = shl i32 %1738, 10, !dbg !2177
  %1747 = lshr i32 %1738, 22, !dbg !2177
  %1748 = or i32 %1746, %1747, !dbg !2177
  %1749 = xor i32 %1745, %1748, !dbg !2177
  %1750 = and i32 %1738, %1679, !dbg !2177
  %1751 = or i32 %1738, %1679, !dbg !2177
  %1752 = and i32 %1751, %1620, !dbg !2177
  %1753 = or i32 %1752, %1750, !dbg !2177
  %1754 = add i32 %1749, %1753, !dbg !2177
  tail call void @llvm.dbg.value(metadata i32 %1754, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1755 = shl i32 %1737, 26, !dbg !2177
  %1756 = lshr i32 %1737, 6, !dbg !2177
  %1757 = or i32 %1755, %1756, !dbg !2177
  %1758 = shl i32 %1737, 21, !dbg !2177
  %1759 = lshr i32 %1737, 11, !dbg !2177
  %1760 = or i32 %1758, %1759, !dbg !2177
  %1761 = xor i32 %1757, %1760, !dbg !2177
  %1762 = shl i32 %1737, 7, !dbg !2177
  %1763 = lshr i32 %1737, 25, !dbg !2177
  %1764 = or i32 %1762, %1763, !dbg !2177
  %1765 = xor i32 %1761, %1764, !dbg !2177
  %1766 = xor i32 %1678, %1619, !dbg !2177
  %1767 = and i32 %1737, %1766, !dbg !2177
  %1768 = xor i32 %1767, %1619, !dbg !2177
  %1769 = shl i32 %1673, 15, !dbg !2177
  %1770 = lshr i32 %1673, 17, !dbg !2177
  %1771 = or i32 %1769, %1770, !dbg !2177
  %1772 = shl i32 %1673, 13, !dbg !2177
  %1773 = lshr i32 %1673, 19, !dbg !2177
  %1774 = or i32 %1772, %1773, !dbg !2177
  %1775 = lshr i32 %1673, 10, !dbg !2177
  %1776 = xor i32 %1774, %1775, !dbg !2177
  %1777 = xor i32 %1776, %1771, !dbg !2177
  %1778 = load i32, i32* %51, align 4, !dbg !2177, !tbaa !1019
  %1779 = load i32, i32* %43, align 4, !dbg !2177, !tbaa !1019
  %1780 = shl i32 %1779, 25, !dbg !2177
  %1781 = lshr i32 %1779, 7, !dbg !2177
  %1782 = or i32 %1780, %1781, !dbg !2177
  %1783 = shl i32 %1779, 14, !dbg !2177
  %1784 = lshr i32 %1779, 18, !dbg !2177
  %1785 = or i32 %1783, %1784, !dbg !2177
  %1786 = lshr i32 %1779, 3, !dbg !2177
  %1787 = xor i32 %1785, %1786, !dbg !2177
  %1788 = xor i32 %1787, %1782, !dbg !2177
  %1789 = add i32 %1720, %1778, !dbg !2177
  %1790 = add i32 %1789, %1777, !dbg !2177
  %1791 = add i32 %1790, %1788, !dbg !2177
  tail call void @llvm.dbg.value(metadata i32 %1791, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1791, i32* %42, align 8, !dbg !2177, !tbaa !1019
  %1792 = add i32 %1791, 1294757372, !dbg !2177
  %1793 = add i32 %1792, %1560, !dbg !2177
  %1794 = add i32 %1793, %1768, !dbg !2177
  %1795 = add i32 %1794, %1765, !dbg !2177
  tail call void @llvm.dbg.value(metadata i32 %1795, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1796 = add i32 %1795, %1561, !dbg !2177
  tail call void @llvm.dbg.value(metadata i32 %1796, i64 0, metadata !2010, metadata !800), !dbg !2037
  %1797 = add i32 %1754, %1795, !dbg !2177
  tail call void @llvm.dbg.value(metadata i32 %1797, i64 0, metadata !2014, metadata !800), !dbg !2045
  %1798 = shl i32 %1797, 30, !dbg !2180
  %1799 = lshr i32 %1797, 2, !dbg !2180
  %1800 = or i32 %1798, %1799, !dbg !2180
  %1801 = shl i32 %1797, 19, !dbg !2180
  %1802 = lshr i32 %1797, 13, !dbg !2180
  %1803 = or i32 %1801, %1802, !dbg !2180
  %1804 = xor i32 %1800, %1803, !dbg !2180
  %1805 = shl i32 %1797, 10, !dbg !2180
  %1806 = lshr i32 %1797, 22, !dbg !2180
  %1807 = or i32 %1805, %1806, !dbg !2180
  %1808 = xor i32 %1804, %1807, !dbg !2180
  %1809 = and i32 %1797, %1738, !dbg !2180
  %1810 = or i32 %1797, %1738, !dbg !2180
  %1811 = and i32 %1810, %1679, !dbg !2180
  %1812 = or i32 %1811, %1809, !dbg !2180
  %1813 = add i32 %1808, %1812, !dbg !2180
  tail call void @llvm.dbg.value(metadata i32 %1813, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1814 = shl i32 %1796, 26, !dbg !2180
  %1815 = lshr i32 %1796, 6, !dbg !2180
  %1816 = or i32 %1814, %1815, !dbg !2180
  %1817 = shl i32 %1796, 21, !dbg !2180
  %1818 = lshr i32 %1796, 11, !dbg !2180
  %1819 = or i32 %1817, %1818, !dbg !2180
  %1820 = xor i32 %1816, %1819, !dbg !2180
  %1821 = shl i32 %1796, 7, !dbg !2180
  %1822 = lshr i32 %1796, 25, !dbg !2180
  %1823 = or i32 %1821, %1822, !dbg !2180
  %1824 = xor i32 %1820, %1823, !dbg !2180
  %1825 = xor i32 %1737, %1678, !dbg !2180
  %1826 = and i32 %1796, %1825, !dbg !2180
  %1827 = xor i32 %1826, %1678, !dbg !2180
  %1828 = shl i32 %1732, 15, !dbg !2180
  %1829 = lshr i32 %1732, 17, !dbg !2180
  %1830 = or i32 %1828, %1829, !dbg !2180
  %1831 = shl i32 %1732, 13, !dbg !2180
  %1832 = lshr i32 %1732, 19, !dbg !2180
  %1833 = or i32 %1831, %1832, !dbg !2180
  %1834 = lshr i32 %1732, 10, !dbg !2180
  %1835 = xor i32 %1833, %1834, !dbg !2180
  %1836 = xor i32 %1835, %1830, !dbg !2180
  %1837 = load i32, i32* %52, align 16, !dbg !2180, !tbaa !1019
  %1838 = load i32, i32* %44, align 16, !dbg !2180, !tbaa !1019
  %1839 = shl i32 %1838, 25, !dbg !2180
  %1840 = lshr i32 %1838, 7, !dbg !2180
  %1841 = or i32 %1839, %1840, !dbg !2180
  %1842 = shl i32 %1838, 14, !dbg !2180
  %1843 = lshr i32 %1838, 18, !dbg !2180
  %1844 = or i32 %1842, %1843, !dbg !2180
  %1845 = lshr i32 %1838, 3, !dbg !2180
  %1846 = xor i32 %1844, %1845, !dbg !2180
  %1847 = xor i32 %1846, %1841, !dbg !2180
  %1848 = add i32 %1779, %1837, !dbg !2180
  %1849 = add i32 %1848, %1836, !dbg !2180
  %1850 = add i32 %1849, %1847, !dbg !2180
  tail call void @llvm.dbg.value(metadata i32 %1850, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1850, i32* %43, align 4, !dbg !2180, !tbaa !1019
  %1851 = add i32 %1850, 1396182291, !dbg !2180
  %1852 = add i32 %1851, %1619, !dbg !2180
  %1853 = add i32 %1852, %1827, !dbg !2180
  %1854 = add i32 %1853, %1824, !dbg !2180
  tail call void @llvm.dbg.value(metadata i32 %1854, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1855 = add i32 %1854, %1620, !dbg !2180
  tail call void @llvm.dbg.value(metadata i32 %1855, i64 0, metadata !2009, metadata !800), !dbg !2035
  %1856 = add i32 %1813, %1854, !dbg !2180
  tail call void @llvm.dbg.value(metadata i32 %1856, i64 0, metadata !2013, metadata !800), !dbg !2043
  %1857 = shl i32 %1856, 30, !dbg !2183
  %1858 = lshr i32 %1856, 2, !dbg !2183
  %1859 = or i32 %1857, %1858, !dbg !2183
  %1860 = shl i32 %1856, 19, !dbg !2183
  %1861 = lshr i32 %1856, 13, !dbg !2183
  %1862 = or i32 %1860, %1861, !dbg !2183
  %1863 = xor i32 %1859, %1862, !dbg !2183
  %1864 = shl i32 %1856, 10, !dbg !2183
  %1865 = lshr i32 %1856, 22, !dbg !2183
  %1866 = or i32 %1864, %1865, !dbg !2183
  %1867 = xor i32 %1863, %1866, !dbg !2183
  %1868 = and i32 %1856, %1797, !dbg !2183
  %1869 = or i32 %1856, %1797, !dbg !2183
  %1870 = and i32 %1869, %1738, !dbg !2183
  %1871 = or i32 %1870, %1868, !dbg !2183
  %1872 = add i32 %1867, %1871, !dbg !2183
  tail call void @llvm.dbg.value(metadata i32 %1872, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1873 = shl i32 %1855, 26, !dbg !2183
  %1874 = lshr i32 %1855, 6, !dbg !2183
  %1875 = or i32 %1873, %1874, !dbg !2183
  %1876 = shl i32 %1855, 21, !dbg !2183
  %1877 = lshr i32 %1855, 11, !dbg !2183
  %1878 = or i32 %1876, %1877, !dbg !2183
  %1879 = xor i32 %1875, %1878, !dbg !2183
  %1880 = shl i32 %1855, 7, !dbg !2183
  %1881 = lshr i32 %1855, 25, !dbg !2183
  %1882 = or i32 %1880, %1881, !dbg !2183
  %1883 = xor i32 %1879, %1882, !dbg !2183
  %1884 = xor i32 %1796, %1737, !dbg !2183
  %1885 = and i32 %1855, %1884, !dbg !2183
  %1886 = xor i32 %1885, %1737, !dbg !2183
  %1887 = shl i32 %1791, 15, !dbg !2183
  %1888 = lshr i32 %1791, 17, !dbg !2183
  %1889 = or i32 %1887, %1888, !dbg !2183
  %1890 = shl i32 %1791, 13, !dbg !2183
  %1891 = lshr i32 %1791, 19, !dbg !2183
  %1892 = or i32 %1890, %1891, !dbg !2183
  %1893 = lshr i32 %1791, 10, !dbg !2183
  %1894 = xor i32 %1892, %1893, !dbg !2183
  %1895 = xor i32 %1894, %1889, !dbg !2183
  %1896 = load i32, i32* %53, align 4, !dbg !2183, !tbaa !1019
  %1897 = load i32, i32* %45, align 4, !dbg !2183, !tbaa !1019
  %1898 = shl i32 %1897, 25, !dbg !2183
  %1899 = lshr i32 %1897, 7, !dbg !2183
  %1900 = or i32 %1898, %1899, !dbg !2183
  %1901 = shl i32 %1897, 14, !dbg !2183
  %1902 = lshr i32 %1897, 18, !dbg !2183
  %1903 = or i32 %1901, %1902, !dbg !2183
  %1904 = lshr i32 %1897, 3, !dbg !2183
  %1905 = xor i32 %1903, %1904, !dbg !2183
  %1906 = xor i32 %1905, %1900, !dbg !2183
  %1907 = add i32 %1838, %1896, !dbg !2183
  %1908 = add i32 %1907, %1895, !dbg !2183
  %1909 = add i32 %1908, %1906, !dbg !2183
  tail call void @llvm.dbg.value(metadata i32 %1909, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1909, i32* %44, align 16, !dbg !2183, !tbaa !1019
  %1910 = add i32 %1909, 1695183700, !dbg !2183
  %1911 = add i32 %1910, %1678, !dbg !2183
  %1912 = add i32 %1911, %1886, !dbg !2183
  %1913 = add i32 %1912, %1883, !dbg !2183
  tail call void @llvm.dbg.value(metadata i32 %1913, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1914 = add i32 %1913, %1679, !dbg !2183
  tail call void @llvm.dbg.value(metadata i32 %1914, i64 0, metadata !2016, metadata !800), !dbg !2049
  %1915 = add i32 %1872, %1913, !dbg !2183
  tail call void @llvm.dbg.value(metadata i32 %1915, i64 0, metadata !2012, metadata !800), !dbg !2041
  %1916 = shl i32 %1915, 30, !dbg !2186
  %1917 = lshr i32 %1915, 2, !dbg !2186
  %1918 = or i32 %1916, %1917, !dbg !2186
  %1919 = shl i32 %1915, 19, !dbg !2186
  %1920 = lshr i32 %1915, 13, !dbg !2186
  %1921 = or i32 %1919, %1920, !dbg !2186
  %1922 = xor i32 %1918, %1921, !dbg !2186
  %1923 = shl i32 %1915, 10, !dbg !2186
  %1924 = lshr i32 %1915, 22, !dbg !2186
  %1925 = or i32 %1923, %1924, !dbg !2186
  %1926 = xor i32 %1922, %1925, !dbg !2186
  %1927 = and i32 %1915, %1856, !dbg !2186
  %1928 = or i32 %1915, %1856, !dbg !2186
  %1929 = and i32 %1928, %1797, !dbg !2186
  %1930 = or i32 %1929, %1927, !dbg !2186
  %1931 = add i32 %1926, %1930, !dbg !2186
  tail call void @llvm.dbg.value(metadata i32 %1931, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1932 = shl i32 %1914, 26, !dbg !2186
  %1933 = lshr i32 %1914, 6, !dbg !2186
  %1934 = or i32 %1932, %1933, !dbg !2186
  %1935 = shl i32 %1914, 21, !dbg !2186
  %1936 = lshr i32 %1914, 11, !dbg !2186
  %1937 = or i32 %1935, %1936, !dbg !2186
  %1938 = xor i32 %1934, %1937, !dbg !2186
  %1939 = shl i32 %1914, 7, !dbg !2186
  %1940 = lshr i32 %1914, 25, !dbg !2186
  %1941 = or i32 %1939, %1940, !dbg !2186
  %1942 = xor i32 %1938, %1941, !dbg !2186
  %1943 = xor i32 %1855, %1796, !dbg !2186
  %1944 = and i32 %1914, %1943, !dbg !2186
  %1945 = xor i32 %1944, %1796, !dbg !2186
  %1946 = shl i32 %1850, 15, !dbg !2186
  %1947 = lshr i32 %1850, 17, !dbg !2186
  %1948 = or i32 %1946, %1947, !dbg !2186
  %1949 = shl i32 %1850, 13, !dbg !2186
  %1950 = lshr i32 %1850, 19, !dbg !2186
  %1951 = or i32 %1949, %1950, !dbg !2186
  %1952 = lshr i32 %1850, 10, !dbg !2186
  %1953 = xor i32 %1951, %1952, !dbg !2186
  %1954 = xor i32 %1953, %1948, !dbg !2186
  %1955 = load i32, i32* %54, align 8, !dbg !2186, !tbaa !1019
  %1956 = load i32, i32* %46, align 8, !dbg !2186, !tbaa !1019
  %1957 = shl i32 %1956, 25, !dbg !2186
  %1958 = lshr i32 %1956, 7, !dbg !2186
  %1959 = or i32 %1957, %1958, !dbg !2186
  %1960 = shl i32 %1956, 14, !dbg !2186
  %1961 = lshr i32 %1956, 18, !dbg !2186
  %1962 = or i32 %1960, %1961, !dbg !2186
  %1963 = lshr i32 %1956, 3, !dbg !2186
  %1964 = xor i32 %1962, %1963, !dbg !2186
  %1965 = xor i32 %1964, %1959, !dbg !2186
  %1966 = add i32 %1897, %1955, !dbg !2186
  %1967 = add i32 %1966, %1954, !dbg !2186
  %1968 = add i32 %1967, %1965, !dbg !2186
  tail call void @llvm.dbg.value(metadata i32 %1968, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %1968, i32* %45, align 4, !dbg !2186, !tbaa !1019
  %1969 = add i32 %1968, 1986661051, !dbg !2186
  %1970 = add i32 %1969, %1737, !dbg !2186
  %1971 = add i32 %1970, %1945, !dbg !2186
  %1972 = add i32 %1971, %1942, !dbg !2186
  tail call void @llvm.dbg.value(metadata i32 %1972, i64 0, metadata !2021, metadata !800), !dbg !2076
  %1973 = add i32 %1972, %1738, !dbg !2186
  tail call void @llvm.dbg.value(metadata i32 %1973, i64 0, metadata !2015, metadata !800), !dbg !2047
  %1974 = add i32 %1931, %1972, !dbg !2186
  tail call void @llvm.dbg.value(metadata i32 %1974, i64 0, metadata !2011, metadata !800), !dbg !2039
  %1975 = shl i32 %1974, 30, !dbg !2189
  %1976 = lshr i32 %1974, 2, !dbg !2189
  %1977 = or i32 %1975, %1976, !dbg !2189
  %1978 = shl i32 %1974, 19, !dbg !2189
  %1979 = lshr i32 %1974, 13, !dbg !2189
  %1980 = or i32 %1978, %1979, !dbg !2189
  %1981 = xor i32 %1977, %1980, !dbg !2189
  %1982 = shl i32 %1974, 10, !dbg !2189
  %1983 = lshr i32 %1974, 22, !dbg !2189
  %1984 = or i32 %1982, %1983, !dbg !2189
  %1985 = xor i32 %1981, %1984, !dbg !2189
  %1986 = and i32 %1974, %1915, !dbg !2189
  %1987 = or i32 %1974, %1915, !dbg !2189
  %1988 = and i32 %1987, %1856, !dbg !2189
  %1989 = or i32 %1988, %1986, !dbg !2189
  %1990 = add i32 %1985, %1989, !dbg !2189
  tail call void @llvm.dbg.value(metadata i32 %1990, i64 0, metadata !2020, metadata !800), !dbg !2075
  %1991 = shl i32 %1973, 26, !dbg !2189
  %1992 = lshr i32 %1973, 6, !dbg !2189
  %1993 = or i32 %1991, %1992, !dbg !2189
  %1994 = shl i32 %1973, 21, !dbg !2189
  %1995 = lshr i32 %1973, 11, !dbg !2189
  %1996 = or i32 %1994, %1995, !dbg !2189
  %1997 = xor i32 %1993, %1996, !dbg !2189
  %1998 = shl i32 %1973, 7, !dbg !2189
  %1999 = lshr i32 %1973, 25, !dbg !2189
  %2000 = or i32 %1998, %1999, !dbg !2189
  %2001 = xor i32 %1997, %2000, !dbg !2189
  %2002 = xor i32 %1914, %1855, !dbg !2189
  %2003 = and i32 %1973, %2002, !dbg !2189
  %2004 = xor i32 %2003, %1855, !dbg !2189
  %2005 = shl i32 %1909, 15, !dbg !2189
  %2006 = lshr i32 %1909, 17, !dbg !2189
  %2007 = or i32 %2005, %2006, !dbg !2189
  %2008 = shl i32 %1909, 13, !dbg !2189
  %2009 = lshr i32 %1909, 19, !dbg !2189
  %2010 = or i32 %2008, %2009, !dbg !2189
  %2011 = lshr i32 %1909, 10, !dbg !2189
  %2012 = xor i32 %2010, %2011, !dbg !2189
  %2013 = xor i32 %2012, %2007, !dbg !2189
  %2014 = load i32, i32* %55, align 4, !dbg !2189, !tbaa !1019
  %2015 = load i32, i32* %47, align 4, !dbg !2189, !tbaa !1019
  %2016 = shl i32 %2015, 25, !dbg !2189
  %2017 = lshr i32 %2015, 7, !dbg !2189
  %2018 = or i32 %2016, %2017, !dbg !2189
  %2019 = shl i32 %2015, 14, !dbg !2189
  %2020 = lshr i32 %2015, 18, !dbg !2189
  %2021 = or i32 %2019, %2020, !dbg !2189
  %2022 = lshr i32 %2015, 3, !dbg !2189
  %2023 = xor i32 %2021, %2022, !dbg !2189
  %2024 = xor i32 %2023, %2018, !dbg !2189
  %2025 = add i32 %1956, %2014, !dbg !2189
  %2026 = add i32 %2025, %2013, !dbg !2189
  %2027 = add i32 %2026, %2024, !dbg !2189
  tail call void @llvm.dbg.value(metadata i32 %2027, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2027, i32* %46, align 8, !dbg !2189, !tbaa !1019
  %2028 = add i32 %2027, -2117940946, !dbg !2189
  %2029 = add i32 %2028, %1796, !dbg !2189
  %2030 = add i32 %2029, %2004, !dbg !2189
  %2031 = add i32 %2030, %2001, !dbg !2189
  tail call void @llvm.dbg.value(metadata i32 %2031, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2032 = add i32 %2031, %1797, !dbg !2189
  tail call void @llvm.dbg.value(metadata i32 %2032, i64 0, metadata !2014, metadata !800), !dbg !2045
  %2033 = add i32 %1990, %2031, !dbg !2189
  tail call void @llvm.dbg.value(metadata i32 %2033, i64 0, metadata !2010, metadata !800), !dbg !2037
  %2034 = shl i32 %2033, 30, !dbg !2192
  %2035 = lshr i32 %2033, 2, !dbg !2192
  %2036 = or i32 %2034, %2035, !dbg !2192
  %2037 = shl i32 %2033, 19, !dbg !2192
  %2038 = lshr i32 %2033, 13, !dbg !2192
  %2039 = or i32 %2037, %2038, !dbg !2192
  %2040 = xor i32 %2036, %2039, !dbg !2192
  %2041 = shl i32 %2033, 10, !dbg !2192
  %2042 = lshr i32 %2033, 22, !dbg !2192
  %2043 = or i32 %2041, %2042, !dbg !2192
  %2044 = xor i32 %2040, %2043, !dbg !2192
  %2045 = and i32 %2033, %1974, !dbg !2192
  %2046 = or i32 %2033, %1974, !dbg !2192
  %2047 = and i32 %2046, %1915, !dbg !2192
  %2048 = or i32 %2047, %2045, !dbg !2192
  %2049 = add i32 %2044, %2048, !dbg !2192
  tail call void @llvm.dbg.value(metadata i32 %2049, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2050 = shl i32 %2032, 26, !dbg !2192
  %2051 = lshr i32 %2032, 6, !dbg !2192
  %2052 = or i32 %2050, %2051, !dbg !2192
  %2053 = shl i32 %2032, 21, !dbg !2192
  %2054 = lshr i32 %2032, 11, !dbg !2192
  %2055 = or i32 %2053, %2054, !dbg !2192
  %2056 = xor i32 %2052, %2055, !dbg !2192
  %2057 = shl i32 %2032, 7, !dbg !2192
  %2058 = lshr i32 %2032, 25, !dbg !2192
  %2059 = or i32 %2057, %2058, !dbg !2192
  %2060 = xor i32 %2056, %2059, !dbg !2192
  %2061 = xor i32 %1973, %1914, !dbg !2192
  %2062 = and i32 %2032, %2061, !dbg !2192
  %2063 = xor i32 %2062, %1914, !dbg !2192
  %2064 = shl i32 %1968, 15, !dbg !2192
  %2065 = lshr i32 %1968, 17, !dbg !2192
  %2066 = or i32 %2064, %2065, !dbg !2192
  %2067 = shl i32 %1968, 13, !dbg !2192
  %2068 = lshr i32 %1968, 19, !dbg !2192
  %2069 = or i32 %2067, %2068, !dbg !2192
  %2070 = lshr i32 %1968, 10, !dbg !2192
  %2071 = xor i32 %2069, %2070, !dbg !2192
  %2072 = xor i32 %2071, %2066, !dbg !2192
  %2073 = load i32, i32* %40, align 16, !dbg !2192, !tbaa !1019
  %2074 = load i32, i32* %48, align 16, !dbg !2192, !tbaa !1019
  %2075 = shl i32 %2074, 25, !dbg !2192
  %2076 = lshr i32 %2074, 7, !dbg !2192
  %2077 = or i32 %2075, %2076, !dbg !2192
  %2078 = shl i32 %2074, 14, !dbg !2192
  %2079 = lshr i32 %2074, 18, !dbg !2192
  %2080 = or i32 %2078, %2079, !dbg !2192
  %2081 = lshr i32 %2074, 3, !dbg !2192
  %2082 = xor i32 %2080, %2081, !dbg !2192
  %2083 = xor i32 %2082, %2077, !dbg !2192
  %2084 = add i32 %2015, %2073, !dbg !2192
  %2085 = add i32 %2084, %2072, !dbg !2192
  %2086 = add i32 %2085, %2083, !dbg !2192
  tail call void @llvm.dbg.value(metadata i32 %2086, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2086, i32* %47, align 4, !dbg !2192, !tbaa !1019
  %2087 = add i32 %2086, -1838011259, !dbg !2192
  %2088 = add i32 %2087, %1855, !dbg !2192
  %2089 = add i32 %2088, %2063, !dbg !2192
  %2090 = add i32 %2089, %2060, !dbg !2192
  tail call void @llvm.dbg.value(metadata i32 %2090, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2091 = add i32 %2090, %1856, !dbg !2192
  tail call void @llvm.dbg.value(metadata i32 %2091, i64 0, metadata !2013, metadata !800), !dbg !2043
  %2092 = add i32 %2049, %2090, !dbg !2192
  tail call void @llvm.dbg.value(metadata i32 %2092, i64 0, metadata !2009, metadata !800), !dbg !2035
  %2093 = shl i32 %2092, 30, !dbg !2195
  %2094 = lshr i32 %2092, 2, !dbg !2195
  %2095 = or i32 %2093, %2094, !dbg !2195
  %2096 = shl i32 %2092, 19, !dbg !2195
  %2097 = lshr i32 %2092, 13, !dbg !2195
  %2098 = or i32 %2096, %2097, !dbg !2195
  %2099 = xor i32 %2095, %2098, !dbg !2195
  %2100 = shl i32 %2092, 10, !dbg !2195
  %2101 = lshr i32 %2092, 22, !dbg !2195
  %2102 = or i32 %2100, %2101, !dbg !2195
  %2103 = xor i32 %2099, %2102, !dbg !2195
  %2104 = and i32 %2092, %2033, !dbg !2195
  %2105 = or i32 %2092, %2033, !dbg !2195
  %2106 = and i32 %2105, %1974, !dbg !2195
  %2107 = or i32 %2106, %2104, !dbg !2195
  %2108 = add i32 %2103, %2107, !dbg !2195
  tail call void @llvm.dbg.value(metadata i32 %2108, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2109 = shl i32 %2091, 26, !dbg !2195
  %2110 = lshr i32 %2091, 6, !dbg !2195
  %2111 = or i32 %2109, %2110, !dbg !2195
  %2112 = shl i32 %2091, 21, !dbg !2195
  %2113 = lshr i32 %2091, 11, !dbg !2195
  %2114 = or i32 %2112, %2113, !dbg !2195
  %2115 = xor i32 %2111, %2114, !dbg !2195
  %2116 = shl i32 %2091, 7, !dbg !2195
  %2117 = lshr i32 %2091, 25, !dbg !2195
  %2118 = or i32 %2116, %2117, !dbg !2195
  %2119 = xor i32 %2115, %2118, !dbg !2195
  %2120 = xor i32 %2032, %1973, !dbg !2195
  %2121 = and i32 %2091, %2120, !dbg !2195
  %2122 = xor i32 %2121, %1973, !dbg !2195
  %2123 = shl i32 %2027, 15, !dbg !2195
  %2124 = lshr i32 %2027, 17, !dbg !2195
  %2125 = or i32 %2123, %2124, !dbg !2195
  %2126 = shl i32 %2027, 13, !dbg !2195
  %2127 = lshr i32 %2027, 19, !dbg !2195
  %2128 = or i32 %2126, %2127, !dbg !2195
  %2129 = lshr i32 %2027, 10, !dbg !2195
  %2130 = xor i32 %2128, %2129, !dbg !2195
  %2131 = xor i32 %2130, %2125, !dbg !2195
  %2132 = load i32, i32* %41, align 4, !dbg !2195, !tbaa !1019
  %2133 = load i32, i32* %49, align 4, !dbg !2195, !tbaa !1019
  %2134 = shl i32 %2133, 25, !dbg !2195
  %2135 = lshr i32 %2133, 7, !dbg !2195
  %2136 = or i32 %2134, %2135, !dbg !2195
  %2137 = shl i32 %2133, 14, !dbg !2195
  %2138 = lshr i32 %2133, 18, !dbg !2195
  %2139 = or i32 %2137, %2138, !dbg !2195
  %2140 = lshr i32 %2133, 3, !dbg !2195
  %2141 = xor i32 %2139, %2140, !dbg !2195
  %2142 = xor i32 %2141, %2136, !dbg !2195
  %2143 = add i32 %2074, %2132, !dbg !2195
  %2144 = add i32 %2143, %2131, !dbg !2195
  %2145 = add i32 %2144, %2142, !dbg !2195
  tail call void @llvm.dbg.value(metadata i32 %2145, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2145, i32* %48, align 16, !dbg !2195, !tbaa !1019
  %2146 = add i32 %2145, -1564481375, !dbg !2195
  %2147 = add i32 %2146, %1914, !dbg !2195
  %2148 = add i32 %2147, %2122, !dbg !2195
  %2149 = add i32 %2148, %2119, !dbg !2195
  tail call void @llvm.dbg.value(metadata i32 %2149, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2150 = add i32 %2149, %1915, !dbg !2195
  tail call void @llvm.dbg.value(metadata i32 %2150, i64 0, metadata !2012, metadata !800), !dbg !2041
  %2151 = add i32 %2108, %2149, !dbg !2195
  tail call void @llvm.dbg.value(metadata i32 %2151, i64 0, metadata !2016, metadata !800), !dbg !2049
  %2152 = shl i32 %2151, 30, !dbg !2198
  %2153 = lshr i32 %2151, 2, !dbg !2198
  %2154 = or i32 %2152, %2153, !dbg !2198
  %2155 = shl i32 %2151, 19, !dbg !2198
  %2156 = lshr i32 %2151, 13, !dbg !2198
  %2157 = or i32 %2155, %2156, !dbg !2198
  %2158 = xor i32 %2154, %2157, !dbg !2198
  %2159 = shl i32 %2151, 10, !dbg !2198
  %2160 = lshr i32 %2151, 22, !dbg !2198
  %2161 = or i32 %2159, %2160, !dbg !2198
  %2162 = xor i32 %2158, %2161, !dbg !2198
  %2163 = and i32 %2151, %2092, !dbg !2198
  %2164 = or i32 %2151, %2092, !dbg !2198
  %2165 = and i32 %2164, %2033, !dbg !2198
  %2166 = or i32 %2165, %2163, !dbg !2198
  %2167 = add i32 %2162, %2166, !dbg !2198
  tail call void @llvm.dbg.value(metadata i32 %2167, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2168 = shl i32 %2150, 26, !dbg !2198
  %2169 = lshr i32 %2150, 6, !dbg !2198
  %2170 = or i32 %2168, %2169, !dbg !2198
  %2171 = shl i32 %2150, 21, !dbg !2198
  %2172 = lshr i32 %2150, 11, !dbg !2198
  %2173 = or i32 %2171, %2172, !dbg !2198
  %2174 = xor i32 %2170, %2173, !dbg !2198
  %2175 = shl i32 %2150, 7, !dbg !2198
  %2176 = lshr i32 %2150, 25, !dbg !2198
  %2177 = or i32 %2175, %2176, !dbg !2198
  %2178 = xor i32 %2174, %2177, !dbg !2198
  %2179 = xor i32 %2091, %2032, !dbg !2198
  %2180 = and i32 %2150, %2179, !dbg !2198
  %2181 = xor i32 %2180, %2032, !dbg !2198
  %2182 = shl i32 %2086, 15, !dbg !2198
  %2183 = lshr i32 %2086, 17, !dbg !2198
  %2184 = or i32 %2182, %2183, !dbg !2198
  %2185 = shl i32 %2086, 13, !dbg !2198
  %2186 = lshr i32 %2086, 19, !dbg !2198
  %2187 = or i32 %2185, %2186, !dbg !2198
  %2188 = lshr i32 %2086, 10, !dbg !2198
  %2189 = xor i32 %2187, %2188, !dbg !2198
  %2190 = xor i32 %2189, %2184, !dbg !2198
  %2191 = load i32, i32* %42, align 8, !dbg !2198, !tbaa !1019
  %2192 = load i32, i32* %50, align 8, !dbg !2198, !tbaa !1019
  %2193 = shl i32 %2192, 25, !dbg !2198
  %2194 = lshr i32 %2192, 7, !dbg !2198
  %2195 = or i32 %2193, %2194, !dbg !2198
  %2196 = shl i32 %2192, 14, !dbg !2198
  %2197 = lshr i32 %2192, 18, !dbg !2198
  %2198 = or i32 %2196, %2197, !dbg !2198
  %2199 = lshr i32 %2192, 3, !dbg !2198
  %2200 = xor i32 %2198, %2199, !dbg !2198
  %2201 = xor i32 %2200, %2195, !dbg !2198
  %2202 = add i32 %2133, %2191, !dbg !2198
  %2203 = add i32 %2202, %2190, !dbg !2198
  %2204 = add i32 %2203, %2201, !dbg !2198
  tail call void @llvm.dbg.value(metadata i32 %2204, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2204, i32* %49, align 4, !dbg !2198, !tbaa !1019
  %2205 = add i32 %2204, -1474664885, !dbg !2198
  %2206 = add i32 %2205, %1973, !dbg !2198
  %2207 = add i32 %2206, %2181, !dbg !2198
  %2208 = add i32 %2207, %2178, !dbg !2198
  tail call void @llvm.dbg.value(metadata i32 %2208, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2209 = add i32 %2208, %1974, !dbg !2198
  tail call void @llvm.dbg.value(metadata i32 %2209, i64 0, metadata !2011, metadata !800), !dbg !2039
  %2210 = add i32 %2167, %2208, !dbg !2198
  tail call void @llvm.dbg.value(metadata i32 %2210, i64 0, metadata !2015, metadata !800), !dbg !2047
  %2211 = shl i32 %2210, 30, !dbg !2201
  %2212 = lshr i32 %2210, 2, !dbg !2201
  %2213 = or i32 %2211, %2212, !dbg !2201
  %2214 = shl i32 %2210, 19, !dbg !2201
  %2215 = lshr i32 %2210, 13, !dbg !2201
  %2216 = or i32 %2214, %2215, !dbg !2201
  %2217 = xor i32 %2213, %2216, !dbg !2201
  %2218 = shl i32 %2210, 10, !dbg !2201
  %2219 = lshr i32 %2210, 22, !dbg !2201
  %2220 = or i32 %2218, %2219, !dbg !2201
  %2221 = xor i32 %2217, %2220, !dbg !2201
  %2222 = and i32 %2210, %2151, !dbg !2201
  %2223 = or i32 %2210, %2151, !dbg !2201
  %2224 = and i32 %2223, %2092, !dbg !2201
  %2225 = or i32 %2224, %2222, !dbg !2201
  %2226 = add i32 %2221, %2225, !dbg !2201
  tail call void @llvm.dbg.value(metadata i32 %2226, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2227 = shl i32 %2209, 26, !dbg !2201
  %2228 = lshr i32 %2209, 6, !dbg !2201
  %2229 = or i32 %2227, %2228, !dbg !2201
  %2230 = shl i32 %2209, 21, !dbg !2201
  %2231 = lshr i32 %2209, 11, !dbg !2201
  %2232 = or i32 %2230, %2231, !dbg !2201
  %2233 = xor i32 %2229, %2232, !dbg !2201
  %2234 = shl i32 %2209, 7, !dbg !2201
  %2235 = lshr i32 %2209, 25, !dbg !2201
  %2236 = or i32 %2234, %2235, !dbg !2201
  %2237 = xor i32 %2233, %2236, !dbg !2201
  %2238 = xor i32 %2150, %2091, !dbg !2201
  %2239 = and i32 %2209, %2238, !dbg !2201
  %2240 = xor i32 %2239, %2091, !dbg !2201
  %2241 = shl i32 %2145, 15, !dbg !2201
  %2242 = lshr i32 %2145, 17, !dbg !2201
  %2243 = or i32 %2241, %2242, !dbg !2201
  %2244 = shl i32 %2145, 13, !dbg !2201
  %2245 = lshr i32 %2145, 19, !dbg !2201
  %2246 = or i32 %2244, %2245, !dbg !2201
  %2247 = lshr i32 %2145, 10, !dbg !2201
  %2248 = xor i32 %2246, %2247, !dbg !2201
  %2249 = xor i32 %2248, %2243, !dbg !2201
  %2250 = load i32, i32* %43, align 4, !dbg !2201, !tbaa !1019
  %2251 = load i32, i32* %51, align 4, !dbg !2201, !tbaa !1019
  %2252 = shl i32 %2251, 25, !dbg !2201
  %2253 = lshr i32 %2251, 7, !dbg !2201
  %2254 = or i32 %2252, %2253, !dbg !2201
  %2255 = shl i32 %2251, 14, !dbg !2201
  %2256 = lshr i32 %2251, 18, !dbg !2201
  %2257 = or i32 %2255, %2256, !dbg !2201
  %2258 = lshr i32 %2251, 3, !dbg !2201
  %2259 = xor i32 %2257, %2258, !dbg !2201
  %2260 = xor i32 %2259, %2254, !dbg !2201
  %2261 = add i32 %2192, %2250, !dbg !2201
  %2262 = add i32 %2261, %2249, !dbg !2201
  %2263 = add i32 %2262, %2260, !dbg !2201
  tail call void @llvm.dbg.value(metadata i32 %2263, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2263, i32* %50, align 8, !dbg !2201, !tbaa !1019
  %2264 = add i32 %2263, -1035236496, !dbg !2201
  %2265 = add i32 %2264, %2032, !dbg !2201
  %2266 = add i32 %2265, %2240, !dbg !2201
  %2267 = add i32 %2266, %2237, !dbg !2201
  tail call void @llvm.dbg.value(metadata i32 %2267, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2268 = add i32 %2267, %2033, !dbg !2201
  tail call void @llvm.dbg.value(metadata i32 %2268, i64 0, metadata !2010, metadata !800), !dbg !2037
  %2269 = add i32 %2226, %2267, !dbg !2201
  tail call void @llvm.dbg.value(metadata i32 %2269, i64 0, metadata !2014, metadata !800), !dbg !2045
  %2270 = shl i32 %2269, 30, !dbg !2204
  %2271 = lshr i32 %2269, 2, !dbg !2204
  %2272 = or i32 %2270, %2271, !dbg !2204
  %2273 = shl i32 %2269, 19, !dbg !2204
  %2274 = lshr i32 %2269, 13, !dbg !2204
  %2275 = or i32 %2273, %2274, !dbg !2204
  %2276 = xor i32 %2272, %2275, !dbg !2204
  %2277 = shl i32 %2269, 10, !dbg !2204
  %2278 = lshr i32 %2269, 22, !dbg !2204
  %2279 = or i32 %2277, %2278, !dbg !2204
  %2280 = xor i32 %2276, %2279, !dbg !2204
  %2281 = and i32 %2269, %2210, !dbg !2204
  %2282 = or i32 %2269, %2210, !dbg !2204
  %2283 = and i32 %2282, %2151, !dbg !2204
  %2284 = or i32 %2283, %2281, !dbg !2204
  %2285 = add i32 %2280, %2284, !dbg !2204
  tail call void @llvm.dbg.value(metadata i32 %2285, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2286 = shl i32 %2268, 26, !dbg !2204
  %2287 = lshr i32 %2268, 6, !dbg !2204
  %2288 = or i32 %2286, %2287, !dbg !2204
  %2289 = shl i32 %2268, 21, !dbg !2204
  %2290 = lshr i32 %2268, 11, !dbg !2204
  %2291 = or i32 %2289, %2290, !dbg !2204
  %2292 = xor i32 %2288, %2291, !dbg !2204
  %2293 = shl i32 %2268, 7, !dbg !2204
  %2294 = lshr i32 %2268, 25, !dbg !2204
  %2295 = or i32 %2293, %2294, !dbg !2204
  %2296 = xor i32 %2292, %2295, !dbg !2204
  %2297 = xor i32 %2209, %2150, !dbg !2204
  %2298 = and i32 %2268, %2297, !dbg !2204
  %2299 = xor i32 %2298, %2150, !dbg !2204
  %2300 = shl i32 %2204, 15, !dbg !2204
  %2301 = lshr i32 %2204, 17, !dbg !2204
  %2302 = or i32 %2300, %2301, !dbg !2204
  %2303 = shl i32 %2204, 13, !dbg !2204
  %2304 = lshr i32 %2204, 19, !dbg !2204
  %2305 = or i32 %2303, %2304, !dbg !2204
  %2306 = lshr i32 %2204, 10, !dbg !2204
  %2307 = xor i32 %2305, %2306, !dbg !2204
  %2308 = xor i32 %2307, %2302, !dbg !2204
  %2309 = load i32, i32* %44, align 16, !dbg !2204, !tbaa !1019
  %2310 = load i32, i32* %52, align 16, !dbg !2204, !tbaa !1019
  %2311 = shl i32 %2310, 25, !dbg !2204
  %2312 = lshr i32 %2310, 7, !dbg !2204
  %2313 = or i32 %2311, %2312, !dbg !2204
  %2314 = shl i32 %2310, 14, !dbg !2204
  %2315 = lshr i32 %2310, 18, !dbg !2204
  %2316 = or i32 %2314, %2315, !dbg !2204
  %2317 = lshr i32 %2310, 3, !dbg !2204
  %2318 = xor i32 %2316, %2317, !dbg !2204
  %2319 = xor i32 %2318, %2313, !dbg !2204
  %2320 = add i32 %2251, %2309, !dbg !2204
  %2321 = add i32 %2320, %2308, !dbg !2204
  %2322 = add i32 %2321, %2319, !dbg !2204
  tail call void @llvm.dbg.value(metadata i32 %2322, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2322, i32* %51, align 4, !dbg !2204, !tbaa !1019
  %2323 = add i32 %2322, -949202525, !dbg !2204
  %2324 = add i32 %2323, %2091, !dbg !2204
  %2325 = add i32 %2324, %2299, !dbg !2204
  %2326 = add i32 %2325, %2296, !dbg !2204
  tail call void @llvm.dbg.value(metadata i32 %2326, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2327 = add i32 %2326, %2092, !dbg !2204
  tail call void @llvm.dbg.value(metadata i32 %2327, i64 0, metadata !2009, metadata !800), !dbg !2035
  %2328 = add i32 %2285, %2326, !dbg !2204
  tail call void @llvm.dbg.value(metadata i32 %2328, i64 0, metadata !2013, metadata !800), !dbg !2043
  %2329 = shl i32 %2328, 30, !dbg !2207
  %2330 = lshr i32 %2328, 2, !dbg !2207
  %2331 = or i32 %2329, %2330, !dbg !2207
  %2332 = shl i32 %2328, 19, !dbg !2207
  %2333 = lshr i32 %2328, 13, !dbg !2207
  %2334 = or i32 %2332, %2333, !dbg !2207
  %2335 = xor i32 %2331, %2334, !dbg !2207
  %2336 = shl i32 %2328, 10, !dbg !2207
  %2337 = lshr i32 %2328, 22, !dbg !2207
  %2338 = or i32 %2336, %2337, !dbg !2207
  %2339 = xor i32 %2335, %2338, !dbg !2207
  %2340 = and i32 %2328, %2269, !dbg !2207
  %2341 = or i32 %2328, %2269, !dbg !2207
  %2342 = and i32 %2341, %2210, !dbg !2207
  %2343 = or i32 %2342, %2340, !dbg !2207
  %2344 = add i32 %2339, %2343, !dbg !2207
  tail call void @llvm.dbg.value(metadata i32 %2344, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2345 = shl i32 %2327, 26, !dbg !2207
  %2346 = lshr i32 %2327, 6, !dbg !2207
  %2347 = or i32 %2345, %2346, !dbg !2207
  %2348 = shl i32 %2327, 21, !dbg !2207
  %2349 = lshr i32 %2327, 11, !dbg !2207
  %2350 = or i32 %2348, %2349, !dbg !2207
  %2351 = xor i32 %2347, %2350, !dbg !2207
  %2352 = shl i32 %2327, 7, !dbg !2207
  %2353 = lshr i32 %2327, 25, !dbg !2207
  %2354 = or i32 %2352, %2353, !dbg !2207
  %2355 = xor i32 %2351, %2354, !dbg !2207
  %2356 = xor i32 %2268, %2209, !dbg !2207
  %2357 = and i32 %2327, %2356, !dbg !2207
  %2358 = xor i32 %2357, %2209, !dbg !2207
  %2359 = shl i32 %2263, 15, !dbg !2207
  %2360 = lshr i32 %2263, 17, !dbg !2207
  %2361 = or i32 %2359, %2360, !dbg !2207
  %2362 = shl i32 %2263, 13, !dbg !2207
  %2363 = lshr i32 %2263, 19, !dbg !2207
  %2364 = or i32 %2362, %2363, !dbg !2207
  %2365 = lshr i32 %2263, 10, !dbg !2207
  %2366 = xor i32 %2364, %2365, !dbg !2207
  %2367 = xor i32 %2366, %2361, !dbg !2207
  %2368 = load i32, i32* %45, align 4, !dbg !2207, !tbaa !1019
  %2369 = load i32, i32* %53, align 4, !dbg !2207, !tbaa !1019
  %2370 = shl i32 %2369, 25, !dbg !2207
  %2371 = lshr i32 %2369, 7, !dbg !2207
  %2372 = or i32 %2370, %2371, !dbg !2207
  %2373 = shl i32 %2369, 14, !dbg !2207
  %2374 = lshr i32 %2369, 18, !dbg !2207
  %2375 = or i32 %2373, %2374, !dbg !2207
  %2376 = lshr i32 %2369, 3, !dbg !2207
  %2377 = xor i32 %2375, %2376, !dbg !2207
  %2378 = xor i32 %2377, %2372, !dbg !2207
  %2379 = add i32 %2310, %2368, !dbg !2207
  %2380 = add i32 %2379, %2367, !dbg !2207
  %2381 = add i32 %2380, %2378, !dbg !2207
  tail call void @llvm.dbg.value(metadata i32 %2381, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2381, i32* %52, align 16, !dbg !2207, !tbaa !1019
  %2382 = add i32 %2381, -778901479, !dbg !2207
  %2383 = add i32 %2382, %2150, !dbg !2207
  %2384 = add i32 %2383, %2358, !dbg !2207
  %2385 = add i32 %2384, %2355, !dbg !2207
  tail call void @llvm.dbg.value(metadata i32 %2385, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2386 = add i32 %2385, %2151, !dbg !2207
  tail call void @llvm.dbg.value(metadata i32 %2386, i64 0, metadata !2016, metadata !800), !dbg !2049
  %2387 = add i32 %2344, %2385, !dbg !2207
  tail call void @llvm.dbg.value(metadata i32 %2387, i64 0, metadata !2012, metadata !800), !dbg !2041
  %2388 = shl i32 %2387, 30, !dbg !2210
  %2389 = lshr i32 %2387, 2, !dbg !2210
  %2390 = or i32 %2388, %2389, !dbg !2210
  %2391 = shl i32 %2387, 19, !dbg !2210
  %2392 = lshr i32 %2387, 13, !dbg !2210
  %2393 = or i32 %2391, %2392, !dbg !2210
  %2394 = xor i32 %2390, %2393, !dbg !2210
  %2395 = shl i32 %2387, 10, !dbg !2210
  %2396 = lshr i32 %2387, 22, !dbg !2210
  %2397 = or i32 %2395, %2396, !dbg !2210
  %2398 = xor i32 %2394, %2397, !dbg !2210
  %2399 = and i32 %2387, %2328, !dbg !2210
  %2400 = or i32 %2387, %2328, !dbg !2210
  %2401 = and i32 %2400, %2269, !dbg !2210
  %2402 = or i32 %2401, %2399, !dbg !2210
  %2403 = add i32 %2398, %2402, !dbg !2210
  tail call void @llvm.dbg.value(metadata i32 %2403, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2404 = shl i32 %2386, 26, !dbg !2210
  %2405 = lshr i32 %2386, 6, !dbg !2210
  %2406 = or i32 %2404, %2405, !dbg !2210
  %2407 = shl i32 %2386, 21, !dbg !2210
  %2408 = lshr i32 %2386, 11, !dbg !2210
  %2409 = or i32 %2407, %2408, !dbg !2210
  %2410 = xor i32 %2406, %2409, !dbg !2210
  %2411 = shl i32 %2386, 7, !dbg !2210
  %2412 = lshr i32 %2386, 25, !dbg !2210
  %2413 = or i32 %2411, %2412, !dbg !2210
  %2414 = xor i32 %2410, %2413, !dbg !2210
  %2415 = xor i32 %2327, %2268, !dbg !2210
  %2416 = and i32 %2386, %2415, !dbg !2210
  %2417 = xor i32 %2416, %2268, !dbg !2210
  %2418 = shl i32 %2322, 15, !dbg !2210
  %2419 = lshr i32 %2322, 17, !dbg !2210
  %2420 = or i32 %2418, %2419, !dbg !2210
  %2421 = shl i32 %2322, 13, !dbg !2210
  %2422 = lshr i32 %2322, 19, !dbg !2210
  %2423 = or i32 %2421, %2422, !dbg !2210
  %2424 = lshr i32 %2322, 10, !dbg !2210
  %2425 = xor i32 %2423, %2424, !dbg !2210
  %2426 = xor i32 %2425, %2420, !dbg !2210
  %2427 = load i32, i32* %46, align 8, !dbg !2210, !tbaa !1019
  %2428 = load i32, i32* %54, align 8, !dbg !2210, !tbaa !1019
  %2429 = shl i32 %2428, 25, !dbg !2210
  %2430 = lshr i32 %2428, 7, !dbg !2210
  %2431 = or i32 %2429, %2430, !dbg !2210
  %2432 = shl i32 %2428, 14, !dbg !2210
  %2433 = lshr i32 %2428, 18, !dbg !2210
  %2434 = or i32 %2432, %2433, !dbg !2210
  %2435 = lshr i32 %2428, 3, !dbg !2210
  %2436 = xor i32 %2434, %2435, !dbg !2210
  %2437 = xor i32 %2436, %2431, !dbg !2210
  %2438 = add i32 %2369, %2427, !dbg !2210
  %2439 = add i32 %2438, %2426, !dbg !2210
  %2440 = add i32 %2439, %2437, !dbg !2210
  tail call void @llvm.dbg.value(metadata i32 %2440, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2440, i32* %53, align 4, !dbg !2210, !tbaa !1019
  %2441 = add i32 %2440, -694614492, !dbg !2210
  %2442 = add i32 %2441, %2209, !dbg !2210
  %2443 = add i32 %2442, %2417, !dbg !2210
  %2444 = add i32 %2443, %2414, !dbg !2210
  tail call void @llvm.dbg.value(metadata i32 %2444, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2445 = add i32 %2444, %2210, !dbg !2210
  tail call void @llvm.dbg.value(metadata i32 %2445, i64 0, metadata !2015, metadata !800), !dbg !2047
  %2446 = add i32 %2403, %2444, !dbg !2210
  tail call void @llvm.dbg.value(metadata i32 %2446, i64 0, metadata !2011, metadata !800), !dbg !2039
  %2447 = shl i32 %2446, 30, !dbg !2213
  %2448 = lshr i32 %2446, 2, !dbg !2213
  %2449 = or i32 %2447, %2448, !dbg !2213
  %2450 = shl i32 %2446, 19, !dbg !2213
  %2451 = lshr i32 %2446, 13, !dbg !2213
  %2452 = or i32 %2450, %2451, !dbg !2213
  %2453 = xor i32 %2449, %2452, !dbg !2213
  %2454 = shl i32 %2446, 10, !dbg !2213
  %2455 = lshr i32 %2446, 22, !dbg !2213
  %2456 = or i32 %2454, %2455, !dbg !2213
  %2457 = xor i32 %2453, %2456, !dbg !2213
  %2458 = and i32 %2446, %2387, !dbg !2213
  %2459 = or i32 %2446, %2387, !dbg !2213
  %2460 = and i32 %2459, %2328, !dbg !2213
  %2461 = or i32 %2460, %2458, !dbg !2213
  %2462 = add i32 %2457, %2461, !dbg !2213
  tail call void @llvm.dbg.value(metadata i32 %2462, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2463 = shl i32 %2445, 26, !dbg !2213
  %2464 = lshr i32 %2445, 6, !dbg !2213
  %2465 = or i32 %2463, %2464, !dbg !2213
  %2466 = shl i32 %2445, 21, !dbg !2213
  %2467 = lshr i32 %2445, 11, !dbg !2213
  %2468 = or i32 %2466, %2467, !dbg !2213
  %2469 = xor i32 %2465, %2468, !dbg !2213
  %2470 = shl i32 %2445, 7, !dbg !2213
  %2471 = lshr i32 %2445, 25, !dbg !2213
  %2472 = or i32 %2470, %2471, !dbg !2213
  %2473 = xor i32 %2469, %2472, !dbg !2213
  %2474 = xor i32 %2386, %2327, !dbg !2213
  %2475 = and i32 %2445, %2474, !dbg !2213
  %2476 = xor i32 %2475, %2327, !dbg !2213
  %2477 = shl i32 %2381, 15, !dbg !2213
  %2478 = lshr i32 %2381, 17, !dbg !2213
  %2479 = or i32 %2477, %2478, !dbg !2213
  %2480 = shl i32 %2381, 13, !dbg !2213
  %2481 = lshr i32 %2381, 19, !dbg !2213
  %2482 = or i32 %2480, %2481, !dbg !2213
  %2483 = lshr i32 %2381, 10, !dbg !2213
  %2484 = xor i32 %2482, %2483, !dbg !2213
  %2485 = xor i32 %2484, %2479, !dbg !2213
  %2486 = load i32, i32* %47, align 4, !dbg !2213, !tbaa !1019
  %2487 = load i32, i32* %55, align 4, !dbg !2213, !tbaa !1019
  %2488 = shl i32 %2487, 25, !dbg !2213
  %2489 = lshr i32 %2487, 7, !dbg !2213
  %2490 = or i32 %2488, %2489, !dbg !2213
  %2491 = shl i32 %2487, 14, !dbg !2213
  %2492 = lshr i32 %2487, 18, !dbg !2213
  %2493 = or i32 %2491, %2492, !dbg !2213
  %2494 = lshr i32 %2487, 3, !dbg !2213
  %2495 = xor i32 %2493, %2494, !dbg !2213
  %2496 = xor i32 %2495, %2490, !dbg !2213
  %2497 = add i32 %2428, %2486, !dbg !2213
  %2498 = add i32 %2497, %2485, !dbg !2213
  %2499 = add i32 %2498, %2496, !dbg !2213
  tail call void @llvm.dbg.value(metadata i32 %2499, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2499, i32* %54, align 8, !dbg !2213, !tbaa !1019
  %2500 = add i32 %2499, -200395387, !dbg !2213
  %2501 = add i32 %2500, %2268, !dbg !2213
  %2502 = add i32 %2501, %2476, !dbg !2213
  %2503 = add i32 %2502, %2473, !dbg !2213
  tail call void @llvm.dbg.value(metadata i32 %2503, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2504 = add i32 %2503, %2269, !dbg !2213
  tail call void @llvm.dbg.value(metadata i32 %2504, i64 0, metadata !2014, metadata !800), !dbg !2045
  %2505 = add i32 %2462, %2503, !dbg !2213
  tail call void @llvm.dbg.value(metadata i32 %2505, i64 0, metadata !2010, metadata !800), !dbg !2037
  %2506 = shl i32 %2505, 30, !dbg !2216
  %2507 = lshr i32 %2505, 2, !dbg !2216
  %2508 = or i32 %2506, %2507, !dbg !2216
  %2509 = shl i32 %2505, 19, !dbg !2216
  %2510 = lshr i32 %2505, 13, !dbg !2216
  %2511 = or i32 %2509, %2510, !dbg !2216
  %2512 = xor i32 %2508, %2511, !dbg !2216
  %2513 = shl i32 %2505, 10, !dbg !2216
  %2514 = lshr i32 %2505, 22, !dbg !2216
  %2515 = or i32 %2513, %2514, !dbg !2216
  %2516 = xor i32 %2512, %2515, !dbg !2216
  %2517 = and i32 %2505, %2446, !dbg !2216
  %2518 = or i32 %2505, %2446, !dbg !2216
  %2519 = and i32 %2518, %2387, !dbg !2216
  %2520 = or i32 %2519, %2517, !dbg !2216
  %2521 = add i32 %2516, %2520, !dbg !2216
  tail call void @llvm.dbg.value(metadata i32 %2521, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2522 = shl i32 %2504, 26, !dbg !2216
  %2523 = lshr i32 %2504, 6, !dbg !2216
  %2524 = or i32 %2522, %2523, !dbg !2216
  %2525 = shl i32 %2504, 21, !dbg !2216
  %2526 = lshr i32 %2504, 11, !dbg !2216
  %2527 = or i32 %2525, %2526, !dbg !2216
  %2528 = xor i32 %2524, %2527, !dbg !2216
  %2529 = shl i32 %2504, 7, !dbg !2216
  %2530 = lshr i32 %2504, 25, !dbg !2216
  %2531 = or i32 %2529, %2530, !dbg !2216
  %2532 = xor i32 %2528, %2531, !dbg !2216
  %2533 = xor i32 %2445, %2386, !dbg !2216
  %2534 = and i32 %2504, %2533, !dbg !2216
  %2535 = xor i32 %2534, %2386, !dbg !2216
  %2536 = shl i32 %2440, 15, !dbg !2216
  %2537 = lshr i32 %2440, 17, !dbg !2216
  %2538 = or i32 %2536, %2537, !dbg !2216
  %2539 = shl i32 %2440, 13, !dbg !2216
  %2540 = lshr i32 %2440, 19, !dbg !2216
  %2541 = or i32 %2539, %2540, !dbg !2216
  %2542 = lshr i32 %2440, 10, !dbg !2216
  %2543 = xor i32 %2541, %2542, !dbg !2216
  %2544 = xor i32 %2543, %2538, !dbg !2216
  %2545 = load i32, i32* %48, align 16, !dbg !2216, !tbaa !1019
  %2546 = load i32, i32* %40, align 16, !dbg !2216, !tbaa !1019
  %2547 = shl i32 %2546, 25, !dbg !2216
  %2548 = lshr i32 %2546, 7, !dbg !2216
  %2549 = or i32 %2547, %2548, !dbg !2216
  %2550 = shl i32 %2546, 14, !dbg !2216
  %2551 = lshr i32 %2546, 18, !dbg !2216
  %2552 = or i32 %2550, %2551, !dbg !2216
  %2553 = lshr i32 %2546, 3, !dbg !2216
  %2554 = xor i32 %2552, %2553, !dbg !2216
  %2555 = xor i32 %2554, %2549, !dbg !2216
  %2556 = add i32 %2487, %2545, !dbg !2216
  %2557 = add i32 %2556, %2544, !dbg !2216
  %2558 = add i32 %2557, %2555, !dbg !2216
  tail call void @llvm.dbg.value(metadata i32 %2558, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2558, i32* %55, align 4, !dbg !2216, !tbaa !1019
  %2559 = add i32 %2558, 275423344, !dbg !2216
  %2560 = add i32 %2559, %2327, !dbg !2216
  %2561 = add i32 %2560, %2535, !dbg !2216
  %2562 = add i32 %2561, %2532, !dbg !2216
  tail call void @llvm.dbg.value(metadata i32 %2562, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2563 = add i32 %2562, %2328, !dbg !2216
  tail call void @llvm.dbg.value(metadata i32 %2563, i64 0, metadata !2013, metadata !800), !dbg !2043
  %2564 = add i32 %2521, %2562, !dbg !2216
  tail call void @llvm.dbg.value(metadata i32 %2564, i64 0, metadata !2009, metadata !800), !dbg !2035
  %2565 = shl i32 %2564, 30, !dbg !2219
  %2566 = lshr i32 %2564, 2, !dbg !2219
  %2567 = or i32 %2565, %2566, !dbg !2219
  %2568 = shl i32 %2564, 19, !dbg !2219
  %2569 = lshr i32 %2564, 13, !dbg !2219
  %2570 = or i32 %2568, %2569, !dbg !2219
  %2571 = xor i32 %2567, %2570, !dbg !2219
  %2572 = shl i32 %2564, 10, !dbg !2219
  %2573 = lshr i32 %2564, 22, !dbg !2219
  %2574 = or i32 %2572, %2573, !dbg !2219
  %2575 = xor i32 %2571, %2574, !dbg !2219
  %2576 = and i32 %2564, %2505, !dbg !2219
  %2577 = or i32 %2564, %2505, !dbg !2219
  %2578 = and i32 %2577, %2446, !dbg !2219
  %2579 = or i32 %2578, %2576, !dbg !2219
  %2580 = add i32 %2575, %2579, !dbg !2219
  tail call void @llvm.dbg.value(metadata i32 %2580, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2581 = shl i32 %2563, 26, !dbg !2219
  %2582 = lshr i32 %2563, 6, !dbg !2219
  %2583 = or i32 %2581, %2582, !dbg !2219
  %2584 = shl i32 %2563, 21, !dbg !2219
  %2585 = lshr i32 %2563, 11, !dbg !2219
  %2586 = or i32 %2584, %2585, !dbg !2219
  %2587 = xor i32 %2583, %2586, !dbg !2219
  %2588 = shl i32 %2563, 7, !dbg !2219
  %2589 = lshr i32 %2563, 25, !dbg !2219
  %2590 = or i32 %2588, %2589, !dbg !2219
  %2591 = xor i32 %2587, %2590, !dbg !2219
  %2592 = xor i32 %2504, %2445, !dbg !2219
  %2593 = and i32 %2563, %2592, !dbg !2219
  %2594 = xor i32 %2593, %2445, !dbg !2219
  %2595 = shl i32 %2499, 15, !dbg !2219
  %2596 = lshr i32 %2499, 17, !dbg !2219
  %2597 = or i32 %2595, %2596, !dbg !2219
  %2598 = shl i32 %2499, 13, !dbg !2219
  %2599 = lshr i32 %2499, 19, !dbg !2219
  %2600 = or i32 %2598, %2599, !dbg !2219
  %2601 = lshr i32 %2499, 10, !dbg !2219
  %2602 = xor i32 %2600, %2601, !dbg !2219
  %2603 = xor i32 %2602, %2597, !dbg !2219
  %2604 = load i32, i32* %49, align 4, !dbg !2219, !tbaa !1019
  %2605 = load i32, i32* %41, align 4, !dbg !2219, !tbaa !1019
  %2606 = shl i32 %2605, 25, !dbg !2219
  %2607 = lshr i32 %2605, 7, !dbg !2219
  %2608 = or i32 %2606, %2607, !dbg !2219
  %2609 = shl i32 %2605, 14, !dbg !2219
  %2610 = lshr i32 %2605, 18, !dbg !2219
  %2611 = or i32 %2609, %2610, !dbg !2219
  %2612 = lshr i32 %2605, 3, !dbg !2219
  %2613 = xor i32 %2611, %2612, !dbg !2219
  %2614 = xor i32 %2613, %2608, !dbg !2219
  %2615 = add i32 %2546, %2604, !dbg !2219
  %2616 = add i32 %2615, %2603, !dbg !2219
  %2617 = add i32 %2616, %2614, !dbg !2219
  tail call void @llvm.dbg.value(metadata i32 %2617, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2617, i32* %40, align 16, !dbg !2219, !tbaa !1019
  %2618 = add i32 %2617, 430227734, !dbg !2219
  %2619 = add i32 %2618, %2386, !dbg !2219
  %2620 = add i32 %2619, %2594, !dbg !2219
  %2621 = add i32 %2620, %2591, !dbg !2219
  tail call void @llvm.dbg.value(metadata i32 %2621, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2622 = add i32 %2621, %2387, !dbg !2219
  tail call void @llvm.dbg.value(metadata i32 %2622, i64 0, metadata !2012, metadata !800), !dbg !2041
  %2623 = add i32 %2580, %2621, !dbg !2219
  tail call void @llvm.dbg.value(metadata i32 %2623, i64 0, metadata !2016, metadata !800), !dbg !2049
  %2624 = shl i32 %2623, 30, !dbg !2222
  %2625 = lshr i32 %2623, 2, !dbg !2222
  %2626 = or i32 %2624, %2625, !dbg !2222
  %2627 = shl i32 %2623, 19, !dbg !2222
  %2628 = lshr i32 %2623, 13, !dbg !2222
  %2629 = or i32 %2627, %2628, !dbg !2222
  %2630 = xor i32 %2626, %2629, !dbg !2222
  %2631 = shl i32 %2623, 10, !dbg !2222
  %2632 = lshr i32 %2623, 22, !dbg !2222
  %2633 = or i32 %2631, %2632, !dbg !2222
  %2634 = xor i32 %2630, %2633, !dbg !2222
  %2635 = and i32 %2623, %2564, !dbg !2222
  %2636 = or i32 %2623, %2564, !dbg !2222
  %2637 = and i32 %2636, %2505, !dbg !2222
  %2638 = or i32 %2637, %2635, !dbg !2222
  %2639 = add i32 %2634, %2638, !dbg !2222
  tail call void @llvm.dbg.value(metadata i32 %2639, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2640 = shl i32 %2622, 26, !dbg !2222
  %2641 = lshr i32 %2622, 6, !dbg !2222
  %2642 = or i32 %2640, %2641, !dbg !2222
  %2643 = shl i32 %2622, 21, !dbg !2222
  %2644 = lshr i32 %2622, 11, !dbg !2222
  %2645 = or i32 %2643, %2644, !dbg !2222
  %2646 = xor i32 %2642, %2645, !dbg !2222
  %2647 = shl i32 %2622, 7, !dbg !2222
  %2648 = lshr i32 %2622, 25, !dbg !2222
  %2649 = or i32 %2647, %2648, !dbg !2222
  %2650 = xor i32 %2646, %2649, !dbg !2222
  %2651 = xor i32 %2563, %2504, !dbg !2222
  %2652 = and i32 %2622, %2651, !dbg !2222
  %2653 = xor i32 %2652, %2504, !dbg !2222
  %2654 = shl i32 %2558, 15, !dbg !2222
  %2655 = lshr i32 %2558, 17, !dbg !2222
  %2656 = or i32 %2654, %2655, !dbg !2222
  %2657 = shl i32 %2558, 13, !dbg !2222
  %2658 = lshr i32 %2558, 19, !dbg !2222
  %2659 = or i32 %2657, %2658, !dbg !2222
  %2660 = lshr i32 %2558, 10, !dbg !2222
  %2661 = xor i32 %2659, %2660, !dbg !2222
  %2662 = xor i32 %2661, %2656, !dbg !2222
  %2663 = load i32, i32* %50, align 8, !dbg !2222, !tbaa !1019
  %2664 = load i32, i32* %42, align 8, !dbg !2222, !tbaa !1019
  %2665 = shl i32 %2664, 25, !dbg !2222
  %2666 = lshr i32 %2664, 7, !dbg !2222
  %2667 = or i32 %2665, %2666, !dbg !2222
  %2668 = shl i32 %2664, 14, !dbg !2222
  %2669 = lshr i32 %2664, 18, !dbg !2222
  %2670 = or i32 %2668, %2669, !dbg !2222
  %2671 = lshr i32 %2664, 3, !dbg !2222
  %2672 = xor i32 %2670, %2671, !dbg !2222
  %2673 = xor i32 %2672, %2667, !dbg !2222
  %2674 = add i32 %2605, %2663, !dbg !2222
  %2675 = add i32 %2674, %2662, !dbg !2222
  %2676 = add i32 %2675, %2673, !dbg !2222
  tail call void @llvm.dbg.value(metadata i32 %2676, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2676, i32* %41, align 4, !dbg !2222, !tbaa !1019
  %2677 = add i32 %2676, 506948616, !dbg !2222
  %2678 = add i32 %2677, %2445, !dbg !2222
  %2679 = add i32 %2678, %2653, !dbg !2222
  %2680 = add i32 %2679, %2650, !dbg !2222
  tail call void @llvm.dbg.value(metadata i32 %2680, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2681 = add i32 %2680, %2446, !dbg !2222
  tail call void @llvm.dbg.value(metadata i32 %2681, i64 0, metadata !2011, metadata !800), !dbg !2039
  %2682 = add i32 %2639, %2680, !dbg !2222
  tail call void @llvm.dbg.value(metadata i32 %2682, i64 0, metadata !2015, metadata !800), !dbg !2047
  %2683 = shl i32 %2682, 30, !dbg !2225
  %2684 = lshr i32 %2682, 2, !dbg !2225
  %2685 = or i32 %2683, %2684, !dbg !2225
  %2686 = shl i32 %2682, 19, !dbg !2225
  %2687 = lshr i32 %2682, 13, !dbg !2225
  %2688 = or i32 %2686, %2687, !dbg !2225
  %2689 = xor i32 %2685, %2688, !dbg !2225
  %2690 = shl i32 %2682, 10, !dbg !2225
  %2691 = lshr i32 %2682, 22, !dbg !2225
  %2692 = or i32 %2690, %2691, !dbg !2225
  %2693 = xor i32 %2689, %2692, !dbg !2225
  %2694 = and i32 %2682, %2623, !dbg !2225
  %2695 = or i32 %2682, %2623, !dbg !2225
  %2696 = and i32 %2695, %2564, !dbg !2225
  %2697 = or i32 %2696, %2694, !dbg !2225
  %2698 = add i32 %2693, %2697, !dbg !2225
  tail call void @llvm.dbg.value(metadata i32 %2698, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2699 = shl i32 %2681, 26, !dbg !2225
  %2700 = lshr i32 %2681, 6, !dbg !2225
  %2701 = or i32 %2699, %2700, !dbg !2225
  %2702 = shl i32 %2681, 21, !dbg !2225
  %2703 = lshr i32 %2681, 11, !dbg !2225
  %2704 = or i32 %2702, %2703, !dbg !2225
  %2705 = xor i32 %2701, %2704, !dbg !2225
  %2706 = shl i32 %2681, 7, !dbg !2225
  %2707 = lshr i32 %2681, 25, !dbg !2225
  %2708 = or i32 %2706, %2707, !dbg !2225
  %2709 = xor i32 %2705, %2708, !dbg !2225
  %2710 = xor i32 %2622, %2563, !dbg !2225
  %2711 = and i32 %2681, %2710, !dbg !2225
  %2712 = xor i32 %2711, %2563, !dbg !2225
  %2713 = shl i32 %2617, 15, !dbg !2225
  %2714 = lshr i32 %2617, 17, !dbg !2225
  %2715 = or i32 %2713, %2714, !dbg !2225
  %2716 = shl i32 %2617, 13, !dbg !2225
  %2717 = lshr i32 %2617, 19, !dbg !2225
  %2718 = or i32 %2716, %2717, !dbg !2225
  %2719 = lshr i32 %2617, 10, !dbg !2225
  %2720 = xor i32 %2718, %2719, !dbg !2225
  %2721 = xor i32 %2720, %2715, !dbg !2225
  %2722 = load i32, i32* %51, align 4, !dbg !2225, !tbaa !1019
  %2723 = load i32, i32* %43, align 4, !dbg !2225, !tbaa !1019
  %2724 = shl i32 %2723, 25, !dbg !2225
  %2725 = lshr i32 %2723, 7, !dbg !2225
  %2726 = or i32 %2724, %2725, !dbg !2225
  %2727 = shl i32 %2723, 14, !dbg !2225
  %2728 = lshr i32 %2723, 18, !dbg !2225
  %2729 = or i32 %2727, %2728, !dbg !2225
  %2730 = lshr i32 %2723, 3, !dbg !2225
  %2731 = xor i32 %2729, %2730, !dbg !2225
  %2732 = xor i32 %2731, %2726, !dbg !2225
  %2733 = add i32 %2664, %2722, !dbg !2225
  %2734 = add i32 %2733, %2721, !dbg !2225
  %2735 = add i32 %2734, %2732, !dbg !2225
  tail call void @llvm.dbg.value(metadata i32 %2735, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2735, i32* %42, align 8, !dbg !2225, !tbaa !1019
  %2736 = add i32 %2735, 659060556, !dbg !2225
  %2737 = add i32 %2736, %2504, !dbg !2225
  %2738 = add i32 %2737, %2712, !dbg !2225
  %2739 = add i32 %2738, %2709, !dbg !2225
  tail call void @llvm.dbg.value(metadata i32 %2739, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2740 = add i32 %2739, %2505, !dbg !2225
  tail call void @llvm.dbg.value(metadata i32 %2740, i64 0, metadata !2010, metadata !800), !dbg !2037
  %2741 = add i32 %2698, %2739, !dbg !2225
  tail call void @llvm.dbg.value(metadata i32 %2741, i64 0, metadata !2014, metadata !800), !dbg !2045
  %2742 = shl i32 %2741, 30, !dbg !2228
  %2743 = lshr i32 %2741, 2, !dbg !2228
  %2744 = or i32 %2742, %2743, !dbg !2228
  %2745 = shl i32 %2741, 19, !dbg !2228
  %2746 = lshr i32 %2741, 13, !dbg !2228
  %2747 = or i32 %2745, %2746, !dbg !2228
  %2748 = xor i32 %2744, %2747, !dbg !2228
  %2749 = shl i32 %2741, 10, !dbg !2228
  %2750 = lshr i32 %2741, 22, !dbg !2228
  %2751 = or i32 %2749, %2750, !dbg !2228
  %2752 = xor i32 %2748, %2751, !dbg !2228
  %2753 = and i32 %2741, %2682, !dbg !2228
  %2754 = or i32 %2741, %2682, !dbg !2228
  %2755 = and i32 %2754, %2623, !dbg !2228
  %2756 = or i32 %2755, %2753, !dbg !2228
  %2757 = add i32 %2752, %2756, !dbg !2228
  tail call void @llvm.dbg.value(metadata i32 %2757, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2758 = shl i32 %2740, 26, !dbg !2228
  %2759 = lshr i32 %2740, 6, !dbg !2228
  %2760 = or i32 %2758, %2759, !dbg !2228
  %2761 = shl i32 %2740, 21, !dbg !2228
  %2762 = lshr i32 %2740, 11, !dbg !2228
  %2763 = or i32 %2761, %2762, !dbg !2228
  %2764 = xor i32 %2760, %2763, !dbg !2228
  %2765 = shl i32 %2740, 7, !dbg !2228
  %2766 = lshr i32 %2740, 25, !dbg !2228
  %2767 = or i32 %2765, %2766, !dbg !2228
  %2768 = xor i32 %2764, %2767, !dbg !2228
  %2769 = xor i32 %2681, %2622, !dbg !2228
  %2770 = and i32 %2740, %2769, !dbg !2228
  %2771 = xor i32 %2770, %2622, !dbg !2228
  %2772 = shl i32 %2676, 15, !dbg !2228
  %2773 = lshr i32 %2676, 17, !dbg !2228
  %2774 = or i32 %2772, %2773, !dbg !2228
  %2775 = shl i32 %2676, 13, !dbg !2228
  %2776 = lshr i32 %2676, 19, !dbg !2228
  %2777 = or i32 %2775, %2776, !dbg !2228
  %2778 = lshr i32 %2676, 10, !dbg !2228
  %2779 = xor i32 %2777, %2778, !dbg !2228
  %2780 = xor i32 %2779, %2774, !dbg !2228
  %2781 = load i32, i32* %52, align 16, !dbg !2228, !tbaa !1019
  %2782 = load i32, i32* %44, align 16, !dbg !2228, !tbaa !1019
  %2783 = shl i32 %2782, 25, !dbg !2228
  %2784 = lshr i32 %2782, 7, !dbg !2228
  %2785 = or i32 %2783, %2784, !dbg !2228
  %2786 = shl i32 %2782, 14, !dbg !2228
  %2787 = lshr i32 %2782, 18, !dbg !2228
  %2788 = or i32 %2786, %2787, !dbg !2228
  %2789 = lshr i32 %2782, 3, !dbg !2228
  %2790 = xor i32 %2788, %2789, !dbg !2228
  %2791 = xor i32 %2790, %2785, !dbg !2228
  %2792 = add i32 %2723, %2781, !dbg !2228
  %2793 = add i32 %2792, %2780, !dbg !2228
  %2794 = add i32 %2793, %2791, !dbg !2228
  tail call void @llvm.dbg.value(metadata i32 %2794, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2794, i32* %43, align 4, !dbg !2228, !tbaa !1019
  %2795 = add i32 %2794, 883997877, !dbg !2228
  %2796 = add i32 %2795, %2563, !dbg !2228
  %2797 = add i32 %2796, %2771, !dbg !2228
  %2798 = add i32 %2797, %2768, !dbg !2228
  tail call void @llvm.dbg.value(metadata i32 %2798, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2799 = add i32 %2798, %2564, !dbg !2228
  tail call void @llvm.dbg.value(metadata i32 %2799, i64 0, metadata !2009, metadata !800), !dbg !2035
  %2800 = add i32 %2757, %2798, !dbg !2228
  tail call void @llvm.dbg.value(metadata i32 %2800, i64 0, metadata !2013, metadata !800), !dbg !2043
  %2801 = shl i32 %2800, 30, !dbg !2231
  %2802 = lshr i32 %2800, 2, !dbg !2231
  %2803 = or i32 %2801, %2802, !dbg !2231
  %2804 = shl i32 %2800, 19, !dbg !2231
  %2805 = lshr i32 %2800, 13, !dbg !2231
  %2806 = or i32 %2804, %2805, !dbg !2231
  %2807 = xor i32 %2803, %2806, !dbg !2231
  %2808 = shl i32 %2800, 10, !dbg !2231
  %2809 = lshr i32 %2800, 22, !dbg !2231
  %2810 = or i32 %2808, %2809, !dbg !2231
  %2811 = xor i32 %2807, %2810, !dbg !2231
  %2812 = and i32 %2800, %2741, !dbg !2231
  %2813 = or i32 %2800, %2741, !dbg !2231
  %2814 = and i32 %2813, %2682, !dbg !2231
  %2815 = or i32 %2814, %2812, !dbg !2231
  %2816 = add i32 %2811, %2815, !dbg !2231
  tail call void @llvm.dbg.value(metadata i32 %2816, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2817 = shl i32 %2799, 26, !dbg !2231
  %2818 = lshr i32 %2799, 6, !dbg !2231
  %2819 = or i32 %2817, %2818, !dbg !2231
  %2820 = shl i32 %2799, 21, !dbg !2231
  %2821 = lshr i32 %2799, 11, !dbg !2231
  %2822 = or i32 %2820, %2821, !dbg !2231
  %2823 = xor i32 %2819, %2822, !dbg !2231
  %2824 = shl i32 %2799, 7, !dbg !2231
  %2825 = lshr i32 %2799, 25, !dbg !2231
  %2826 = or i32 %2824, %2825, !dbg !2231
  %2827 = xor i32 %2823, %2826, !dbg !2231
  %2828 = xor i32 %2740, %2681, !dbg !2231
  %2829 = and i32 %2799, %2828, !dbg !2231
  %2830 = xor i32 %2829, %2681, !dbg !2231
  %2831 = shl i32 %2735, 15, !dbg !2231
  %2832 = lshr i32 %2735, 17, !dbg !2231
  %2833 = or i32 %2831, %2832, !dbg !2231
  %2834 = shl i32 %2735, 13, !dbg !2231
  %2835 = lshr i32 %2735, 19, !dbg !2231
  %2836 = or i32 %2834, %2835, !dbg !2231
  %2837 = lshr i32 %2735, 10, !dbg !2231
  %2838 = xor i32 %2836, %2837, !dbg !2231
  %2839 = xor i32 %2838, %2833, !dbg !2231
  %2840 = load i32, i32* %53, align 4, !dbg !2231, !tbaa !1019
  %2841 = load i32, i32* %45, align 4, !dbg !2231, !tbaa !1019
  %2842 = shl i32 %2841, 25, !dbg !2231
  %2843 = lshr i32 %2841, 7, !dbg !2231
  %2844 = or i32 %2842, %2843, !dbg !2231
  %2845 = shl i32 %2841, 14, !dbg !2231
  %2846 = lshr i32 %2841, 18, !dbg !2231
  %2847 = or i32 %2845, %2846, !dbg !2231
  %2848 = lshr i32 %2841, 3, !dbg !2231
  %2849 = xor i32 %2847, %2848, !dbg !2231
  %2850 = xor i32 %2849, %2844, !dbg !2231
  %2851 = add i32 %2782, %2840, !dbg !2231
  %2852 = add i32 %2851, %2839, !dbg !2231
  %2853 = add i32 %2852, %2850, !dbg !2231
  tail call void @llvm.dbg.value(metadata i32 %2853, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2853, i32* %44, align 16, !dbg !2231, !tbaa !1019
  %2854 = add i32 %2853, 958139571, !dbg !2231
  %2855 = add i32 %2854, %2622, !dbg !2231
  %2856 = add i32 %2855, %2830, !dbg !2231
  %2857 = add i32 %2856, %2827, !dbg !2231
  tail call void @llvm.dbg.value(metadata i32 %2857, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2858 = add i32 %2857, %2623, !dbg !2231
  tail call void @llvm.dbg.value(metadata i32 %2858, i64 0, metadata !2016, metadata !800), !dbg !2049
  %2859 = add i32 %2816, %2857, !dbg !2231
  tail call void @llvm.dbg.value(metadata i32 %2859, i64 0, metadata !2012, metadata !800), !dbg !2041
  %2860 = shl i32 %2859, 30, !dbg !2234
  %2861 = lshr i32 %2859, 2, !dbg !2234
  %2862 = or i32 %2860, %2861, !dbg !2234
  %2863 = shl i32 %2859, 19, !dbg !2234
  %2864 = lshr i32 %2859, 13, !dbg !2234
  %2865 = or i32 %2863, %2864, !dbg !2234
  %2866 = xor i32 %2862, %2865, !dbg !2234
  %2867 = shl i32 %2859, 10, !dbg !2234
  %2868 = lshr i32 %2859, 22, !dbg !2234
  %2869 = or i32 %2867, %2868, !dbg !2234
  %2870 = xor i32 %2866, %2869, !dbg !2234
  %2871 = and i32 %2859, %2800, !dbg !2234
  %2872 = or i32 %2859, %2800, !dbg !2234
  %2873 = and i32 %2872, %2741, !dbg !2234
  %2874 = or i32 %2873, %2871, !dbg !2234
  %2875 = add i32 %2870, %2874, !dbg !2234
  tail call void @llvm.dbg.value(metadata i32 %2875, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2876 = shl i32 %2858, 26, !dbg !2234
  %2877 = lshr i32 %2858, 6, !dbg !2234
  %2878 = or i32 %2876, %2877, !dbg !2234
  %2879 = shl i32 %2858, 21, !dbg !2234
  %2880 = lshr i32 %2858, 11, !dbg !2234
  %2881 = or i32 %2879, %2880, !dbg !2234
  %2882 = xor i32 %2878, %2881, !dbg !2234
  %2883 = shl i32 %2858, 7, !dbg !2234
  %2884 = lshr i32 %2858, 25, !dbg !2234
  %2885 = or i32 %2883, %2884, !dbg !2234
  %2886 = xor i32 %2882, %2885, !dbg !2234
  %2887 = xor i32 %2799, %2740, !dbg !2234
  %2888 = and i32 %2858, %2887, !dbg !2234
  %2889 = xor i32 %2888, %2740, !dbg !2234
  %2890 = shl i32 %2794, 15, !dbg !2234
  %2891 = lshr i32 %2794, 17, !dbg !2234
  %2892 = or i32 %2890, %2891, !dbg !2234
  %2893 = shl i32 %2794, 13, !dbg !2234
  %2894 = lshr i32 %2794, 19, !dbg !2234
  %2895 = or i32 %2893, %2894, !dbg !2234
  %2896 = lshr i32 %2794, 10, !dbg !2234
  %2897 = xor i32 %2895, %2896, !dbg !2234
  %2898 = xor i32 %2897, %2892, !dbg !2234
  %2899 = load i32, i32* %54, align 8, !dbg !2234, !tbaa !1019
  %2900 = load i32, i32* %46, align 8, !dbg !2234, !tbaa !1019
  %2901 = shl i32 %2900, 25, !dbg !2234
  %2902 = lshr i32 %2900, 7, !dbg !2234
  %2903 = or i32 %2901, %2902, !dbg !2234
  %2904 = shl i32 %2900, 14, !dbg !2234
  %2905 = lshr i32 %2900, 18, !dbg !2234
  %2906 = or i32 %2904, %2905, !dbg !2234
  %2907 = lshr i32 %2900, 3, !dbg !2234
  %2908 = xor i32 %2906, %2907, !dbg !2234
  %2909 = xor i32 %2908, %2903, !dbg !2234
  %2910 = add i32 %2841, %2899, !dbg !2234
  %2911 = add i32 %2910, %2898, !dbg !2234
  %2912 = add i32 %2911, %2909, !dbg !2234
  tail call void @llvm.dbg.value(metadata i32 %2912, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2912, i32* %45, align 4, !dbg !2234, !tbaa !1019
  %2913 = add i32 %2912, 1322822218, !dbg !2234
  %2914 = add i32 %2913, %2681, !dbg !2234
  %2915 = add i32 %2914, %2889, !dbg !2234
  %2916 = add i32 %2915, %2886, !dbg !2234
  tail call void @llvm.dbg.value(metadata i32 %2916, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2917 = add i32 %2916, %2682, !dbg !2234
  tail call void @llvm.dbg.value(metadata i32 %2917, i64 0, metadata !2015, metadata !800), !dbg !2047
  %2918 = add i32 %2875, %2916, !dbg !2234
  tail call void @llvm.dbg.value(metadata i32 %2918, i64 0, metadata !2011, metadata !800), !dbg !2039
  %2919 = shl i32 %2918, 30, !dbg !2237
  %2920 = lshr i32 %2918, 2, !dbg !2237
  %2921 = or i32 %2919, %2920, !dbg !2237
  %2922 = shl i32 %2918, 19, !dbg !2237
  %2923 = lshr i32 %2918, 13, !dbg !2237
  %2924 = or i32 %2922, %2923, !dbg !2237
  %2925 = xor i32 %2921, %2924, !dbg !2237
  %2926 = shl i32 %2918, 10, !dbg !2237
  %2927 = lshr i32 %2918, 22, !dbg !2237
  %2928 = or i32 %2926, %2927, !dbg !2237
  %2929 = xor i32 %2925, %2928, !dbg !2237
  %2930 = and i32 %2918, %2859, !dbg !2237
  %2931 = or i32 %2918, %2859, !dbg !2237
  %2932 = and i32 %2931, %2800, !dbg !2237
  %2933 = or i32 %2932, %2930, !dbg !2237
  %2934 = add i32 %2929, %2933, !dbg !2237
  tail call void @llvm.dbg.value(metadata i32 %2934, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2935 = shl i32 %2917, 26, !dbg !2237
  %2936 = lshr i32 %2917, 6, !dbg !2237
  %2937 = or i32 %2935, %2936, !dbg !2237
  %2938 = shl i32 %2917, 21, !dbg !2237
  %2939 = lshr i32 %2917, 11, !dbg !2237
  %2940 = or i32 %2938, %2939, !dbg !2237
  %2941 = xor i32 %2937, %2940, !dbg !2237
  %2942 = shl i32 %2917, 7, !dbg !2237
  %2943 = lshr i32 %2917, 25, !dbg !2237
  %2944 = or i32 %2942, %2943, !dbg !2237
  %2945 = xor i32 %2941, %2944, !dbg !2237
  %2946 = xor i32 %2858, %2799, !dbg !2237
  %2947 = and i32 %2917, %2946, !dbg !2237
  %2948 = xor i32 %2947, %2799, !dbg !2237
  %2949 = shl i32 %2853, 15, !dbg !2237
  %2950 = lshr i32 %2853, 17, !dbg !2237
  %2951 = or i32 %2949, %2950, !dbg !2237
  %2952 = shl i32 %2853, 13, !dbg !2237
  %2953 = lshr i32 %2853, 19, !dbg !2237
  %2954 = or i32 %2952, %2953, !dbg !2237
  %2955 = lshr i32 %2853, 10, !dbg !2237
  %2956 = xor i32 %2954, %2955, !dbg !2237
  %2957 = xor i32 %2956, %2951, !dbg !2237
  %2958 = load i32, i32* %55, align 4, !dbg !2237, !tbaa !1019
  %2959 = load i32, i32* %47, align 4, !dbg !2237, !tbaa !1019
  %2960 = shl i32 %2959, 25, !dbg !2237
  %2961 = lshr i32 %2959, 7, !dbg !2237
  %2962 = or i32 %2960, %2961, !dbg !2237
  %2963 = shl i32 %2959, 14, !dbg !2237
  %2964 = lshr i32 %2959, 18, !dbg !2237
  %2965 = or i32 %2963, %2964, !dbg !2237
  %2966 = lshr i32 %2959, 3, !dbg !2237
  %2967 = xor i32 %2965, %2966, !dbg !2237
  %2968 = xor i32 %2967, %2962, !dbg !2237
  %2969 = add i32 %2900, %2958, !dbg !2237
  %2970 = add i32 %2969, %2957, !dbg !2237
  %2971 = add i32 %2970, %2968, !dbg !2237
  tail call void @llvm.dbg.value(metadata i32 %2971, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %2971, i32* %46, align 8, !dbg !2237, !tbaa !1019
  %2972 = add i32 %2971, 1537002063, !dbg !2237
  %2973 = add i32 %2972, %2740, !dbg !2237
  %2974 = add i32 %2973, %2948, !dbg !2237
  %2975 = add i32 %2974, %2945, !dbg !2237
  tail call void @llvm.dbg.value(metadata i32 %2975, i64 0, metadata !2021, metadata !800), !dbg !2076
  %2976 = add i32 %2975, %2741, !dbg !2237
  tail call void @llvm.dbg.value(metadata i32 %2976, i64 0, metadata !2014, metadata !800), !dbg !2045
  %2977 = add i32 %2934, %2975, !dbg !2237
  tail call void @llvm.dbg.value(metadata i32 %2977, i64 0, metadata !2010, metadata !800), !dbg !2037
  %2978 = shl i32 %2977, 30, !dbg !2240
  %2979 = lshr i32 %2977, 2, !dbg !2240
  %2980 = or i32 %2978, %2979, !dbg !2240
  %2981 = shl i32 %2977, 19, !dbg !2240
  %2982 = lshr i32 %2977, 13, !dbg !2240
  %2983 = or i32 %2981, %2982, !dbg !2240
  %2984 = xor i32 %2980, %2983, !dbg !2240
  %2985 = shl i32 %2977, 10, !dbg !2240
  %2986 = lshr i32 %2977, 22, !dbg !2240
  %2987 = or i32 %2985, %2986, !dbg !2240
  %2988 = xor i32 %2984, %2987, !dbg !2240
  %2989 = and i32 %2977, %2918, !dbg !2240
  %2990 = or i32 %2977, %2918, !dbg !2240
  %2991 = and i32 %2990, %2859, !dbg !2240
  %2992 = or i32 %2991, %2989, !dbg !2240
  %2993 = add i32 %2988, %2992, !dbg !2240
  tail call void @llvm.dbg.value(metadata i32 %2993, i64 0, metadata !2020, metadata !800), !dbg !2075
  %2994 = shl i32 %2976, 26, !dbg !2240
  %2995 = lshr i32 %2976, 6, !dbg !2240
  %2996 = or i32 %2994, %2995, !dbg !2240
  %2997 = shl i32 %2976, 21, !dbg !2240
  %2998 = lshr i32 %2976, 11, !dbg !2240
  %2999 = or i32 %2997, %2998, !dbg !2240
  %3000 = xor i32 %2996, %2999, !dbg !2240
  %3001 = shl i32 %2976, 7, !dbg !2240
  %3002 = lshr i32 %2976, 25, !dbg !2240
  %3003 = or i32 %3001, %3002, !dbg !2240
  %3004 = xor i32 %3000, %3003, !dbg !2240
  %3005 = xor i32 %2917, %2858, !dbg !2240
  %3006 = and i32 %2976, %3005, !dbg !2240
  %3007 = xor i32 %3006, %2858, !dbg !2240
  %3008 = shl i32 %2912, 15, !dbg !2240
  %3009 = lshr i32 %2912, 17, !dbg !2240
  %3010 = or i32 %3008, %3009, !dbg !2240
  %3011 = shl i32 %2912, 13, !dbg !2240
  %3012 = lshr i32 %2912, 19, !dbg !2240
  %3013 = or i32 %3011, %3012, !dbg !2240
  %3014 = lshr i32 %2912, 10, !dbg !2240
  %3015 = xor i32 %3013, %3014, !dbg !2240
  %3016 = xor i32 %3015, %3010, !dbg !2240
  %3017 = load i32, i32* %40, align 16, !dbg !2240, !tbaa !1019
  %3018 = load i32, i32* %48, align 16, !dbg !2240, !tbaa !1019
  %3019 = shl i32 %3018, 25, !dbg !2240
  %3020 = lshr i32 %3018, 7, !dbg !2240
  %3021 = or i32 %3019, %3020, !dbg !2240
  %3022 = shl i32 %3018, 14, !dbg !2240
  %3023 = lshr i32 %3018, 18, !dbg !2240
  %3024 = or i32 %3022, %3023, !dbg !2240
  %3025 = lshr i32 %3018, 3, !dbg !2240
  %3026 = xor i32 %3024, %3025, !dbg !2240
  %3027 = xor i32 %3026, %3021, !dbg !2240
  %3028 = add i32 %2959, %3017, !dbg !2240
  %3029 = add i32 %3028, %3016, !dbg !2240
  %3030 = add i32 %3029, %3027, !dbg !2240
  tail call void @llvm.dbg.value(metadata i32 %3030, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3030, i32* %47, align 4, !dbg !2240, !tbaa !1019
  %3031 = add i32 %3030, 1747873779, !dbg !2240
  %3032 = add i32 %3031, %2799, !dbg !2240
  %3033 = add i32 %3032, %3007, !dbg !2240
  %3034 = add i32 %3033, %3004, !dbg !2240
  tail call void @llvm.dbg.value(metadata i32 %3034, i64 0, metadata !2021, metadata !800), !dbg !2076
  %3035 = add i32 %3034, %2800, !dbg !2240
  tail call void @llvm.dbg.value(metadata i32 %3035, i64 0, metadata !2013, metadata !800), !dbg !2043
  %3036 = add i32 %2993, %3034, !dbg !2240
  tail call void @llvm.dbg.value(metadata i32 %3036, i64 0, metadata !2009, metadata !800), !dbg !2035
  %3037 = shl i32 %3036, 30, !dbg !2243
  %3038 = lshr i32 %3036, 2, !dbg !2243
  %3039 = or i32 %3037, %3038, !dbg !2243
  %3040 = shl i32 %3036, 19, !dbg !2243
  %3041 = lshr i32 %3036, 13, !dbg !2243
  %3042 = or i32 %3040, %3041, !dbg !2243
  %3043 = xor i32 %3039, %3042, !dbg !2243
  %3044 = shl i32 %3036, 10, !dbg !2243
  %3045 = lshr i32 %3036, 22, !dbg !2243
  %3046 = or i32 %3044, %3045, !dbg !2243
  %3047 = xor i32 %3043, %3046, !dbg !2243
  %3048 = and i32 %3036, %2977, !dbg !2243
  %3049 = or i32 %3036, %2977, !dbg !2243
  %3050 = and i32 %3049, %2918, !dbg !2243
  %3051 = or i32 %3050, %3048, !dbg !2243
  %3052 = add i32 %3047, %3051, !dbg !2243
  tail call void @llvm.dbg.value(metadata i32 %3052, i64 0, metadata !2020, metadata !800), !dbg !2075
  %3053 = shl i32 %3035, 26, !dbg !2243
  %3054 = lshr i32 %3035, 6, !dbg !2243
  %3055 = or i32 %3053, %3054, !dbg !2243
  %3056 = shl i32 %3035, 21, !dbg !2243
  %3057 = lshr i32 %3035, 11, !dbg !2243
  %3058 = or i32 %3056, %3057, !dbg !2243
  %3059 = xor i32 %3055, %3058, !dbg !2243
  %3060 = shl i32 %3035, 7, !dbg !2243
  %3061 = lshr i32 %3035, 25, !dbg !2243
  %3062 = or i32 %3060, %3061, !dbg !2243
  %3063 = xor i32 %3059, %3062, !dbg !2243
  %3064 = xor i32 %2976, %2917, !dbg !2243
  %3065 = and i32 %3035, %3064, !dbg !2243
  %3066 = xor i32 %3065, %2917, !dbg !2243
  %3067 = shl i32 %2971, 15, !dbg !2243
  %3068 = lshr i32 %2971, 17, !dbg !2243
  %3069 = or i32 %3067, %3068, !dbg !2243
  %3070 = shl i32 %2971, 13, !dbg !2243
  %3071 = lshr i32 %2971, 19, !dbg !2243
  %3072 = or i32 %3070, %3071, !dbg !2243
  %3073 = lshr i32 %2971, 10, !dbg !2243
  %3074 = xor i32 %3072, %3073, !dbg !2243
  %3075 = xor i32 %3074, %3069, !dbg !2243
  %3076 = load i32, i32* %41, align 4, !dbg !2243, !tbaa !1019
  %3077 = load i32, i32* %49, align 4, !dbg !2243, !tbaa !1019
  %3078 = shl i32 %3077, 25, !dbg !2243
  %3079 = lshr i32 %3077, 7, !dbg !2243
  %3080 = or i32 %3078, %3079, !dbg !2243
  %3081 = shl i32 %3077, 14, !dbg !2243
  %3082 = lshr i32 %3077, 18, !dbg !2243
  %3083 = or i32 %3081, %3082, !dbg !2243
  %3084 = lshr i32 %3077, 3, !dbg !2243
  %3085 = xor i32 %3083, %3084, !dbg !2243
  %3086 = xor i32 %3085, %3080, !dbg !2243
  %3087 = add i32 %3018, %3076, !dbg !2243
  %3088 = add i32 %3087, %3075, !dbg !2243
  %3089 = add i32 %3088, %3086, !dbg !2243
  tail call void @llvm.dbg.value(metadata i32 %3089, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3089, i32* %48, align 16, !dbg !2243, !tbaa !1019
  %3090 = add i32 %3089, 1955562222, !dbg !2243
  %3091 = add i32 %3090, %2858, !dbg !2243
  %3092 = add i32 %3091, %3066, !dbg !2243
  %3093 = add i32 %3092, %3063, !dbg !2243
  tail call void @llvm.dbg.value(metadata i32 %3093, i64 0, metadata !2021, metadata !800), !dbg !2076
  %3094 = add i32 %3093, %2859, !dbg !2243
  tail call void @llvm.dbg.value(metadata i32 %3094, i64 0, metadata !2012, metadata !800), !dbg !2041
  %3095 = add i32 %3052, %3093, !dbg !2243
  tail call void @llvm.dbg.value(metadata i32 %3095, i64 0, metadata !2016, metadata !800), !dbg !2049
  %3096 = shl i32 %3095, 30, !dbg !2246
  %3097 = lshr i32 %3095, 2, !dbg !2246
  %3098 = or i32 %3096, %3097, !dbg !2246
  %3099 = shl i32 %3095, 19, !dbg !2246
  %3100 = lshr i32 %3095, 13, !dbg !2246
  %3101 = or i32 %3099, %3100, !dbg !2246
  %3102 = xor i32 %3098, %3101, !dbg !2246
  %3103 = shl i32 %3095, 10, !dbg !2246
  %3104 = lshr i32 %3095, 22, !dbg !2246
  %3105 = or i32 %3103, %3104, !dbg !2246
  %3106 = xor i32 %3102, %3105, !dbg !2246
  %3107 = and i32 %3095, %3036, !dbg !2246
  %3108 = or i32 %3095, %3036, !dbg !2246
  %3109 = and i32 %3108, %2977, !dbg !2246
  %3110 = or i32 %3109, %3107, !dbg !2246
  %3111 = add i32 %3106, %3110, !dbg !2246
  tail call void @llvm.dbg.value(metadata i32 %3111, i64 0, metadata !2020, metadata !800), !dbg !2075
  %3112 = shl i32 %3094, 26, !dbg !2246
  %3113 = lshr i32 %3094, 6, !dbg !2246
  %3114 = or i32 %3112, %3113, !dbg !2246
  %3115 = shl i32 %3094, 21, !dbg !2246
  %3116 = lshr i32 %3094, 11, !dbg !2246
  %3117 = or i32 %3115, %3116, !dbg !2246
  %3118 = xor i32 %3114, %3117, !dbg !2246
  %3119 = shl i32 %3094, 7, !dbg !2246
  %3120 = lshr i32 %3094, 25, !dbg !2246
  %3121 = or i32 %3119, %3120, !dbg !2246
  %3122 = xor i32 %3118, %3121, !dbg !2246
  %3123 = xor i32 %3035, %2976, !dbg !2246
  %3124 = and i32 %3094, %3123, !dbg !2246
  %3125 = xor i32 %3124, %2976, !dbg !2246
  %3126 = shl i32 %3030, 15, !dbg !2246
  %3127 = lshr i32 %3030, 17, !dbg !2246
  %3128 = or i32 %3126, %3127, !dbg !2246
  %3129 = shl i32 %3030, 13, !dbg !2246
  %3130 = lshr i32 %3030, 19, !dbg !2246
  %3131 = or i32 %3129, %3130, !dbg !2246
  %3132 = lshr i32 %3030, 10, !dbg !2246
  %3133 = xor i32 %3131, %3132, !dbg !2246
  %3134 = xor i32 %3133, %3128, !dbg !2246
  %3135 = load i32, i32* %42, align 8, !dbg !2246, !tbaa !1019
  %3136 = load i32, i32* %50, align 8, !dbg !2246, !tbaa !1019
  %3137 = shl i32 %3136, 25, !dbg !2246
  %3138 = lshr i32 %3136, 7, !dbg !2246
  %3139 = or i32 %3137, %3138, !dbg !2246
  %3140 = shl i32 %3136, 14, !dbg !2246
  %3141 = lshr i32 %3136, 18, !dbg !2246
  %3142 = or i32 %3140, %3141, !dbg !2246
  %3143 = lshr i32 %3136, 3, !dbg !2246
  %3144 = xor i32 %3142, %3143, !dbg !2246
  %3145 = xor i32 %3144, %3139, !dbg !2246
  %3146 = add i32 %3077, %3135, !dbg !2246
  %3147 = add i32 %3146, %3134, !dbg !2246
  %3148 = add i32 %3147, %3145, !dbg !2246
  tail call void @llvm.dbg.value(metadata i32 %3148, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3148, i32* %49, align 4, !dbg !2246, !tbaa !1019
  %3149 = add i32 %3148, 2024104815, !dbg !2246
  %3150 = add i32 %3149, %2917, !dbg !2246
  %3151 = add i32 %3150, %3125, !dbg !2246
  %3152 = add i32 %3151, %3122, !dbg !2246
  tail call void @llvm.dbg.value(metadata i32 %3152, i64 0, metadata !2021, metadata !800), !dbg !2076
  %3153 = add i32 %3152, %2918, !dbg !2246
  tail call void @llvm.dbg.value(metadata i32 %3153, i64 0, metadata !2011, metadata !800), !dbg !2039
  %3154 = add i32 %3111, %3152, !dbg !2246
  tail call void @llvm.dbg.value(metadata i32 %3154, i64 0, metadata !2015, metadata !800), !dbg !2047
  %3155 = shl i32 %3154, 30, !dbg !2249
  %3156 = lshr i32 %3154, 2, !dbg !2249
  %3157 = or i32 %3155, %3156, !dbg !2249
  %3158 = shl i32 %3154, 19, !dbg !2249
  %3159 = lshr i32 %3154, 13, !dbg !2249
  %3160 = or i32 %3158, %3159, !dbg !2249
  %3161 = xor i32 %3157, %3160, !dbg !2249
  %3162 = shl i32 %3154, 10, !dbg !2249
  %3163 = lshr i32 %3154, 22, !dbg !2249
  %3164 = or i32 %3162, %3163, !dbg !2249
  %3165 = xor i32 %3161, %3164, !dbg !2249
  %3166 = and i32 %3154, %3095, !dbg !2249
  %3167 = or i32 %3154, %3095, !dbg !2249
  %3168 = and i32 %3167, %3036, !dbg !2249
  %3169 = or i32 %3168, %3166, !dbg !2249
  %3170 = add i32 %3165, %3169, !dbg !2249
  tail call void @llvm.dbg.value(metadata i32 %3170, i64 0, metadata !2020, metadata !800), !dbg !2075
  %3171 = shl i32 %3153, 26, !dbg !2249
  %3172 = lshr i32 %3153, 6, !dbg !2249
  %3173 = or i32 %3171, %3172, !dbg !2249
  %3174 = shl i32 %3153, 21, !dbg !2249
  %3175 = lshr i32 %3153, 11, !dbg !2249
  %3176 = or i32 %3174, %3175, !dbg !2249
  %3177 = xor i32 %3173, %3176, !dbg !2249
  %3178 = shl i32 %3153, 7, !dbg !2249
  %3179 = lshr i32 %3153, 25, !dbg !2249
  %3180 = or i32 %3178, %3179, !dbg !2249
  %3181 = xor i32 %3177, %3180, !dbg !2249
  %3182 = xor i32 %3094, %3035, !dbg !2249
  %3183 = and i32 %3153, %3182, !dbg !2249
  %3184 = xor i32 %3183, %3035, !dbg !2249
  %3185 = shl i32 %3089, 15, !dbg !2249
  %3186 = lshr i32 %3089, 17, !dbg !2249
  %3187 = or i32 %3185, %3186, !dbg !2249
  %3188 = shl i32 %3089, 13, !dbg !2249
  %3189 = lshr i32 %3089, 19, !dbg !2249
  %3190 = or i32 %3188, %3189, !dbg !2249
  %3191 = lshr i32 %3089, 10, !dbg !2249
  %3192 = xor i32 %3190, %3191, !dbg !2249
  %3193 = xor i32 %3192, %3187, !dbg !2249
  %3194 = load i32, i32* %43, align 4, !dbg !2249, !tbaa !1019
  %3195 = load i32, i32* %51, align 4, !dbg !2249, !tbaa !1019
  %3196 = shl i32 %3195, 25, !dbg !2249
  %3197 = lshr i32 %3195, 7, !dbg !2249
  %3198 = or i32 %3196, %3197, !dbg !2249
  %3199 = shl i32 %3195, 14, !dbg !2249
  %3200 = lshr i32 %3195, 18, !dbg !2249
  %3201 = or i32 %3199, %3200, !dbg !2249
  %3202 = lshr i32 %3195, 3, !dbg !2249
  %3203 = xor i32 %3201, %3202, !dbg !2249
  %3204 = xor i32 %3203, %3198, !dbg !2249
  %3205 = add i32 %3136, %3194, !dbg !2249
  %3206 = add i32 %3205, %3193, !dbg !2249
  %3207 = add i32 %3206, %3204, !dbg !2249
  tail call void @llvm.dbg.value(metadata i32 %3207, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3207, i32* %50, align 8, !dbg !2249, !tbaa !1019
  %3208 = add i32 %3207, -2067236844, !dbg !2249
  %3209 = add i32 %3208, %2976, !dbg !2249
  %3210 = add i32 %3209, %3184, !dbg !2249
  %3211 = add i32 %3210, %3181, !dbg !2249
  tail call void @llvm.dbg.value(metadata i32 %3211, i64 0, metadata !2021, metadata !800), !dbg !2076
  %3212 = add i32 %3211, %2977, !dbg !2249
  tail call void @llvm.dbg.value(metadata i32 %3212, i64 0, metadata !2010, metadata !800), !dbg !2037
  %3213 = add i32 %3170, %3211, !dbg !2249
  tail call void @llvm.dbg.value(metadata i32 %3213, i64 0, metadata !2014, metadata !800), !dbg !2045
  %3214 = shl i32 %3213, 30, !dbg !2252
  %3215 = lshr i32 %3213, 2, !dbg !2252
  %3216 = or i32 %3214, %3215, !dbg !2252
  %3217 = shl i32 %3213, 19, !dbg !2252
  %3218 = lshr i32 %3213, 13, !dbg !2252
  %3219 = or i32 %3217, %3218, !dbg !2252
  %3220 = xor i32 %3216, %3219, !dbg !2252
  %3221 = shl i32 %3213, 10, !dbg !2252
  %3222 = lshr i32 %3213, 22, !dbg !2252
  %3223 = or i32 %3221, %3222, !dbg !2252
  %3224 = xor i32 %3220, %3223, !dbg !2252
  %3225 = and i32 %3213, %3154, !dbg !2252
  %3226 = or i32 %3213, %3154, !dbg !2252
  %3227 = and i32 %3226, %3095, !dbg !2252
  %3228 = or i32 %3227, %3225, !dbg !2252
  %3229 = add i32 %3224, %3228, !dbg !2252
  tail call void @llvm.dbg.value(metadata i32 %3229, i64 0, metadata !2020, metadata !800), !dbg !2075
  %3230 = shl i32 %3212, 26, !dbg !2252
  %3231 = lshr i32 %3212, 6, !dbg !2252
  %3232 = or i32 %3230, %3231, !dbg !2252
  %3233 = shl i32 %3212, 21, !dbg !2252
  %3234 = lshr i32 %3212, 11, !dbg !2252
  %3235 = or i32 %3233, %3234, !dbg !2252
  %3236 = xor i32 %3232, %3235, !dbg !2252
  %3237 = shl i32 %3212, 7, !dbg !2252
  %3238 = lshr i32 %3212, 25, !dbg !2252
  %3239 = or i32 %3237, %3238, !dbg !2252
  %3240 = xor i32 %3236, %3239, !dbg !2252
  %3241 = xor i32 %3153, %3094, !dbg !2252
  %3242 = and i32 %3212, %3241, !dbg !2252
  %3243 = xor i32 %3242, %3094, !dbg !2252
  %3244 = shl i32 %3148, 15, !dbg !2252
  %3245 = lshr i32 %3148, 17, !dbg !2252
  %3246 = or i32 %3244, %3245, !dbg !2252
  %3247 = shl i32 %3148, 13, !dbg !2252
  %3248 = lshr i32 %3148, 19, !dbg !2252
  %3249 = or i32 %3247, %3248, !dbg !2252
  %3250 = lshr i32 %3148, 10, !dbg !2252
  %3251 = xor i32 %3249, %3250, !dbg !2252
  %3252 = xor i32 %3251, %3246, !dbg !2252
  %3253 = load i32, i32* %44, align 16, !dbg !2252, !tbaa !1019
  %3254 = load i32, i32* %52, align 16, !dbg !2252, !tbaa !1019
  %3255 = shl i32 %3254, 25, !dbg !2252
  %3256 = lshr i32 %3254, 7, !dbg !2252
  %3257 = or i32 %3255, %3256, !dbg !2252
  %3258 = shl i32 %3254, 14, !dbg !2252
  %3259 = lshr i32 %3254, 18, !dbg !2252
  %3260 = or i32 %3258, %3259, !dbg !2252
  %3261 = lshr i32 %3254, 3, !dbg !2252
  %3262 = xor i32 %3260, %3261, !dbg !2252
  %3263 = xor i32 %3262, %3257, !dbg !2252
  %3264 = add i32 %3195, %3253, !dbg !2252
  %3265 = add i32 %3264, %3252, !dbg !2252
  %3266 = add i32 %3265, %3263, !dbg !2252
  tail call void @llvm.dbg.value(metadata i32 %3266, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3266, i32* %51, align 4, !dbg !2252, !tbaa !1019
  %3267 = add i32 %3266, -1933114872, !dbg !2252
  %3268 = add i32 %3267, %3035, !dbg !2252
  %3269 = add i32 %3268, %3243, !dbg !2252
  %3270 = add i32 %3269, %3240, !dbg !2252
  tail call void @llvm.dbg.value(metadata i32 %3270, i64 0, metadata !2021, metadata !800), !dbg !2076
  %3271 = add i32 %3270, %3036, !dbg !2252
  tail call void @llvm.dbg.value(metadata i32 %3271, i64 0, metadata !2009, metadata !800), !dbg !2035
  %3272 = add i32 %3229, %3270, !dbg !2252
  tail call void @llvm.dbg.value(metadata i32 %3272, i64 0, metadata !2013, metadata !800), !dbg !2043
  %3273 = shl i32 %3272, 30, !dbg !2255
  %3274 = lshr i32 %3272, 2, !dbg !2255
  %3275 = or i32 %3273, %3274, !dbg !2255
  %3276 = shl i32 %3272, 19, !dbg !2255
  %3277 = lshr i32 %3272, 13, !dbg !2255
  %3278 = or i32 %3276, %3277, !dbg !2255
  %3279 = xor i32 %3275, %3278, !dbg !2255
  %3280 = shl i32 %3272, 10, !dbg !2255
  %3281 = lshr i32 %3272, 22, !dbg !2255
  %3282 = or i32 %3280, %3281, !dbg !2255
  %3283 = xor i32 %3279, %3282, !dbg !2255
  %3284 = and i32 %3272, %3213, !dbg !2255
  %3285 = or i32 %3272, %3213, !dbg !2255
  %3286 = and i32 %3285, %3154, !dbg !2255
  %3287 = or i32 %3286, %3284, !dbg !2255
  %3288 = add i32 %3283, %3287, !dbg !2255
  tail call void @llvm.dbg.value(metadata i32 %3288, i64 0, metadata !2020, metadata !800), !dbg !2075
  %3289 = shl i32 %3271, 26, !dbg !2255
  %3290 = lshr i32 %3271, 6, !dbg !2255
  %3291 = or i32 %3289, %3290, !dbg !2255
  %3292 = shl i32 %3271, 21, !dbg !2255
  %3293 = lshr i32 %3271, 11, !dbg !2255
  %3294 = or i32 %3292, %3293, !dbg !2255
  %3295 = xor i32 %3291, %3294, !dbg !2255
  %3296 = shl i32 %3271, 7, !dbg !2255
  %3297 = lshr i32 %3271, 25, !dbg !2255
  %3298 = or i32 %3296, %3297, !dbg !2255
  %3299 = xor i32 %3295, %3298, !dbg !2255
  %3300 = xor i32 %3212, %3153, !dbg !2255
  %3301 = and i32 %3271, %3300, !dbg !2255
  %3302 = xor i32 %3301, %3153, !dbg !2255
  %3303 = shl i32 %3207, 15, !dbg !2255
  %3304 = lshr i32 %3207, 17, !dbg !2255
  %3305 = or i32 %3303, %3304, !dbg !2255
  %3306 = shl i32 %3207, 13, !dbg !2255
  %3307 = lshr i32 %3207, 19, !dbg !2255
  %3308 = or i32 %3306, %3307, !dbg !2255
  %3309 = lshr i32 %3207, 10, !dbg !2255
  %3310 = xor i32 %3308, %3309, !dbg !2255
  %3311 = xor i32 %3310, %3305, !dbg !2255
  %3312 = load i32, i32* %45, align 4, !dbg !2255, !tbaa !1019
  %3313 = load i32, i32* %53, align 4, !dbg !2255, !tbaa !1019
  %3314 = shl i32 %3313, 25, !dbg !2255
  %3315 = lshr i32 %3313, 7, !dbg !2255
  %3316 = or i32 %3314, %3315, !dbg !2255
  %3317 = shl i32 %3313, 14, !dbg !2255
  %3318 = lshr i32 %3313, 18, !dbg !2255
  %3319 = or i32 %3317, %3318, !dbg !2255
  %3320 = lshr i32 %3313, 3, !dbg !2255
  %3321 = xor i32 %3319, %3320, !dbg !2255
  %3322 = xor i32 %3321, %3316, !dbg !2255
  %3323 = add i32 %3254, %3312, !dbg !2255
  %3324 = add i32 %3323, %3311, !dbg !2255
  %3325 = add i32 %3324, %3322, !dbg !2255
  tail call void @llvm.dbg.value(metadata i32 %3325, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3325, i32* %52, align 16, !dbg !2255, !tbaa !1019
  %3326 = add i32 %3325, -1866530822, !dbg !2255
  %3327 = add i32 %3326, %3094, !dbg !2255
  %3328 = add i32 %3327, %3302, !dbg !2255
  %3329 = add i32 %3328, %3299, !dbg !2255
  tail call void @llvm.dbg.value(metadata i32 %3329, i64 0, metadata !2021, metadata !800), !dbg !2076
  %3330 = add i32 %3329, %3095, !dbg !2255
  tail call void @llvm.dbg.value(metadata i32 %3330, i64 0, metadata !2016, metadata !800), !dbg !2049
  %3331 = add i32 %3288, %3329, !dbg !2255
  tail call void @llvm.dbg.value(metadata i32 %3331, i64 0, metadata !2012, metadata !800), !dbg !2041
  %3332 = shl i32 %3331, 30, !dbg !2258
  %3333 = lshr i32 %3331, 2, !dbg !2258
  %3334 = or i32 %3332, %3333, !dbg !2258
  %3335 = shl i32 %3331, 19, !dbg !2258
  %3336 = lshr i32 %3331, 13, !dbg !2258
  %3337 = or i32 %3335, %3336, !dbg !2258
  %3338 = xor i32 %3334, %3337, !dbg !2258
  %3339 = shl i32 %3331, 10, !dbg !2258
  %3340 = lshr i32 %3331, 22, !dbg !2258
  %3341 = or i32 %3339, %3340, !dbg !2258
  %3342 = xor i32 %3338, %3341, !dbg !2258
  %3343 = and i32 %3331, %3272, !dbg !2258
  %3344 = or i32 %3331, %3272, !dbg !2258
  %3345 = and i32 %3344, %3213, !dbg !2258
  %3346 = or i32 %3345, %3343, !dbg !2258
  %3347 = add i32 %3342, %3346, !dbg !2258
  tail call void @llvm.dbg.value(metadata i32 %3347, i64 0, metadata !2020, metadata !800), !dbg !2075
  %3348 = shl i32 %3330, 26, !dbg !2258
  %3349 = lshr i32 %3330, 6, !dbg !2258
  %3350 = or i32 %3348, %3349, !dbg !2258
  %3351 = shl i32 %3330, 21, !dbg !2258
  %3352 = lshr i32 %3330, 11, !dbg !2258
  %3353 = or i32 %3351, %3352, !dbg !2258
  %3354 = xor i32 %3350, %3353, !dbg !2258
  %3355 = shl i32 %3330, 7, !dbg !2258
  %3356 = lshr i32 %3330, 25, !dbg !2258
  %3357 = or i32 %3355, %3356, !dbg !2258
  %3358 = xor i32 %3354, %3357, !dbg !2258
  %3359 = xor i32 %3271, %3212, !dbg !2258
  %3360 = and i32 %3330, %3359, !dbg !2258
  %3361 = xor i32 %3360, %3212, !dbg !2258
  %3362 = shl i32 %3266, 15, !dbg !2258
  %3363 = lshr i32 %3266, 17, !dbg !2258
  %3364 = or i32 %3362, %3363, !dbg !2258
  %3365 = shl i32 %3266, 13, !dbg !2258
  %3366 = lshr i32 %3266, 19, !dbg !2258
  %3367 = or i32 %3365, %3366, !dbg !2258
  %3368 = lshr i32 %3266, 10, !dbg !2258
  %3369 = xor i32 %3367, %3368, !dbg !2258
  %3370 = xor i32 %3369, %3364, !dbg !2258
  %3371 = load i32, i32* %46, align 8, !dbg !2258, !tbaa !1019
  %3372 = load i32, i32* %54, align 8, !dbg !2258, !tbaa !1019
  %3373 = shl i32 %3372, 25, !dbg !2258
  %3374 = lshr i32 %3372, 7, !dbg !2258
  %3375 = or i32 %3373, %3374, !dbg !2258
  %3376 = shl i32 %3372, 14, !dbg !2258
  %3377 = lshr i32 %3372, 18, !dbg !2258
  %3378 = or i32 %3376, %3377, !dbg !2258
  %3379 = lshr i32 %3372, 3, !dbg !2258
  %3380 = xor i32 %3378, %3379, !dbg !2258
  %3381 = xor i32 %3380, %3375, !dbg !2258
  %3382 = add i32 %3313, %3371, !dbg !2258
  %3383 = add i32 %3382, %3370, !dbg !2258
  %3384 = add i32 %3383, %3381, !dbg !2258
  tail call void @llvm.dbg.value(metadata i32 %3384, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3384, i32* %53, align 4, !dbg !2258, !tbaa !1019
  %3385 = add i32 %3384, -1538233109, !dbg !2258
  %3386 = add i32 %3385, %3153, !dbg !2258
  %3387 = add i32 %3386, %3361, !dbg !2258
  %3388 = add i32 %3387, %3358, !dbg !2258
  tail call void @llvm.dbg.value(metadata i32 %3388, i64 0, metadata !2021, metadata !800), !dbg !2076
  %3389 = add i32 %3388, %3154, !dbg !2258
  tail call void @llvm.dbg.value(metadata i32 %3389, i64 0, metadata !2015, metadata !800), !dbg !2047
  %3390 = add i32 %3347, %3388, !dbg !2258
  tail call void @llvm.dbg.value(metadata i32 %3390, i64 0, metadata !2011, metadata !800), !dbg !2039
  %3391 = shl i32 %3390, 30, !dbg !2261
  %3392 = lshr i32 %3390, 2, !dbg !2261
  %3393 = or i32 %3391, %3392, !dbg !2261
  %3394 = shl i32 %3390, 19, !dbg !2261
  %3395 = lshr i32 %3390, 13, !dbg !2261
  %3396 = or i32 %3394, %3395, !dbg !2261
  %3397 = xor i32 %3393, %3396, !dbg !2261
  %3398 = shl i32 %3390, 10, !dbg !2261
  %3399 = lshr i32 %3390, 22, !dbg !2261
  %3400 = or i32 %3398, %3399, !dbg !2261
  %3401 = xor i32 %3397, %3400, !dbg !2261
  %3402 = and i32 %3390, %3331, !dbg !2261
  %3403 = or i32 %3390, %3331, !dbg !2261
  %3404 = and i32 %3403, %3272, !dbg !2261
  %3405 = or i32 %3404, %3402, !dbg !2261
  %3406 = add i32 %3401, %3405, !dbg !2261
  tail call void @llvm.dbg.value(metadata i32 %3406, i64 0, metadata !2020, metadata !800), !dbg !2075
  %3407 = shl i32 %3389, 26, !dbg !2261
  %3408 = lshr i32 %3389, 6, !dbg !2261
  %3409 = or i32 %3407, %3408, !dbg !2261
  %3410 = shl i32 %3389, 21, !dbg !2261
  %3411 = lshr i32 %3389, 11, !dbg !2261
  %3412 = or i32 %3410, %3411, !dbg !2261
  %3413 = xor i32 %3409, %3412, !dbg !2261
  %3414 = shl i32 %3389, 7, !dbg !2261
  %3415 = lshr i32 %3389, 25, !dbg !2261
  %3416 = or i32 %3414, %3415, !dbg !2261
  %3417 = xor i32 %3413, %3416, !dbg !2261
  %3418 = xor i32 %3330, %3271, !dbg !2261
  %3419 = and i32 %3389, %3418, !dbg !2261
  %3420 = xor i32 %3419, %3271, !dbg !2261
  %3421 = shl i32 %3325, 15, !dbg !2261
  %3422 = lshr i32 %3325, 17, !dbg !2261
  %3423 = or i32 %3421, %3422, !dbg !2261
  %3424 = shl i32 %3325, 13, !dbg !2261
  %3425 = lshr i32 %3325, 19, !dbg !2261
  %3426 = or i32 %3424, %3425, !dbg !2261
  %3427 = lshr i32 %3325, 10, !dbg !2261
  %3428 = xor i32 %3426, %3427, !dbg !2261
  %3429 = xor i32 %3428, %3423, !dbg !2261
  %3430 = load i32, i32* %47, align 4, !dbg !2261, !tbaa !1019
  %3431 = load i32, i32* %55, align 4, !dbg !2261, !tbaa !1019
  %3432 = shl i32 %3431, 25, !dbg !2261
  %3433 = lshr i32 %3431, 7, !dbg !2261
  %3434 = or i32 %3432, %3433, !dbg !2261
  %3435 = shl i32 %3431, 14, !dbg !2261
  %3436 = lshr i32 %3431, 18, !dbg !2261
  %3437 = or i32 %3435, %3436, !dbg !2261
  %3438 = lshr i32 %3431, 3, !dbg !2261
  %3439 = xor i32 %3437, %3438, !dbg !2261
  %3440 = xor i32 %3439, %3434, !dbg !2261
  %3441 = add i32 %3372, %3430, !dbg !2261
  %3442 = add i32 %3441, %3429, !dbg !2261
  %3443 = add i32 %3442, %3440, !dbg !2261
  tail call void @llvm.dbg.value(metadata i32 %3443, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3443, i32* %54, align 8, !dbg !2261, !tbaa !1019
  %3444 = add i32 %3443, -1090935817, !dbg !2261
  %3445 = add i32 %3444, %3212, !dbg !2261
  %3446 = add i32 %3445, %3420, !dbg !2261
  %3447 = add i32 %3446, %3417, !dbg !2261
  tail call void @llvm.dbg.value(metadata i32 %3447, i64 0, metadata !2021, metadata !800), !dbg !2076
  %3448 = add i32 %3447, %3213, !dbg !2261
  tail call void @llvm.dbg.value(metadata i32 %3448, i64 0, metadata !2014, metadata !800), !dbg !2045
  %3449 = add i32 %3406, %3447, !dbg !2261
  tail call void @llvm.dbg.value(metadata i32 %3449, i64 0, metadata !2010, metadata !800), !dbg !2037
  %3450 = shl i32 %3449, 30, !dbg !2264
  %3451 = lshr i32 %3449, 2, !dbg !2264
  %3452 = or i32 %3450, %3451, !dbg !2264
  %3453 = shl i32 %3449, 19, !dbg !2264
  %3454 = lshr i32 %3449, 13, !dbg !2264
  %3455 = or i32 %3453, %3454, !dbg !2264
  %3456 = xor i32 %3452, %3455, !dbg !2264
  %3457 = shl i32 %3449, 10, !dbg !2264
  %3458 = lshr i32 %3449, 22, !dbg !2264
  %3459 = or i32 %3457, %3458, !dbg !2264
  %3460 = xor i32 %3456, %3459, !dbg !2264
  %3461 = and i32 %3449, %3390, !dbg !2264
  %3462 = or i32 %3449, %3390, !dbg !2264
  %3463 = and i32 %3462, %3331, !dbg !2264
  %3464 = or i32 %3463, %3461, !dbg !2264
  tail call void @llvm.dbg.value(metadata i32 %3507, i64 0, metadata !2020, metadata !800), !dbg !2075
  %3465 = shl i32 %3448, 26, !dbg !2264
  %3466 = lshr i32 %3448, 6, !dbg !2264
  %3467 = or i32 %3465, %3466, !dbg !2264
  %3468 = shl i32 %3448, 21, !dbg !2264
  %3469 = lshr i32 %3448, 11, !dbg !2264
  %3470 = or i32 %3468, %3469, !dbg !2264
  %3471 = xor i32 %3467, %3470, !dbg !2264
  %3472 = shl i32 %3448, 7, !dbg !2264
  %3473 = lshr i32 %3448, 25, !dbg !2264
  %3474 = or i32 %3472, %3473, !dbg !2264
  %3475 = xor i32 %3471, %3474, !dbg !2264
  %3476 = xor i32 %3389, %3330, !dbg !2264
  %3477 = and i32 %3448, %3476, !dbg !2264
  %3478 = xor i32 %3477, %3330, !dbg !2264
  %3479 = shl i32 %3384, 15, !dbg !2264
  %3480 = lshr i32 %3384, 17, !dbg !2264
  %3481 = or i32 %3479, %3480, !dbg !2264
  %3482 = shl i32 %3384, 13, !dbg !2264
  %3483 = lshr i32 %3384, 19, !dbg !2264
  %3484 = or i32 %3482, %3483, !dbg !2264
  %3485 = lshr i32 %3384, 10, !dbg !2264
  %3486 = xor i32 %3484, %3485, !dbg !2264
  %3487 = xor i32 %3486, %3481, !dbg !2264
  %3488 = load i32, i32* %48, align 16, !dbg !2264, !tbaa !1019
  %3489 = load i32, i32* %40, align 16, !dbg !2264, !tbaa !1019
  %3490 = shl i32 %3489, 25, !dbg !2264
  %3491 = lshr i32 %3489, 7, !dbg !2264
  %3492 = or i32 %3490, %3491, !dbg !2264
  %3493 = shl i32 %3489, 14, !dbg !2264
  %3494 = lshr i32 %3489, 18, !dbg !2264
  %3495 = or i32 %3493, %3494, !dbg !2264
  %3496 = lshr i32 %3489, 3, !dbg !2264
  %3497 = xor i32 %3495, %3496, !dbg !2264
  %3498 = xor i32 %3497, %3492, !dbg !2264
  %3499 = add i32 %3431, %3488, !dbg !2264
  %3500 = add i32 %3499, %3487, !dbg !2264
  %3501 = add i32 %3500, %3498, !dbg !2264
  tail call void @llvm.dbg.value(metadata i32 %3501, i64 0, metadata !2018, metadata !800), !dbg !2125
  store i32 %3501, i32* %55, align 4, !dbg !2264, !tbaa !1019
  %3502 = add i32 %3501, -965641998, !dbg !2264
  %3503 = add i32 %3502, %3271, !dbg !2264
  %3504 = add i32 %3503, %3478, !dbg !2264
  %3505 = add i32 %3504, %3475, !dbg !2264
  tail call void @llvm.dbg.value(metadata i32 %3505, i64 0, metadata !2021, metadata !800), !dbg !2076
  tail call void @llvm.dbg.value(metadata i32 %3517, i64 0, metadata !2013, metadata !800), !dbg !2043
  tail call void @llvm.dbg.value(metadata i32 %3508, i64 0, metadata !2009, metadata !800), !dbg !2035
  %3506 = load i32, i32* %9, align 8, !dbg !2267, !tbaa !1019
  %3507 = add i32 %3464, %3506, !dbg !2264
  %3508 = add i32 %3507, %3460, !dbg !2264
  %3509 = add i32 %3508, %3505, !dbg !2267
  store i32 %3509, i32* %9, align 8, !dbg !2267, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3509, i64 0, metadata !2009, metadata !800), !dbg !2035
  %3510 = load i32, i32* %11, align 4, !dbg !2268, !tbaa !1019
  %3511 = add i32 %3449, %3510, !dbg !2268
  store i32 %3511, i32* %11, align 4, !dbg !2268, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3511, i64 0, metadata !2010, metadata !800), !dbg !2037
  %3512 = load i32, i32* %13, align 8, !dbg !2269, !tbaa !1019
  %3513 = add i32 %3390, %3512, !dbg !2269
  store i32 %3513, i32* %13, align 8, !dbg !2269, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3513, i64 0, metadata !2011, metadata !800), !dbg !2039
  %3514 = load i32, i32* %15, align 4, !dbg !2270, !tbaa !1019
  %3515 = add i32 %3331, %3514, !dbg !2270
  store i32 %3515, i32* %15, align 4, !dbg !2270, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3515, i64 0, metadata !2012, metadata !800), !dbg !2041
  %3516 = load i32, i32* %17, align 8, !dbg !2271, !tbaa !1019
  %3517 = add i32 %3272, %3516, !dbg !2264
  %3518 = add i32 %3517, %3505, !dbg !2271
  store i32 %3518, i32* %17, align 8, !dbg !2271, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3518, i64 0, metadata !2013, metadata !800), !dbg !2043
  %3519 = load i32, i32* %19, align 4, !dbg !2272, !tbaa !1019
  %3520 = add i32 %3448, %3519, !dbg !2272
  store i32 %3520, i32* %19, align 4, !dbg !2272, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3520, i64 0, metadata !2014, metadata !800), !dbg !2045
  %3521 = load i32, i32* %21, align 8, !dbg !2273, !tbaa !1019
  %3522 = add i32 %3389, %3521, !dbg !2273
  store i32 %3522, i32* %21, align 8, !dbg !2273, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3522, i64 0, metadata !2015, metadata !800), !dbg !2047
  %3523 = load i32, i32* %23, align 4, !dbg !2274, !tbaa !1019
  %3524 = add i32 %3330, %3523, !dbg !2274
  store i32 %3524, i32* %23, align 4, !dbg !2274, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3524, i64 0, metadata !2016, metadata !800), !dbg !2049
  tail call void @llvm.dbg.value(metadata i32 %3509, i64 0, metadata !2009, metadata !800), !dbg !2035
  tail call void @llvm.dbg.value(metadata i32 %3511, i64 0, metadata !2010, metadata !800), !dbg !2037
  tail call void @llvm.dbg.value(metadata i32 %3513, i64 0, metadata !2011, metadata !800), !dbg !2039
  tail call void @llvm.dbg.value(metadata i32 %3524, i64 0, metadata !2016, metadata !800), !dbg !2049
  tail call void @llvm.dbg.value(metadata i32 %3522, i64 0, metadata !2015, metadata !800), !dbg !2047
  tail call void @llvm.dbg.value(metadata i32 %3520, i64 0, metadata !2014, metadata !800), !dbg !2045
  tail call void @llvm.dbg.value(metadata i32 %3518, i64 0, metadata !2013, metadata !800), !dbg !2043
  tail call void @llvm.dbg.value(metadata i32 %3515, i64 0, metadata !2012, metadata !800), !dbg !2041
  %3525 = icmp ult i32* %85, %7, !dbg !2060
  br i1 %3525, label %60, label %3526, !dbg !2062, !llvm.loop !2275

; <label>:3526:                                   ; preds = %60
  br label %3527, !dbg !2278

; <label>:3527:                                   ; preds = %3526, %3
  call void @llvm.lifetime.end(i64 64, i8* nonnull %8) #10, !dbg !2278
  ret void, !dbg !2278
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.bswap.v4i32(<4 x i32>) #1

; Function Attrs: nounwind sspstrong uwtable
define i8* @sha224_finish_ctx(%struct.sha256_ctx*, i8* returned) local_unnamed_addr #6 !dbg !2279 {
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !2281, metadata !800), !dbg !2283
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2282, metadata !800), !dbg !2284
  tail call fastcc void @sha256_conclude_ctx(%struct.sha256_ctx* %0), !dbg !2285
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %0, i64 0, metadata !1919, metadata !800) #10, !dbg !2286
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1920, metadata !800) #10, !dbg !2288
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1922, metadata !800) #10, !dbg !2289
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1921, metadata !800) #10, !dbg !2290
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1921, metadata !800) #10, !dbg !2290
  %3 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 0, !dbg !2291
  %4 = load i32, i32* %3, align 4, !dbg !2291, !tbaa !1019
  %5 = tail call i32 @llvm.bswap.i32(i32 %4) #10, !dbg !2291
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2292
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !2294
  %6 = bitcast i8* %1 to i32*, !dbg !2295
  store i32 %5, i32* %6, align 1, !dbg !2295
  %7 = getelementptr inbounds i8, i8* %1, i64 4, !dbg !2296
  %8 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 1, !dbg !2291
  %9 = load i32, i32* %8, align 4, !dbg !2291, !tbaa !1019
  %10 = tail call i32 @llvm.bswap.i32(i32 %9) #10, !dbg !2291
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2292
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !2294
  %11 = bitcast i8* %7 to i32*, !dbg !2295
  store i32 %10, i32* %11, align 1, !dbg !2295
  %12 = getelementptr inbounds i8, i8* %1, i64 8, !dbg !2296
  %13 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 2, !dbg !2291
  %14 = load i32, i32* %13, align 4, !dbg !2291, !tbaa !1019
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #10, !dbg !2291
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2292
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !2294
  %16 = bitcast i8* %12 to i32*, !dbg !2295
  store i32 %15, i32* %16, align 1, !dbg !2295
  %17 = getelementptr inbounds i8, i8* %1, i64 12, !dbg !2296
  %18 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 3, !dbg !2291
  %19 = load i32, i32* %18, align 4, !dbg !2291, !tbaa !1019
  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #10, !dbg !2291
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2292
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !2294
  %21 = bitcast i8* %17 to i32*, !dbg !2295
  store i32 %20, i32* %21, align 1, !dbg !2295
  %22 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !2296
  %23 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 4, !dbg !2291
  %24 = load i32, i32* %23, align 4, !dbg !2291, !tbaa !1019
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #10, !dbg !2291
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2292
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !2294
  %26 = bitcast i8* %22 to i32*, !dbg !2295
  store i32 %25, i32* %26, align 1, !dbg !2295
  %27 = getelementptr inbounds i8, i8* %1, i64 20, !dbg !2296
  %28 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 5, !dbg !2291
  %29 = load i32, i32* %28, align 4, !dbg !2291, !tbaa !1019
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #10, !dbg !2291
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2292
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !2294
  %31 = bitcast i8* %27 to i32*, !dbg !2295
  store i32 %30, i32* %31, align 1, !dbg !2295
  %32 = getelementptr inbounds i8, i8* %1, i64 24, !dbg !2296
  %33 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %0, i64 0, i32 0, i64 6, !dbg !2291
  %34 = load i32, i32* %33, align 4, !dbg !2291, !tbaa !1019
  %35 = tail call i32 @llvm.bswap.i32(i32 %34) #10, !dbg !2291
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2292
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !1910, metadata !800) #10, !dbg !2294
  %36 = bitcast i8* %32 to i32*, !dbg !2295
  store i32 %35, i32* %36, align 1, !dbg !2295
  ret i8* %1, !dbg !2297
}

; Function Attrs: nounwind sspstrong uwtable
define i32 @sha256_stream(%struct._IO_FILE*, i8* nocapture) local_unnamed_addr #6 !dbg !2298 {
  %3 = alloca %struct.sha256_ctx, align 16
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !2342, metadata !800), !dbg !2349
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2343, metadata !800), !dbg !2350
  %4 = bitcast %struct.sha256_ctx* %3 to i8*, !dbg !2351
  call void @llvm.lifetime.start(i64 176, i8* nonnull %4) #10, !dbg !2351
  %5 = tail call noalias i8* @malloc(i64 32840) #10, !dbg !2352
  tail call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !2346, metadata !800), !dbg !2353
  %6 = icmp eq i8* %5, null, !dbg !2354
  br i1 %6, label %47, label %7, !dbg !2356

; <label>:7:                                      ; preds = %2
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2344, metadata !1105), !dbg !2357
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !1870, metadata !800) #10, !dbg !2358
  %8 = bitcast %struct.sha256_ctx* %3 to <4 x i32>*, !dbg !2360
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %8, align 16, !dbg !2360, !tbaa !1019
  %9 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %3, i64 0, i32 0, i64 4, !dbg !2361
  %10 = bitcast i32* %9 to <4 x i32>*, !dbg !2362
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %10, align 16, !dbg !2362, !tbaa !1019
  %11 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %3, i64 0, i32 1, i64 0, !dbg !2363
  %12 = bitcast i32* %11 to i8*, !dbg !2364
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 16, i32 16, i1 false) #10, !dbg !2365
  %13 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 0
  br label %14, !dbg !2366

; <label>:14:                                     ; preds = %32, %7
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !2345, metadata !800), !dbg !2367
  br label %15, !dbg !2368

; <label>:15:                                     ; preds = %29, %14
  %16 = phi i64 [ 0, %14 ], [ %20, %29 ]
  tail call void @llvm.dbg.value(metadata i64 %16, i64 0, metadata !2345, metadata !800), !dbg !2367
  %17 = getelementptr inbounds i8, i8* %5, i64 %16, !dbg !2369
  %18 = sub i64 32768, %16, !dbg !2369
  %19 = tail call i64 @fread_unlocked(i8* %17, i64 1, i64 %18, %struct._IO_FILE* %0) #10, !dbg !2369
  tail call void @llvm.dbg.value(metadata i64 %19, i64 0, metadata !2347, metadata !800), !dbg !2371
  %20 = add i64 %19, %16, !dbg !2372
  tail call void @llvm.dbg.value(metadata i64 %20, i64 0, metadata !2345, metadata !800), !dbg !2367
  %21 = icmp eq i64 %20, 32768, !dbg !2373
  br i1 %21, label %32, label %22, !dbg !2375

; <label>:22:                                     ; preds = %15
  %23 = icmp eq i64 %19, 0, !dbg !2376
  %24 = load i32, i32* %13, align 8, !tbaa !1497
  br i1 %23, label %25, label %29, !dbg !2378

; <label>:25:                                     ; preds = %22
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !2379, metadata !800), !dbg !2384
  %26 = and i32 %24, 32, !dbg !2388
  %27 = icmp eq i32 %26, 0, !dbg !2389
  br i1 %27, label %34, label %28, !dbg !2390

; <label>:28:                                     ; preds = %25
  tail call void @free(i8* %5) #10, !dbg !2391
  br label %47

; <label>:29:                                     ; preds = %22
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !2393, metadata !800), !dbg !2396
  %30 = and i32 %24, 16, !dbg !2399
  %31 = icmp eq i32 %30, 0, !dbg !2400
  br i1 %31, label %15, label %33, !dbg !2401, !llvm.loop !2402

; <label>:32:                                     ; preds = %15
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2344, metadata !1105), !dbg !2357
  call void @sha256_process_block(i8* nonnull %5, i64 32768, %struct.sha256_ctx* nonnull %3), !dbg !2404
  br label %14

; <label>:33:                                     ; preds = %29
  br label %34, !dbg !2405

; <label>:34:                                     ; preds = %33, %25
  %35 = icmp eq i64 %20, 0, !dbg !2405
  br i1 %35, label %37, label %36, !dbg !2407

; <label>:36:                                     ; preds = %34
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2344, metadata !1105), !dbg !2357
  call void @sha256_process_bytes(i8* nonnull %5, i64 %20, %struct.sha256_ctx* nonnull %3), !dbg !2408
  br label %37, !dbg !2408

; <label>:37:                                     ; preds = %34, %36
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2344, metadata !1105), !dbg !2357
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !1940, metadata !800) #10, !dbg !2409
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1941, metadata !800) #10, !dbg !2411
  call fastcc void @sha256_conclude_ctx(%struct.sha256_ctx* nonnull %3) #10, !dbg !2412
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !1894, metadata !800) #10, !dbg !2413
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1895, metadata !800) #10, !dbg !2415
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1897, metadata !800) #10, !dbg !2416
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1896, metadata !800) #10, !dbg !2417
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1896, metadata !800) #10, !dbg !2417
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2420
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2420
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2420
  %38 = bitcast %struct.sha256_ctx* %3 to <4 x i32>*, !dbg !2421
  %39 = load <4 x i32>, <4 x i32>* %38, align 16, !dbg !2421, !tbaa !1019
  %40 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %39), !dbg !2421
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2420
  %41 = bitcast i8* %1 to <4 x i32>*, !dbg !2422
  store <4 x i32> %40, <4 x i32>* %41, align 1, !dbg !2422
  %42 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !2423
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2420
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2420
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2420
  %43 = bitcast i32* %9 to <4 x i32>*, !dbg !2421
  %44 = load <4 x i32>, <4 x i32>* %43, align 16, !dbg !2421, !tbaa !1019
  %45 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %44), !dbg !2421
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2418
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2420
  %46 = bitcast i8* %42 to <4 x i32>*, !dbg !2422
  store <4 x i32> %45, <4 x i32>* %46, align 1, !dbg !2422
  call void @free(i8* %5) #10, !dbg !2424
  br label %47, !dbg !2425

; <label>:47:                                     ; preds = %28, %2, %37
  %48 = phi i32 [ 0, %37 ], [ 1, %2 ], [ 1, %28 ]
  call void @llvm.lifetime.end(i64 176, i8* nonnull %4) #10, !dbg !2426
  ret i32 %48, !dbg !2426
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define void @sha256_process_bytes(i8* readonly, i64, %struct.sha256_ctx*) local_unnamed_addr #6 !dbg !2427 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2429, metadata !800), !dbg !2439
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !2430, metadata !800), !dbg !2440
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %2, i64 0, metadata !2431, metadata !800), !dbg !2441
  %4 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 2, !dbg !2442
  %5 = load i64, i64* %4, align 8, !dbg !2442, !tbaa !1964
  %6 = icmp eq i64 %5, 0, !dbg !2443
  br i1 %6, label %27, label %7, !dbg !2444

; <label>:7:                                      ; preds = %3
  tail call void @llvm.dbg.value(metadata i64 %5, i64 0, metadata !2432, metadata !800), !dbg !2445
  %8 = sub i64 128, %5, !dbg !2446
  %9 = icmp ugt i64 %8, %1, !dbg !2447
  %10 = select i1 %9, i64 %1, i64 %8, !dbg !2448
  tail call void @llvm.dbg.value(metadata i64 %10, i64 0, metadata !2435, metadata !800), !dbg !2449
  %11 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 3, i64 0, !dbg !2450
  %12 = bitcast i32* %11 to i8*, !dbg !2450
  %13 = getelementptr inbounds i8, i8* %12, i64 %5, !dbg !2450
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %0, i64 %10, i32 1, i1 false), !dbg !2451
  %14 = load i64, i64* %4, align 8, !dbg !2452, !tbaa !1964
  %15 = add i64 %14, %10, !dbg !2452
  store i64 %15, i64* %4, align 8, !dbg !2452, !tbaa !1964
  %16 = icmp ugt i64 %15, 64, !dbg !2453
  br i1 %16, label %17, label %24, !dbg !2455

; <label>:17:                                     ; preds = %7
  %18 = and i64 %15, -64, !dbg !2456
  tail call void @sha256_process_block(i8* %12, i64 %18, %struct.sha256_ctx* nonnull %2), !dbg !2458
  %19 = load i64, i64* %4, align 8, !dbg !2459, !tbaa !1964
  %20 = and i64 %19, 63, !dbg !2459
  store i64 %20, i64* %4, align 8, !dbg !2459, !tbaa !1964
  %21 = add i64 %10, %5, !dbg !2460
  %22 = and i64 %21, -64, !dbg !2461
  %23 = getelementptr inbounds i8, i8* %12, i64 %22, !dbg !2462
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %23, i64 %20, i32 1, i1 false), !dbg !2463
  br label %24, !dbg !2464

; <label>:24:                                     ; preds = %17, %7
  %25 = getelementptr inbounds i8, i8* %0, i64 %10, !dbg !2465
  tail call void @llvm.dbg.value(metadata i8* %25, i64 0, metadata !2429, metadata !800), !dbg !2439
  %26 = sub i64 %1, %10, !dbg !2466
  tail call void @llvm.dbg.value(metadata i64 %26, i64 0, metadata !2430, metadata !800), !dbg !2440
  br label %27, !dbg !2467

; <label>:27:                                     ; preds = %3, %24
  %28 = phi i64 [ %26, %24 ], [ %1, %3 ]
  %29 = phi i8* [ %25, %24 ], [ %0, %3 ]
  tail call void @llvm.dbg.value(metadata i8* %29, i64 0, metadata !2429, metadata !800), !dbg !2439
  tail call void @llvm.dbg.value(metadata i64 %28, i64 0, metadata !2430, metadata !800), !dbg !2440
  %30 = icmp ugt i64 %28, 63, !dbg !2468
  br i1 %30, label %31, label %35, !dbg !2470

; <label>:31:                                     ; preds = %27
  %32 = and i64 %28, -64, !dbg !2471
  tail call void @sha256_process_block(i8* %29, i64 %32, %struct.sha256_ctx* nonnull %2), !dbg !2474
  %33 = getelementptr inbounds i8, i8* %29, i64 %32, !dbg !2475
  tail call void @llvm.dbg.value(metadata i8* %33, i64 0, metadata !2429, metadata !800), !dbg !2439
  %34 = and i64 %28, 63, !dbg !2476
  tail call void @llvm.dbg.value(metadata i64 %34, i64 0, metadata !2430, metadata !800), !dbg !2440
  br label %35, !dbg !2477

; <label>:35:                                     ; preds = %31, %27
  %36 = phi i64 [ %34, %31 ], [ %28, %27 ]
  %37 = phi i8* [ %33, %31 ], [ %29, %27 ]
  tail call void @llvm.dbg.value(metadata i8* %37, i64 0, metadata !2429, metadata !800), !dbg !2439
  tail call void @llvm.dbg.value(metadata i64 %36, i64 0, metadata !2430, metadata !800), !dbg !2440
  %38 = icmp eq i64 %36, 0, !dbg !2478
  br i1 %38, label %52, label %39, !dbg !2479

; <label>:39:                                     ; preds = %35
  %40 = load i64, i64* %4, align 8, !dbg !2480, !tbaa !1964
  tail call void @llvm.dbg.value(metadata i64 %40, i64 0, metadata !2436, metadata !800), !dbg !2481
  %41 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 3, !dbg !2482
  %42 = bitcast [32 x i32]* %41 to i8*, !dbg !2483
  %43 = getelementptr inbounds i8, i8* %42, i64 %40, !dbg !2483
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %37, i64 %36, i32 1, i1 false), !dbg !2484
  %44 = add i64 %40, %36, !dbg !2485
  tail call void @llvm.dbg.value(metadata i64 %44, i64 0, metadata !2436, metadata !800), !dbg !2481
  %45 = icmp ugt i64 %44, 63, !dbg !2486
  br i1 %45, label %46, label %50, !dbg !2488

; <label>:46:                                     ; preds = %39
  tail call void @sha256_process_block(i8* %42, i64 64, %struct.sha256_ctx* nonnull %2), !dbg !2489
  %47 = add i64 %44, -64, !dbg !2491
  tail call void @llvm.dbg.value(metadata i64 %47, i64 0, metadata !2436, metadata !800), !dbg !2481
  %48 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %2, i64 0, i32 3, i64 16, !dbg !2492
  %49 = bitcast i32* %48 to i8*, !dbg !2493
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %49, i64 %47, i32 8, i1 false), !dbg !2493
  br label %50, !dbg !2494

; <label>:50:                                     ; preds = %46, %39
  %51 = phi i64 [ %47, %46 ], [ %44, %39 ]
  tail call void @llvm.dbg.value(metadata i64 %51, i64 0, metadata !2436, metadata !800), !dbg !2481
  store i64 %51, i64* %4, align 8, !dbg !2495, !tbaa !1964
  br label %52, !dbg !2496

; <label>:52:                                     ; preds = %35, %50
  ret void, !dbg !2497
}

; Function Attrs: nounwind sspstrong uwtable
define i32 @sha224_stream(%struct._IO_FILE*, i8* nocapture) local_unnamed_addr #6 !dbg !2498 {
  %3 = alloca %struct.sha256_ctx, align 16
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !2500, metadata !800), !dbg !2507
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2501, metadata !800), !dbg !2508
  %4 = bitcast %struct.sha256_ctx* %3 to i8*, !dbg !2509
  call void @llvm.lifetime.start(i64 176, i8* nonnull %4) #10, !dbg !2509
  %5 = tail call noalias i8* @malloc(i64 32840) #10, !dbg !2510
  tail call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !2504, metadata !800), !dbg !2511
  %6 = icmp eq i8* %5, null, !dbg !2512
  br i1 %6, label %56, label %7, !dbg !2514

; <label>:7:                                      ; preds = %2
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2502, metadata !1105), !dbg !2515
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !1880, metadata !800) #10, !dbg !2516
  %8 = bitcast %struct.sha256_ctx* %3 to <4 x i32>*, !dbg !2518
  store <4 x i32> <i32 -1056596264, i32 914150663, i32 812702999, i32 -150054599>, <4 x i32>* %8, align 16, !dbg !2518, !tbaa !1019
  %9 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %3, i64 0, i32 0, i64 4, !dbg !2519
  %10 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %3, i64 0, i32 0, i64 5, !dbg !2520
  %11 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %3, i64 0, i32 0, i64 6, !dbg !2521
  %12 = bitcast i32* %9 to <4 x i32>*, !dbg !2522
  store <4 x i32> <i32 -4191439, i32 1750603025, i32 1694076839, i32 -1090891868>, <4 x i32>* %12, align 16, !dbg !2522, !tbaa !1019
  %13 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %3, i64 0, i32 1, i64 0, !dbg !2523
  %14 = bitcast i32* %13 to i8*, !dbg !2524
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 16, i32 16, i1 false) #10, !dbg !2525
  %15 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 0
  br label %16, !dbg !2526

; <label>:16:                                     ; preds = %34, %7
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !2503, metadata !800), !dbg !2527
  br label %17, !dbg !2528

; <label>:17:                                     ; preds = %31, %16
  %18 = phi i64 [ 0, %16 ], [ %22, %31 ]
  tail call void @llvm.dbg.value(metadata i64 %18, i64 0, metadata !2503, metadata !800), !dbg !2527
  %19 = getelementptr inbounds i8, i8* %5, i64 %18, !dbg !2529
  %20 = sub i64 32768, %18, !dbg !2529
  %21 = tail call i64 @fread_unlocked(i8* %19, i64 1, i64 %20, %struct._IO_FILE* %0) #10, !dbg !2529
  tail call void @llvm.dbg.value(metadata i64 %21, i64 0, metadata !2505, metadata !800), !dbg !2531
  %22 = add i64 %21, %18, !dbg !2532
  tail call void @llvm.dbg.value(metadata i64 %22, i64 0, metadata !2503, metadata !800), !dbg !2527
  %23 = icmp eq i64 %22, 32768, !dbg !2533
  br i1 %23, label %34, label %24, !dbg !2535

; <label>:24:                                     ; preds = %17
  %25 = icmp eq i64 %21, 0, !dbg !2536
  %26 = load i32, i32* %15, align 8, !tbaa !1497
  br i1 %25, label %27, label %31, !dbg !2538

; <label>:27:                                     ; preds = %24
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !2379, metadata !800), !dbg !2539
  %28 = and i32 %26, 32, !dbg !2543
  %29 = icmp eq i32 %28, 0, !dbg !2544
  br i1 %29, label %36, label %30, !dbg !2545

; <label>:30:                                     ; preds = %27
  tail call void @free(i8* %5) #10, !dbg !2546
  br label %56

; <label>:31:                                     ; preds = %24
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !2393, metadata !800), !dbg !2548
  %32 = and i32 %26, 16, !dbg !2551
  %33 = icmp eq i32 %32, 0, !dbg !2552
  br i1 %33, label %17, label %35, !dbg !2553, !llvm.loop !2554

; <label>:34:                                     ; preds = %17
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2502, metadata !1105), !dbg !2515
  call void @sha256_process_block(i8* nonnull %5, i64 32768, %struct.sha256_ctx* nonnull %3), !dbg !2556
  br label %16

; <label>:35:                                     ; preds = %31
  br label %36, !dbg !2557

; <label>:36:                                     ; preds = %35, %27
  %37 = icmp eq i64 %22, 0, !dbg !2557
  br i1 %37, label %39, label %38, !dbg !2559

; <label>:38:                                     ; preds = %36
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2502, metadata !1105), !dbg !2515
  call void @sha256_process_bytes(i8* nonnull %5, i64 %22, %struct.sha256_ctx* nonnull %3), !dbg !2560
  br label %39, !dbg !2560

; <label>:39:                                     ; preds = %36, %38
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2502, metadata !1105), !dbg !2515
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !2281, metadata !800) #10, !dbg !2561
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2282, metadata !800) #10, !dbg !2563
  call fastcc void @sha256_conclude_ctx(%struct.sha256_ctx* nonnull %3) #10, !dbg !2564
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %3, i64 0, metadata !1919, metadata !800) #10, !dbg !2565
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1920, metadata !800) #10, !dbg !2567
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1922, metadata !800) #10, !dbg !2568
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1921, metadata !800) #10, !dbg !2569
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1921, metadata !800) #10, !dbg !2569
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2570
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2572
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2570
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2572
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2570
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2572
  %40 = bitcast %struct.sha256_ctx* %3 to <4 x i32>*, !dbg !2573
  %41 = load <4 x i32>, <4 x i32>* %40, align 16, !dbg !2573, !tbaa !1019
  %42 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %41), !dbg !2573
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2570
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2572
  %43 = bitcast i8* %1 to <4 x i32>*, !dbg !2574
  store <4 x i32> %42, <4 x i32>* %43, align 1, !dbg !2574
  %44 = getelementptr inbounds i8, i8* %1, i64 16, !dbg !2575
  %45 = load i32, i32* %9, align 16, !dbg !2573, !tbaa !1019
  %46 = call i32 @llvm.bswap.i32(i32 %45) #10, !dbg !2573
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2570
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2572
  %47 = bitcast i8* %44 to i32*, !dbg !2574
  store i32 %46, i32* %47, align 1, !dbg !2574
  %48 = getelementptr inbounds i8, i8* %1, i64 20, !dbg !2575
  %49 = load i32, i32* %10, align 4, !dbg !2573, !tbaa !1019
  %50 = call i32 @llvm.bswap.i32(i32 %49) #10, !dbg !2573
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2570
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2572
  %51 = bitcast i8* %48 to i32*, !dbg !2574
  store i32 %50, i32* %51, align 1, !dbg !2574
  %52 = getelementptr inbounds i8, i8* %1, i64 24, !dbg !2575
  %53 = load i32, i32* %11, align 8, !dbg !2573, !tbaa !1019
  %54 = call i32 @llvm.bswap.i32(i32 %53) #10, !dbg !2573
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !1905, metadata !800) #10, !dbg !2570
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2572
  %55 = bitcast i8* %52 to i32*, !dbg !2574
  store i32 %54, i32* %55, align 1, !dbg !2574
  call void @free(i8* %5) #10, !dbg !2576
  br label %56, !dbg !2577

; <label>:56:                                     ; preds = %30, %2, %39
  %57 = phi i32 [ 0, %39 ], [ 1, %2 ], [ 1, %30 ]
  call void @llvm.lifetime.end(i64 176, i8* nonnull %4) #10, !dbg !2578
  ret i32 %57, !dbg !2578
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @sha256_buffer(i8* readonly, i64, i8* returned) local_unnamed_addr #6 !dbg !2579 {
  %4 = alloca %struct.sha256_ctx, align 16
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2583, metadata !800), !dbg !2587
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !2584, metadata !800), !dbg !2588
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2585, metadata !800), !dbg !2589
  %5 = bitcast %struct.sha256_ctx* %4 to i8*, !dbg !2590
  call void @llvm.lifetime.start(i64 176, i8* nonnull %5) #10, !dbg !2590
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !2586, metadata !1105), !dbg !2591
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !1870, metadata !800) #10, !dbg !2592
  %6 = bitcast %struct.sha256_ctx* %4 to <4 x i32>*, !dbg !2594
  store <4 x i32> <i32 1779033703, i32 -1150833019, i32 1013904242, i32 -1521486534>, <4 x i32>* %6, align 16, !dbg !2594, !tbaa !1019
  %7 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %4, i64 0, i32 0, i64 4, !dbg !2595
  %8 = bitcast i32* %7 to <4 x i32>*, !dbg !2596
  store <4 x i32> <i32 1359893119, i32 -1694144372, i32 528734635, i32 1541459225>, <4 x i32>* %8, align 16, !dbg !2596, !tbaa !1019
  %9 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %4, i64 0, i32 1, i64 0, !dbg !2597
  %10 = bitcast i32* %9 to i8*, !dbg !2598
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 16, i32 16, i1 false) #10, !dbg !2599
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !2586, metadata !1105), !dbg !2591
  call void @sha256_process_bytes(i8* %0, i64 %1, %struct.sha256_ctx* nonnull %4), !dbg !2600
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !2586, metadata !1105), !dbg !2591
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !1940, metadata !800) #10, !dbg !2601
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1941, metadata !800) #10, !dbg !2603
  call fastcc void @sha256_conclude_ctx(%struct.sha256_ctx* nonnull %4) #10, !dbg !2604
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !1894, metadata !800) #10, !dbg !2605
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1895, metadata !800) #10, !dbg !2607
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1897, metadata !800) #10, !dbg !2608
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1896, metadata !800) #10, !dbg !2609
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1896, metadata !800) #10, !dbg !2609
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2610
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2612
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2610
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2612
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2610
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2612
  %11 = bitcast %struct.sha256_ctx* %4 to <4 x i32>*, !dbg !2613
  %12 = load <4 x i32>, <4 x i32>* %11, align 16, !dbg !2613, !tbaa !1019
  %13 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %12), !dbg !2613
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2610
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2612
  %14 = bitcast i8* %2 to <4 x i32>*, !dbg !2614
  store <4 x i32> %13, <4 x i32>* %14, align 1, !dbg !2614
  %15 = getelementptr inbounds i8, i8* %2, i64 16, !dbg !2615
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2610
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2612
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2610
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2612
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2610
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2612
  %16 = bitcast i32* %7 to <4 x i32>*, !dbg !2613
  %17 = load <4 x i32>, <4 x i32>* %16, align 16, !dbg !2613, !tbaa !1019
  %18 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %17), !dbg !2613
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2610
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2612
  %19 = bitcast i8* %15 to <4 x i32>*, !dbg !2614
  store <4 x i32> %18, <4 x i32>* %19, align 1, !dbg !2614
  call void @llvm.lifetime.end(i64 176, i8* nonnull %5) #10, !dbg !2616
  ret i8* %2, !dbg !2617
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @sha224_buffer(i8* readonly, i64, i8* returned) local_unnamed_addr #6 !dbg !2618 {
  %4 = alloca %struct.sha256_ctx, align 16
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2620, metadata !800), !dbg !2624
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !2621, metadata !800), !dbg !2625
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2622, metadata !800), !dbg !2626
  %5 = bitcast %struct.sha256_ctx* %4 to i8*, !dbg !2627
  call void @llvm.lifetime.start(i64 176, i8* nonnull %5) #10, !dbg !2627
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !2623, metadata !1105), !dbg !2628
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !1880, metadata !800) #10, !dbg !2629
  %6 = bitcast %struct.sha256_ctx* %4 to <4 x i32>*, !dbg !2631
  store <4 x i32> <i32 -1056596264, i32 914150663, i32 812702999, i32 -150054599>, <4 x i32>* %6, align 16, !dbg !2631, !tbaa !1019
  %7 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %4, i64 0, i32 0, i64 4, !dbg !2632
  %8 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %4, i64 0, i32 0, i64 5, !dbg !2633
  %9 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %4, i64 0, i32 0, i64 6, !dbg !2634
  %10 = bitcast i32* %7 to <4 x i32>*, !dbg !2635
  store <4 x i32> <i32 -4191439, i32 1750603025, i32 1694076839, i32 -1090891868>, <4 x i32>* %10, align 16, !dbg !2635, !tbaa !1019
  %11 = getelementptr inbounds %struct.sha256_ctx, %struct.sha256_ctx* %4, i64 0, i32 1, i64 0, !dbg !2636
  %12 = bitcast i32* %11 to i8*, !dbg !2637
  call void @llvm.memset.p0i8.i64(i8* %12, i8 0, i64 16, i32 16, i1 false) #10, !dbg !2638
  tail call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !2623, metadata !1105), !dbg !2628
  call void @sha256_process_bytes(i8* %0, i64 %1, %struct.sha256_ctx* nonnull %4), !dbg !2639
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !2623, metadata !1105), !dbg !2628
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !2281, metadata !800) #10, !dbg !2640
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2282, metadata !800) #10, !dbg !2642
  call fastcc void @sha256_conclude_ctx(%struct.sha256_ctx* nonnull %4) #10, !dbg !2643
  call void @llvm.dbg.value(metadata %struct.sha256_ctx* %4, i64 0, metadata !1919, metadata !800) #10, !dbg !2644
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1920, metadata !800) #10, !dbg !2646
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1922, metadata !800) #10, !dbg !2647
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1921, metadata !800) #10, !dbg !2648
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1921, metadata !800) #10, !dbg !2648
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2649
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2651
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2649
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2651
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2649
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2651
  %13 = bitcast %struct.sha256_ctx* %4 to <4 x i32>*, !dbg !2652
  %14 = load <4 x i32>, <4 x i32>* %13, align 16, !dbg !2652, !tbaa !1019
  %15 = call <4 x i32> @llvm.bswap.v4i32(<4 x i32> %14), !dbg !2652
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2649
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2651
  %16 = bitcast i8* %2 to <4 x i32>*, !dbg !2653
  store <4 x i32> %15, <4 x i32>* %16, align 1, !dbg !2653
  %17 = getelementptr inbounds i8, i8* %2, i64 16, !dbg !2654
  %18 = load i32, i32* %7, align 16, !dbg !2652, !tbaa !1019
  %19 = call i32 @llvm.bswap.i32(i32 %18) #10, !dbg !2652
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2649
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2651
  %20 = bitcast i8* %17 to i32*, !dbg !2653
  store i32 %19, i32* %20, align 1, !dbg !2653
  %21 = getelementptr inbounds i8, i8* %2, i64 20, !dbg !2654
  %22 = load i32, i32* %8, align 4, !dbg !2652, !tbaa !1019
  %23 = call i32 @llvm.bswap.i32(i32 %22) #10, !dbg !2652
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2649
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2651
  %24 = bitcast i8* %21 to i32*, !dbg !2653
  store i32 %23, i32* %24, align 1, !dbg !2653
  %25 = getelementptr inbounds i8, i8* %2, i64 24, !dbg !2654
  %26 = load i32, i32* %9, align 8, !dbg !2652, !tbaa !1019
  %27 = call i32 @llvm.bswap.i32(i32 %26) #10, !dbg !2652
  call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !1905, metadata !800) #10, !dbg !2649
  call void @llvm.dbg.value(metadata i32 undef, i64 0, metadata !1910, metadata !800) #10, !dbg !2651
  %28 = bitcast i8* %25 to i32*, !dbg !2653
  store i32 %27, i32* %28, align 1, !dbg !2653
  call void @llvm.lifetime.end(i64 176, i8* nonnull %5) #10, !dbg !2655
  ret i8* %2, !dbg !2656
}

; Function Attrs: nounwind sspstrong uwtable
define void @fdadvise(i32, i64, i64, i32) local_unnamed_addr #6 !dbg !2657 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !2664, metadata !800), !dbg !2670
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !2665, metadata !800), !dbg !2671
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !2666, metadata !800), !dbg !2672
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !2667, metadata !800), !dbg !2673
  %5 = tail call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #10, !dbg !2674
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !2668, metadata !800), !dbg !2674
  ret void, !dbg !2675
}

; Function Attrs: nounwind
declare i32 @posix_fadvise(i32, i64, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define void @fadvise(%struct._IO_FILE*, i32) local_unnamed_addr #6 !dbg !2676 {
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !2720, metadata !800), !dbg !2722
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !2721, metadata !800), !dbg !2723
  %3 = icmp eq %struct._IO_FILE* %0, null, !dbg !2724
  br i1 %3, label %7, label %4, !dbg !2726

; <label>:4:                                      ; preds = %2
  %5 = tail call i32 @fileno(%struct._IO_FILE* nonnull %0) #10, !dbg !2727
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !2664, metadata !800) #10, !dbg !2728
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !2665, metadata !800) #10, !dbg !2731
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !2666, metadata !800) #10, !dbg !2732
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !2667, metadata !800) #10, !dbg !2733
  %6 = tail call i32 @posix_fadvise(i32 %5, i64 0, i64 0, i32 %1) #10, !dbg !2734
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !2668, metadata !800) #10, !dbg !2734
  br label %7, !dbg !2735

; <label>:7:                                      ; preds = %2, %4
  ret void, !dbg !2736
}

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define %struct._IO_FILE* @fopen_safer(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #6 !dbg !2737 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2782, metadata !800), !dbg !2797
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2783, metadata !800), !dbg !2798
  %3 = tail call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !2799
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %3, i64 0, metadata !2784, metadata !800), !dbg !2800
  %4 = icmp eq %struct._IO_FILE* %3, null, !dbg !2801
  br i1 %4, label %25, label %5, !dbg !2802

; <label>:5:                                      ; preds = %2
  %6 = tail call i32 @fileno(%struct._IO_FILE* nonnull %3) #10, !dbg !2803
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !2785, metadata !800), !dbg !2804
  %7 = icmp ult i32 %6, 3, !dbg !2805
  br i1 %7, label %8, label %25, !dbg !2805

; <label>:8:                                      ; preds = %5
  %9 = tail call i32 @dup_safer(i32 %6) #10, !dbg !2806
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !2788, metadata !800), !dbg !2807
  %10 = icmp slt i32 %9, 0, !dbg !2808
  br i1 %10, label %11, label %15, !dbg !2809

; <label>:11:                                     ; preds = %8
  %12 = tail call i32* @__errno_location() #1, !dbg !2810
  %13 = load i32, i32* %12, align 4, !dbg !2810, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !2791, metadata !800), !dbg !2811
  %14 = tail call i32 @rpl_fclose(%struct._IO_FILE* nonnull %3) #10, !dbg !2812
  store i32 %13, i32* %12, align 4, !dbg !2813, !tbaa !1019
  br label %25

; <label>:15:                                     ; preds = %8
  %16 = tail call i32 @rpl_fclose(%struct._IO_FILE* nonnull %3) #10, !dbg !2814
  %17 = icmp eq i32 %16, 0, !dbg !2815
  br i1 %17, label %18, label %21, !dbg !2816

; <label>:18:                                     ; preds = %15
  %19 = tail call %struct._IO_FILE* @fdopen(i32 %9, i8* %1) #10, !dbg !2817
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %19, i64 0, metadata !2784, metadata !800), !dbg !2800
  %20 = icmp eq %struct._IO_FILE* %19, null, !dbg !2819
  br i1 %20, label %21, label %25, !dbg !2820

; <label>:21:                                     ; preds = %18, %15
  %22 = tail call i32* @__errno_location() #1, !dbg !2822
  %23 = load i32, i32* %22, align 4, !dbg !2822, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !2794, metadata !800), !dbg !2823
  %24 = tail call i32 @close(i32 %9) #10, !dbg !2824
  store i32 %23, i32* %22, align 4, !dbg !2825, !tbaa !1019
  br label %25

; <label>:25:                                     ; preds = %5, %18, %2, %21, %11
  %26 = phi %struct._IO_FILE* [ null, %11 ], [ null, %21 ], [ null, %2 ], [ %19, %18 ], [ %3, %5 ]
  ret %struct._IO_FILE* %26, !dbg !2826
}

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fdopen(i32, i8* nocapture readonly) local_unnamed_addr #2

declare i32 @close(i32) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define void @set_program_name(i8*) local_unnamed_addr #6 !dbg !2827 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2829, metadata !800), !dbg !2832
  %2 = icmp eq i8* %0, null, !dbg !2833
  br i1 %2, label %3, label %6, !dbg !2835

; <label>:3:                                      ; preds = %1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2836, !tbaa !808
  %5 = tail call i64 @fwrite(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.79, i64 0, i64 0), i64 55, i64 1, %struct._IO_FILE* %4) #16, !dbg !2838
  tail call void @abort() #14, !dbg !2839
  unreachable, !dbg !2839

; <label>:6:                                      ; preds = %1
  %7 = tail call i8* @strrchr(i8* nonnull %0, i32 47) #13, !dbg !2840
  tail call void @llvm.dbg.value(metadata i8* %7, i64 0, metadata !2830, metadata !800), !dbg !2841
  %8 = icmp ne i8* %7, null, !dbg !2842
  %9 = getelementptr inbounds i8, i8* %7, i64 1, !dbg !2843
  %10 = select i1 %8, i8* %9, i8* %0, !dbg !2845
  tail call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !2831, metadata !800), !dbg !2846
  %11 = ptrtoint i8* %10 to i64, !dbg !2847
  %12 = ptrtoint i8* %0 to i64, !dbg !2847
  %13 = sub i64 %11, %12, !dbg !2847
  %14 = icmp sgt i64 %13, 6, !dbg !2849
  br i1 %14, label %15, label %24, !dbg !2850

; <label>:15:                                     ; preds = %6
  %16 = getelementptr inbounds i8, i8* %10, i64 -7, !dbg !2851
  %17 = tail call i32 @strncmp(i8* %16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.80, i64 0, i64 0), i64 7) #13, !dbg !2851
  %18 = icmp eq i32 %17, 0, !dbg !2853
  br i1 %18, label %19, label %24, !dbg !2854

; <label>:19:                                     ; preds = %15
  tail call void @llvm.dbg.value(metadata i8* %10, i64 0, metadata !2829, metadata !800), !dbg !2832
  %20 = tail call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.81, i64 0, i64 0), i64 3) #13, !dbg !2855
  %21 = icmp eq i32 %20, 0, !dbg !2858
  br i1 %21, label %22, label %24, !dbg !2859

; <label>:22:                                     ; preds = %19
  %23 = getelementptr inbounds i8, i8* %10, i64 3, !dbg !2860
  tail call void @llvm.dbg.value(metadata i8* %23, i64 0, metadata !2829, metadata !800), !dbg !2832
  store i8* %23, i8** @program_invocation_short_name, align 8, !dbg !2862, !tbaa !808
  br label %24, !dbg !2863

; <label>:24:                                     ; preds = %19, %22, %15, %6
  %25 = phi i8* [ %23, %22 ], [ %10, %19 ], [ %0, %15 ], [ %0, %6 ]
  tail call void @llvm.dbg.value(metadata i8* %25, i64 0, metadata !2829, metadata !800), !dbg !2832
  store i8* %25, i8** @program_name, align 8, !dbg !2864, !tbaa !808
  store i8* %25, i8** @program_invocation_name, align 8, !dbg !2865, !tbaa !808
  ret void, !dbg !2866
}

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind sspstrong uwtable
define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options*) local_unnamed_addr #6 !dbg !2867 {
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %0, i64 0, metadata !2872, metadata !800), !dbg !2875
  %2 = tail call i32* @__errno_location() #1, !dbg !2876
  %3 = load i32, i32* %2, align 4, !dbg !2876, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %3, i64 0, metadata !2873, metadata !800), !dbg !2877
  %4 = icmp ne %struct.quoting_options* %0, null, !dbg !2878
  %5 = bitcast %struct.quoting_options* %0 to i8*, !dbg !2879
  %6 = select i1 %4, i8* %5, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), !dbg !2879
  %7 = tail call i8* @xmemdup(i8* %6, i64 56) #10, !dbg !2881
  %8 = bitcast i8* %7 to %struct.quoting_options*, !dbg !2881
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %8, i64 0, metadata !2874, metadata !800), !dbg !2882
  store i32 %3, i32* %2, align 4, !dbg !2883, !tbaa !1019
  ret %struct.quoting_options* %8, !dbg !2884
}

; Function Attrs: nounwind readonly sspstrong uwtable
define i32 @get_quoting_style(%struct.quoting_options* readonly) local_unnamed_addr #11 !dbg !2885 {
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %0, i64 0, metadata !2891, metadata !800), !dbg !2892
  %2 = icmp ne %struct.quoting_options* %0, null, !dbg !2893
  %3 = select i1 %2, %struct.quoting_options* %0, %struct.quoting_options* @default_quoting_options, !dbg !2893
  %4 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i64 0, i32 0, !dbg !2894
  %5 = load i32, i32* %4, align 8, !dbg !2894, !tbaa !2896
  ret i32 %5, !dbg !2898
}

; Function Attrs: nounwind sspstrong uwtable
define void @set_quoting_style(%struct.quoting_options*, i32) local_unnamed_addr #6 !dbg !2899 {
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %0, i64 0, metadata !2903, metadata !800), !dbg !2905
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !2904, metadata !800), !dbg !2906
  %3 = icmp ne %struct.quoting_options* %0, null, !dbg !2907
  %4 = select i1 %3, %struct.quoting_options* %0, %struct.quoting_options* @default_quoting_options, !dbg !2907
  %5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i64 0, i32 0, !dbg !2908
  store i32 %1, i32* %5, align 8, !dbg !2910, !tbaa !2896
  ret void, !dbg !2911
}

; Function Attrs: nounwind sspstrong uwtable
define i32 @set_char_quoting(%struct.quoting_options*, i8 signext, i32) local_unnamed_addr #6 !dbg !2912 {
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %0, i64 0, metadata !2916, metadata !800), !dbg !2924
  tail call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !2917, metadata !800), !dbg !2925
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !2918, metadata !800), !dbg !2926
  tail call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !2919, metadata !800), !dbg !2927
  %4 = icmp ne %struct.quoting_options* %0, null, !dbg !2928
  %5 = select i1 %4, %struct.quoting_options* %0, %struct.quoting_options* @default_quoting_options, !dbg !2928
  %6 = lshr i8 %1, 5, !dbg !2929
  %7 = zext i8 %6 to i64, !dbg !2929
  %8 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 2, i64 %7, !dbg !2931
  tail call void @llvm.dbg.value(metadata i32* %8, i64 0, metadata !2920, metadata !800), !dbg !2932
  %9 = and i8 %1, 31, !dbg !2933
  %10 = zext i8 %9 to i32, !dbg !2934
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !2922, metadata !800), !dbg !2935
  %11 = load i32, i32* %8, align 4, !dbg !2936, !tbaa !1019
  %12 = lshr i32 %11, %10, !dbg !2937
  %13 = and i32 %12, 1, !dbg !2938
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !2923, metadata !800), !dbg !2939
  %14 = and i32 %2, 1, !dbg !2940
  %15 = xor i32 %13, %14, !dbg !2941
  %16 = shl i32 %15, %10, !dbg !2942
  %17 = xor i32 %16, %11, !dbg !2943
  store i32 %17, i32* %8, align 4, !dbg !2943, !tbaa !1019
  ret i32 %13, !dbg !2944
}

; Function Attrs: nounwind sspstrong uwtable
define i32 @set_quoting_flags(%struct.quoting_options*, i32) local_unnamed_addr #6 !dbg !2945 {
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %0, i64 0, metadata !2949, metadata !800), !dbg !2952
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !2950, metadata !800), !dbg !2953
  %3 = icmp eq %struct.quoting_options* %0, null, !dbg !2954
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* @default_quoting_options, i64 0, metadata !2949, metadata !800), !dbg !2952
  %4 = select i1 %3, %struct.quoting_options* @default_quoting_options, %struct.quoting_options* %0, !dbg !2956
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !2949, metadata !800), !dbg !2952
  %5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i64 0, i32 1, !dbg !2957
  %6 = load i32, i32* %5, align 4, !dbg !2957, !tbaa !2958
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !2951, metadata !800), !dbg !2959
  store i32 %1, i32* %5, align 4, !dbg !2960, !tbaa !2958
  ret i32 %6, !dbg !2961
}

; Function Attrs: nounwind sspstrong uwtable
define void @set_custom_quoting(%struct.quoting_options*, i8*, i8*) local_unnamed_addr #6 !dbg !2962 {
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %0, i64 0, metadata !2966, metadata !800), !dbg !2969
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2967, metadata !800), !dbg !2970
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2968, metadata !800), !dbg !2971
  %4 = icmp eq %struct.quoting_options* %0, null, !dbg !2972
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* @default_quoting_options, i64 0, metadata !2966, metadata !800), !dbg !2969
  %5 = select i1 %4, %struct.quoting_options* @default_quoting_options, %struct.quoting_options* %0, !dbg !2974
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !2966, metadata !800), !dbg !2969
  %6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 0, !dbg !2975
  store i32 10, i32* %6, align 8, !dbg !2976, !tbaa !2896
  %7 = icmp ne i8* %1, null, !dbg !2977
  %8 = icmp ne i8* %2, null, !dbg !2979
  %9 = and i1 %7, %8, !dbg !2981
  br i1 %9, label %11, label %10, !dbg !2981

; <label>:10:                                     ; preds = %3
  tail call void @abort() #14, !dbg !2982
  unreachable, !dbg !2982

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 3, !dbg !2983
  store i8* %1, i8** %12, align 8, !dbg !2984, !tbaa !2985
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 4, !dbg !2986
  store i8* %2, i8** %13, align 8, !dbg !2987, !tbaa !2988
  ret void, !dbg !2989
}

; Function Attrs: nounwind sspstrong uwtable
define i64 @quotearg_buffer(i8*, i64, i8*, i64, %struct.quoting_options* readonly) local_unnamed_addr #6 !dbg !2990 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2994, metadata !800), !dbg !3002
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !2995, metadata !800), !dbg !3003
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2996, metadata !800), !dbg !3004
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !2997, metadata !800), !dbg !3005
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !2998, metadata !800), !dbg !3006
  %6 = icmp ne %struct.quoting_options* %4, null, !dbg !3007
  %7 = select i1 %6, %struct.quoting_options* %4, %struct.quoting_options* @default_quoting_options, !dbg !3007
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %7, i64 0, metadata !2999, metadata !800), !dbg !3008
  %8 = tail call i32* @__errno_location() #1, !dbg !3009
  %9 = load i32, i32* %8, align 4, !dbg !3009, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !3000, metadata !800), !dbg !3010
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i64 0, i32 0, !dbg !3011
  %11 = load i32, i32* %10, align 8, !dbg !3011, !tbaa !2896
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i64 0, i32 1, !dbg !3012
  %13 = load i32, i32* %12, align 4, !dbg !3012, !tbaa !2958
  %14 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i64 0, i32 2, i64 0, !dbg !3013
  %15 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i64 0, i32 3, !dbg !3014
  %16 = load i8*, i8** %15, align 8, !dbg !3014, !tbaa !2985
  %17 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i64 0, i32 4, !dbg !3015
  %18 = load i8*, i8** %17, align 8, !dbg !3015, !tbaa !2988
  %19 = tail call fastcc i64 @quotearg_buffer_restyled(i8* %0, i64 %1, i8* %2, i64 %3, i32 %11, i32 %13, i32* %14, i8* %16, i8* %18), !dbg !3016
  tail call void @llvm.dbg.value(metadata i64 %19, i64 0, metadata !3001, metadata !800), !dbg !3017
  store i32 %9, i32* %8, align 4, !dbg !3018, !tbaa !1019
  ret i64 %19, !dbg !3019
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i64 @quotearg_buffer_restyled(i8*, i64, i8*, i64, i32, i32, i32* readonly, i8* readonly, i8* readonly) unnamed_addr #6 !dbg !3020 {
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %struct.__mbstate_t*
  %12 = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !3026, metadata !800), !dbg !3089
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !3027, metadata !800), !dbg !3090
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !3028, metadata !800), !dbg !3091
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !3029, metadata !800), !dbg !3092
  tail call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !3030, metadata !800), !dbg !3093
  tail call void @llvm.dbg.value(metadata i32 %5, i64 0, metadata !3031, metadata !800), !dbg !3094
  tail call void @llvm.dbg.value(metadata i32* %6, i64 0, metadata !3032, metadata !800), !dbg !3095
  tail call void @llvm.dbg.value(metadata i8* %7, i64 0, metadata !3033, metadata !800), !dbg !3096
  tail call void @llvm.dbg.value(metadata i8* %8, i64 0, metadata !3034, metadata !800), !dbg !3097
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3036, metadata !800), !dbg !3098
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3037, metadata !800), !dbg !3099
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3038, metadata !800), !dbg !3100
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3039, metadata !800), !dbg !3101
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3040, metadata !800), !dbg !3102
  %13 = tail call i64 @__ctype_get_mb_cur_max() #10, !dbg !3103
  %14 = icmp eq i64 %13, 1, !dbg !3104
  %15 = lshr i32 %5, 1, !dbg !3105
  %16 = trunc i32 %15 to i8, !dbg !3105
  %17 = and i8 %16, 1, !dbg !3105
  tail call void @llvm.dbg.value(metadata i8 %17, i64 0, metadata !3042, metadata !800), !dbg !3105
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3043, metadata !800), !dbg !3106
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3044, metadata !800), !dbg !3107
  tail call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3045, metadata !800), !dbg !3108
  %18 = bitcast i64* %10 to i8*
  %19 = bitcast i32* %12 to i8*
  %20 = icmp eq i32* %6, null
  %21 = icmp ne i32* %6, null
  %22 = and i32 %5, 1
  %23 = icmp eq i32 %22, 0
  %24 = and i32 %5, 4
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds i8, i8* %2, i64 1
  br label %27, !dbg !3109

; <label>:27:                                     ; preds = %614, %9
  %28 = phi i32 [ %4, %9 ], [ %96, %614 ]
  %29 = phi i8* [ %7, %9 ], [ %97, %614 ]
  %30 = phi i8* [ %8, %9 ], [ %98, %614 ]
  %31 = phi i64 [ 0, %9 ], [ %126, %614 ]
  %32 = phi i8* [ null, %9 ], [ %100, %614 ]
  %33 = phi i64 [ 0, %9 ], [ %101, %614 ]
  %34 = phi i8 [ 0, %9 ], [ %102, %614 ]
  %35 = phi i64 [ %3, %9 ], [ %598, %614 ]
  %36 = phi i8 [ %17, %9 ], [ %103, %614 ]
  %37 = phi i8 [ 0, %9 ], [ %128, %614 ]
  %38 = phi i8 [ 0, %9 ], [ %129, %614 ]
  %39 = phi i8 [ 1, %9 ], [ %130, %614 ]
  %40 = phi i64 [ %1, %9 ], [ %126, %614 ]
  call void @llvm.dbg.value(metadata i64 %40, i64 0, metadata !3027, metadata !800), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %39, i64 0, metadata !3045, metadata !800), !dbg !3108
  call void @llvm.dbg.value(metadata i8 %38, i64 0, metadata !3044, metadata !800), !dbg !3107
  call void @llvm.dbg.value(metadata i8 %37, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !3042, metadata !800), !dbg !3105
  call void @llvm.dbg.value(metadata i64 %35, i64 0, metadata !3029, metadata !800), !dbg !3092
  call void @llvm.dbg.value(metadata i8 %34, i64 0, metadata !3040, metadata !800), !dbg !3102
  call void @llvm.dbg.value(metadata i64 %33, i64 0, metadata !3039, metadata !800), !dbg !3101
  call void @llvm.dbg.value(metadata i8* %32, i64 0, metadata !3038, metadata !800), !dbg !3100
  call void @llvm.dbg.value(metadata i64 %31, i64 0, metadata !3037, metadata !800), !dbg !3099
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8* %30, i64 0, metadata !3034, metadata !800), !dbg !3097
  call void @llvm.dbg.value(metadata i8* %29, i64 0, metadata !3033, metadata !800), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %28, i64 0, metadata !3030, metadata !800), !dbg !3093
  switch i32 %28, label %94 [
    i32 6, label %41
    i32 5, label %42
    i32 7, label %95
    i32 0, label %93
    i32 2, label %85
    i32 4, label %79
    i32 3, label %76
    i32 1, label %77
    i32 10, label %51
    i32 8, label %48
    i32 9, label %48
  ], !dbg !3110

; <label>:41:                                     ; preds = %27
  call void @llvm.dbg.value(metadata i32 5, i64 0, metadata !3030, metadata !800), !dbg !3093
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3042, metadata !800), !dbg !3105
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !3042, metadata !800), !dbg !3105
  call void @llvm.dbg.value(metadata i32 5, i64 0, metadata !3030, metadata !800), !dbg !3093
  br label %95, !dbg !3111

; <label>:42:                                     ; preds = %27
  call void @llvm.dbg.value(metadata i8 %36, i64 0, metadata !3042, metadata !800), !dbg !3105
  call void @llvm.dbg.value(metadata i32 5, i64 0, metadata !3030, metadata !800), !dbg !3093
  %43 = and i8 %36, 1, !dbg !3113
  %44 = icmp eq i8 %43, 0, !dbg !3113
  br i1 %44, label %45, label %95, !dbg !3111

; <label>:45:                                     ; preds = %42
  %46 = icmp eq i64 %40, 0, !dbg !3115
  br i1 %46, label %95, label %47, !dbg !3119

; <label>:47:                                     ; preds = %45
  store i8 34, i8* %0, align 1, !dbg !3121, !tbaa !1055
  br label %95, !dbg !3121

; <label>:48:                                     ; preds = %27, %27
  %49 = call fastcc i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.92, i64 0, i64 0), i32 %28), !dbg !3123
  call void @llvm.dbg.value(metadata i8* %49, i64 0, metadata !3033, metadata !800), !dbg !3096
  %50 = call fastcc i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.93, i64 0, i64 0), i32 %28), !dbg !3127
  call void @llvm.dbg.value(metadata i8* %50, i64 0, metadata !3034, metadata !800), !dbg !3097
  br label %51, !dbg !3128

; <label>:51:                                     ; preds = %27, %48
  %52 = phi i8* [ %49, %48 ], [ %29, %27 ]
  %53 = phi i8* [ %50, %48 ], [ %30, %27 ]
  call void @llvm.dbg.value(metadata i8* %53, i64 0, metadata !3034, metadata !800), !dbg !3097
  call void @llvm.dbg.value(metadata i8* %52, i64 0, metadata !3033, metadata !800), !dbg !3096
  %54 = and i8 %36, 1, !dbg !3129
  %55 = icmp eq i8 %54, 0, !dbg !3129
  br i1 %55, label %56, label %73, !dbg !3131

; <label>:56:                                     ; preds = %51
  call void @llvm.dbg.value(metadata i8* %52, i64 0, metadata !3038, metadata !800), !dbg !3100
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3036, metadata !800), !dbg !3098
  %57 = load i8, i8* %52, align 1, !dbg !3132, !tbaa !1055
  %58 = icmp eq i8 %57, 0, !dbg !3136
  br i1 %58, label %73, label %59, !dbg !3136

; <label>:59:                                     ; preds = %56
  br label %60, !dbg !3138

; <label>:60:                                     ; preds = %59, %67
  %61 = phi i8 [ %70, %67 ], [ %57, %59 ]
  %62 = phi i8* [ %69, %67 ], [ %52, %59 ]
  %63 = phi i64 [ %68, %67 ], [ 0, %59 ]
  %64 = icmp ult i64 %63, %40, !dbg !3138
  br i1 %64, label %65, label %67, !dbg !3142

; <label>:65:                                     ; preds = %60
  %66 = getelementptr inbounds i8, i8* %0, i64 %63, !dbg !3144
  store i8 %61, i8* %66, align 1, !dbg !3144, !tbaa !1055
  br label %67, !dbg !3144

; <label>:67:                                     ; preds = %65, %60
  %68 = add i64 %63, 1, !dbg !3146
  call void @llvm.dbg.value(metadata i64 %68, i64 0, metadata !3036, metadata !800), !dbg !3098
  %69 = getelementptr inbounds i8, i8* %62, i64 1, !dbg !3148
  call void @llvm.dbg.value(metadata i8* %69, i64 0, metadata !3038, metadata !800), !dbg !3100
  call void @llvm.dbg.value(metadata i8* %69, i64 0, metadata !3038, metadata !800), !dbg !3100
  call void @llvm.dbg.value(metadata i64 %68, i64 0, metadata !3036, metadata !800), !dbg !3098
  %70 = load i8, i8* %69, align 1, !dbg !3132, !tbaa !1055
  %71 = icmp eq i8 %70, 0, !dbg !3136
  br i1 %71, label %72, label %60, !dbg !3136, !llvm.loop !3150

; <label>:72:                                     ; preds = %67
  br label %73, !dbg !3098

; <label>:73:                                     ; preds = %72, %56, %51
  %74 = phi i64 [ 0, %51 ], [ 0, %56 ], [ %68, %72 ]
  call void @llvm.dbg.value(metadata i64 %74, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3040, metadata !800), !dbg !3102
  call void @llvm.dbg.value(metadata i8* %53, i64 0, metadata !3038, metadata !800), !dbg !3100
  %75 = call i64 @strlen(i8* %53) #13, !dbg !3153
  call void @llvm.dbg.value(metadata i64 %75, i64 0, metadata !3039, metadata !800), !dbg !3101
  br label %95, !dbg !3154

; <label>:76:                                     ; preds = %27
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3040, metadata !800), !dbg !3102
  br label %77, !dbg !3155

; <label>:77:                                     ; preds = %27, %76
  %78 = phi i8 [ %34, %27 ], [ 1, %76 ]
  call void @llvm.dbg.value(metadata i8 %78, i64 0, metadata !3040, metadata !800), !dbg !3102
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3042, metadata !800), !dbg !3105
  br label %79, !dbg !3156

; <label>:79:                                     ; preds = %27, %77
  %80 = phi i8 [ %34, %27 ], [ %78, %77 ]
  %81 = phi i8 [ %36, %27 ], [ 1, %77 ]
  call void @llvm.dbg.value(metadata i8 %81, i64 0, metadata !3042, metadata !800), !dbg !3105
  call void @llvm.dbg.value(metadata i8 %80, i64 0, metadata !3040, metadata !800), !dbg !3102
  %82 = and i8 %81, 1, !dbg !3157
  %83 = icmp eq i8 %82, 0, !dbg !3157
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3040, metadata !800), !dbg !3102
  %84 = select i1 %83, i8 1, i8 %80, !dbg !3159
  br label %85, !dbg !3159

; <label>:85:                                     ; preds = %79, %27
  %86 = phi i8 [ %34, %27 ], [ %84, %79 ]
  %87 = phi i8 [ %36, %27 ], [ %81, %79 ]
  call void @llvm.dbg.value(metadata i8 %87, i64 0, metadata !3042, metadata !800), !dbg !3105
  call void @llvm.dbg.value(metadata i8 %86, i64 0, metadata !3040, metadata !800), !dbg !3102
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !3030, metadata !800), !dbg !3093
  %88 = and i8 %87, 1, !dbg !3160
  %89 = icmp eq i8 %88, 0, !dbg !3160
  br i1 %89, label %90, label %95, !dbg !3162

; <label>:90:                                     ; preds = %85
  %91 = icmp eq i64 %40, 0, !dbg !3163
  br i1 %91, label %95, label %92, !dbg !3167

; <label>:92:                                     ; preds = %90
  store i8 39, i8* %0, align 1, !dbg !3169, !tbaa !1055
  br label %95, !dbg !3169

; <label>:93:                                     ; preds = %27
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3042, metadata !800), !dbg !3105
  br label %95, !dbg !3171

; <label>:94:                                     ; preds = %27
  call void @abort() #14, !dbg !3172
  unreachable, !dbg !3172

; <label>:95:                                     ; preds = %41, %85, %90, %92, %27, %42, %45, %47, %93, %73
  %96 = phi i32 [ 0, %93 ], [ %28, %73 ], [ 5, %47 ], [ 5, %45 ], [ 5, %42 ], [ 7, %27 ], [ 2, %92 ], [ 2, %90 ], [ 2, %85 ], [ 5, %41 ]
  %97 = phi i8* [ %29, %93 ], [ %52, %73 ], [ %29, %47 ], [ %29, %45 ], [ %29, %42 ], [ %29, %27 ], [ %29, %92 ], [ %29, %90 ], [ %29, %85 ], [ %29, %41 ]
  %98 = phi i8* [ %30, %93 ], [ %53, %73 ], [ %30, %47 ], [ %30, %45 ], [ %30, %42 ], [ %30, %27 ], [ %30, %92 ], [ %30, %90 ], [ %30, %85 ], [ %30, %41 ]
  %99 = phi i64 [ 0, %93 ], [ %74, %73 ], [ 1, %47 ], [ 1, %45 ], [ 0, %42 ], [ 0, %27 ], [ 1, %92 ], [ 1, %90 ], [ 0, %85 ], [ 0, %41 ]
  %100 = phi i8* [ %32, %93 ], [ %53, %73 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i64 0, i64 0), %47 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i64 0, i64 0), %45 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i64 0, i64 0), %42 ], [ %32, %27 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.93, i64 0, i64 0), %92 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.93, i64 0, i64 0), %90 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.93, i64 0, i64 0), %85 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i64 0, i64 0), %41 ]
  %101 = phi i64 [ %33, %93 ], [ %75, %73 ], [ 1, %47 ], [ 1, %45 ], [ 1, %42 ], [ %33, %27 ], [ 1, %92 ], [ 1, %90 ], [ 1, %85 ], [ 1, %41 ]
  %102 = phi i8 [ %34, %93 ], [ 1, %73 ], [ 1, %47 ], [ 1, %45 ], [ 1, %42 ], [ 1, %27 ], [ %86, %92 ], [ %86, %90 ], [ %86, %85 ], [ 1, %41 ]
  %103 = phi i8 [ 0, %93 ], [ %36, %73 ], [ %36, %47 ], [ %36, %45 ], [ %36, %42 ], [ 0, %27 ], [ %87, %92 ], [ %87, %90 ], [ %87, %85 ], [ 1, %41 ]
  call void @llvm.dbg.value(metadata i8 %103, i64 0, metadata !3042, metadata !800), !dbg !3105
  call void @llvm.dbg.value(metadata i8 %102, i64 0, metadata !3040, metadata !800), !dbg !3102
  call void @llvm.dbg.value(metadata i64 %101, i64 0, metadata !3039, metadata !800), !dbg !3101
  call void @llvm.dbg.value(metadata i8* %100, i64 0, metadata !3038, metadata !800), !dbg !3100
  call void @llvm.dbg.value(metadata i64 %99, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8* %98, i64 0, metadata !3034, metadata !800), !dbg !3097
  call void @llvm.dbg.value(metadata i8* %97, i64 0, metadata !3033, metadata !800), !dbg !3096
  call void @llvm.dbg.value(metadata i32 %96, i64 0, metadata !3030, metadata !800), !dbg !3093
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3035, metadata !800), !dbg !3173
  %104 = and i8 %102, 1
  %105 = icmp ne i8 %104, 0
  %106 = icmp ne i32 %96, 2
  %107 = and i1 %106, %105
  %108 = icmp ne i64 %101, 0
  %109 = and i1 %108, %107
  %110 = icmp ugt i64 %101, 1
  %111 = and i8 %103, 1
  %112 = icmp eq i8 %111, 0
  %113 = xor i1 %105, true
  %114 = icmp eq i32 %96, 2
  %115 = icmp ne i8 %111, 0
  %116 = and i1 %114, %115
  %117 = and i1 %21, %115
  %118 = or i1 %106, %112
  %119 = and i8 %102, %103
  %120 = and i8 %119, 1
  %121 = icmp ne i8 %120, 0
  %122 = and i1 %121, %108
  br label %123, !dbg !3174

; <label>:123:                                    ; preds = %587, %95
  %124 = phi i64 [ 0, %95 ], [ %596, %587 ]
  %125 = phi i64 [ %99, %95 ], [ %589, %587 ]
  %126 = phi i64 [ %31, %95 ], [ %590, %587 ]
  %127 = phi i64 [ %35, %95 ], [ %591, %587 ]
  %128 = phi i8 [ %37, %95 ], [ %592, %587 ]
  %129 = phi i8 [ %38, %95 ], [ %593, %587 ]
  %130 = phi i8 [ %39, %95 ], [ %594, %587 ]
  %131 = phi i64 [ %40, %95 ], [ %595, %587 ]
  call void @llvm.dbg.value(metadata i64 %131, i64 0, metadata !3027, metadata !800), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %130, i64 0, metadata !3045, metadata !800), !dbg !3108
  call void @llvm.dbg.value(metadata i8 %129, i64 0, metadata !3044, metadata !800), !dbg !3107
  call void @llvm.dbg.value(metadata i8 %128, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %127, i64 0, metadata !3029, metadata !800), !dbg !3092
  call void @llvm.dbg.value(metadata i64 %126, i64 0, metadata !3037, metadata !800), !dbg !3099
  call void @llvm.dbg.value(metadata i64 %125, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %124, i64 0, metadata !3035, metadata !800), !dbg !3173
  %132 = icmp eq i64 %127, -1, !dbg !3175
  br i1 %132, label %135, label %133, !dbg !3177

; <label>:133:                                    ; preds = %123
  %134 = icmp eq i64 %124, %127, !dbg !3178
  br i1 %134, label %597, label %139, !dbg !3180

; <label>:135:                                    ; preds = %123
  %136 = getelementptr inbounds i8, i8* %2, i64 %124, !dbg !3182
  %137 = load i8, i8* %136, align 1, !dbg !3182, !tbaa !1055
  %138 = icmp eq i8 %137, 0, !dbg !3184
  br i1 %138, label %597, label %139, !dbg !3180

; <label>:139:                                    ; preds = %133, %135
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3051, metadata !800), !dbg !3185
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3052, metadata !800), !dbg !3186
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3053, metadata !800), !dbg !3187
  br i1 %109, label %140, label %155, !dbg !3188

; <label>:140:                                    ; preds = %139
  %141 = add i64 %124, %101, !dbg !3190
  %142 = and i1 %110, %132, !dbg !3192
  br i1 %142, label %143, label %145, !dbg !3192

; <label>:143:                                    ; preds = %140
  %144 = call i64 @strlen(i8* %2) #13, !dbg !3193
  call void @llvm.dbg.value(metadata i64 %144, i64 0, metadata !3029, metadata !800), !dbg !3092
  br label %145, !dbg !3194

; <label>:145:                                    ; preds = %140, %143
  %146 = phi i64 [ %144, %143 ], [ %127, %140 ]
  call void @llvm.dbg.value(metadata i64 %146, i64 0, metadata !3029, metadata !800), !dbg !3092
  %147 = icmp ugt i64 %141, %146, !dbg !3196
  br i1 %147, label %155, label %148, !dbg !3198

; <label>:148:                                    ; preds = %145
  %149 = getelementptr inbounds i8, i8* %2, i64 %124, !dbg !3199
  %150 = call i32 @memcmp(i8* %149, i8* %100, i64 %101) #13, !dbg !3200
  %151 = icmp ne i32 %150, 0, !dbg !3201
  %152 = or i1 %151, %112, !dbg !3201
  %153 = xor i1 %151, true, !dbg !3201
  %154 = zext i1 %153 to i8, !dbg !3201
  br i1 %152, label %155, label %644, !dbg !3201

; <label>:155:                                    ; preds = %148, %145, %139
  %156 = phi i64 [ %146, %148 ], [ %146, %145 ], [ %127, %139 ]
  %157 = phi i8 [ %154, %148 ], [ 0, %145 ], [ 0, %139 ]
  call void @llvm.dbg.value(metadata i8 %157, i64 0, metadata !3051, metadata !800), !dbg !3185
  call void @llvm.dbg.value(metadata i64 %156, i64 0, metadata !3029, metadata !800), !dbg !3092
  %158 = getelementptr inbounds i8, i8* %2, i64 %124, !dbg !3203
  %159 = load i8, i8* %158, align 1, !dbg !3203, !tbaa !1055
  call void @llvm.dbg.value(metadata i8 %159, i64 0, metadata !3046, metadata !800), !dbg !3204
  switch i8 %159, label %298 [
    i8 0, label %160
    i8 63, label %210
    i8 7, label %257
    i8 8, label %247
    i8 12, label %248
    i8 10, label %255
    i8 13, label %249
    i8 9, label %250
    i8 11, label %251
    i8 92, label %252
    i8 123, label %259
    i8 125, label %259
    i8 35, label %270
    i8 126, label %270
    i8 32, label %272
    i8 33, label %273
    i8 34, label %273
    i8 36, label %273
    i8 38, label %273
    i8 40, label %273
    i8 41, label %273
    i8 42, label %273
    i8 59, label %273
    i8 60, label %273
    i8 61, label %273
    i8 62, label %273
    i8 91, label %273
    i8 94, label %273
    i8 96, label %273
    i8 124, label %273
    i8 39, label %275
    i8 37, label %476
    i8 43, label %476
    i8 44, label %476
    i8 45, label %476
    i8 46, label %476
    i8 47, label %476
    i8 48, label %476
    i8 49, label %476
    i8 50, label %476
    i8 51, label %476
    i8 52, label %476
    i8 53, label %476
    i8 54, label %476
    i8 55, label %476
    i8 56, label %476
    i8 57, label %476
    i8 58, label %476
    i8 65, label %476
    i8 66, label %476
    i8 67, label %476
    i8 68, label %476
    i8 69, label %476
    i8 70, label %476
    i8 71, label %476
    i8 72, label %476
    i8 73, label %476
    i8 74, label %476
    i8 75, label %476
    i8 76, label %476
    i8 77, label %476
    i8 78, label %476
    i8 79, label %476
    i8 80, label %476
    i8 81, label %476
    i8 82, label %476
    i8 83, label %476
    i8 84, label %476
    i8 85, label %476
    i8 86, label %476
    i8 87, label %476
    i8 88, label %476
    i8 89, label %476
    i8 90, label %476
    i8 93, label %476
    i8 95, label %476
    i8 97, label %476
    i8 98, label %476
    i8 99, label %476
    i8 100, label %476
    i8 101, label %476
    i8 102, label %476
    i8 103, label %476
    i8 104, label %476
    i8 105, label %476
    i8 106, label %476
    i8 107, label %476
    i8 108, label %476
    i8 109, label %476
    i8 110, label %476
    i8 111, label %476
    i8 112, label %476
    i8 113, label %476
    i8 114, label %476
    i8 115, label %476
    i8 116, label %476
    i8 117, label %476
    i8 118, label %476
    i8 119, label %476
    i8 120, label %476
    i8 121, label %476
    i8 122, label %476
  ], !dbg !3205

; <label>:160:                                    ; preds = %155
  br i1 %105, label %161, label %209, !dbg !3206

; <label>:161:                                    ; preds = %160
  br i1 %112, label %162, label %644, !dbg !3207

; <label>:162:                                    ; preds = %161
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3052, metadata !800), !dbg !3186
  %163 = and i8 %128, 1, !dbg !3212
  %164 = icmp eq i8 %163, 0, !dbg !3212
  %165 = and i1 %114, %164, !dbg !3215
  br i1 %165, label %166, label %182, !dbg !3215

; <label>:166:                                    ; preds = %162
  %167 = icmp ult i64 %125, %131, !dbg !3217
  br i1 %167, label %168, label %170, !dbg !3222

; <label>:168:                                    ; preds = %166
  %169 = getelementptr inbounds i8, i8* %0, i64 %125, !dbg !3224
  store i8 39, i8* %169, align 1, !dbg !3224, !tbaa !1055
  br label %170, !dbg !3224

; <label>:170:                                    ; preds = %168, %166
  %171 = add i64 %125, 1, !dbg !3226
  call void @llvm.dbg.value(metadata i64 %171, i64 0, metadata !3036, metadata !800), !dbg !3098
  %172 = icmp ult i64 %171, %131, !dbg !3228
  br i1 %172, label %173, label %175, !dbg !3232

; <label>:173:                                    ; preds = %170
  %174 = getelementptr inbounds i8, i8* %0, i64 %171, !dbg !3234
  store i8 36, i8* %174, align 1, !dbg !3234, !tbaa !1055
  br label %175, !dbg !3234

; <label>:175:                                    ; preds = %173, %170
  %176 = add i64 %125, 2, !dbg !3236
  call void @llvm.dbg.value(metadata i64 %176, i64 0, metadata !3036, metadata !800), !dbg !3098
  %177 = icmp ult i64 %176, %131, !dbg !3238
  br i1 %177, label %178, label %180, !dbg !3242

; <label>:178:                                    ; preds = %175
  %179 = getelementptr inbounds i8, i8* %0, i64 %176, !dbg !3244
  store i8 39, i8* %179, align 1, !dbg !3244, !tbaa !1055
  br label %180, !dbg !3244

; <label>:180:                                    ; preds = %178, %175
  %181 = add i64 %125, 3, !dbg !3246
  call void @llvm.dbg.value(metadata i64 %181, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3043, metadata !800), !dbg !3106
  br label %182, !dbg !3248

; <label>:182:                                    ; preds = %162, %180
  %183 = phi i64 [ %181, %180 ], [ %125, %162 ]
  %184 = phi i8 [ 1, %180 ], [ %128, %162 ]
  call void @llvm.dbg.value(metadata i8 %184, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %183, i64 0, metadata !3036, metadata !800), !dbg !3098
  %185 = icmp ult i64 %183, %131, !dbg !3250
  br i1 %185, label %186, label %188, !dbg !3254

; <label>:186:                                    ; preds = %182
  %187 = getelementptr inbounds i8, i8* %0, i64 %183, !dbg !3256
  store i8 92, i8* %187, align 1, !dbg !3256, !tbaa !1055
  br label %188, !dbg !3256

; <label>:188:                                    ; preds = %186, %182
  %189 = add i64 %183, 1, !dbg !3258
  call void @llvm.dbg.value(metadata i64 %189, i64 0, metadata !3036, metadata !800), !dbg !3098
  br i1 %106, label %190, label %476, !dbg !3260

; <label>:190:                                    ; preds = %188
  %191 = add i64 %124, 1, !dbg !3262
  %192 = icmp ult i64 %191, %156, !dbg !3264
  br i1 %192, label %193, label %476, !dbg !3265

; <label>:193:                                    ; preds = %190
  %194 = getelementptr inbounds i8, i8* %2, i64 %191, !dbg !3266
  %195 = load i8, i8* %194, align 1, !dbg !3266, !tbaa !1055
  %196 = add i8 %195, -48, !dbg !3268
  %197 = icmp ult i8 %196, 10, !dbg !3268
  br i1 %197, label %198, label %476, !dbg !3268

; <label>:198:                                    ; preds = %193
  %199 = icmp ult i64 %189, %131, !dbg !3269
  br i1 %199, label %200, label %202, !dbg !3274

; <label>:200:                                    ; preds = %198
  %201 = getelementptr inbounds i8, i8* %0, i64 %189, !dbg !3276
  store i8 48, i8* %201, align 1, !dbg !3276, !tbaa !1055
  br label %202, !dbg !3276

; <label>:202:                                    ; preds = %200, %198
  %203 = add i64 %183, 2, !dbg !3278
  call void @llvm.dbg.value(metadata i64 %203, i64 0, metadata !3036, metadata !800), !dbg !3098
  %204 = icmp ult i64 %203, %131, !dbg !3280
  br i1 %204, label %205, label %207, !dbg !3284

; <label>:205:                                    ; preds = %202
  %206 = getelementptr inbounds i8, i8* %0, i64 %203, !dbg !3286
  store i8 48, i8* %206, align 1, !dbg !3286, !tbaa !1055
  br label %207, !dbg !3286

; <label>:207:                                    ; preds = %205, %202
  %208 = add i64 %183, 3, !dbg !3288
  call void @llvm.dbg.value(metadata i64 %208, i64 0, metadata !3036, metadata !800), !dbg !3098
  br label %476, !dbg !3290

; <label>:209:                                    ; preds = %160
  br i1 %23, label %476, label %587, !dbg !3291

; <label>:210:                                    ; preds = %155
  switch i32 %96, label %476 [
    i32 2, label %211
    i32 5, label %212
  ], !dbg !3292

; <label>:211:                                    ; preds = %210
  br i1 %112, label %476, label %644, !dbg !3293

; <label>:212:                                    ; preds = %210
  br i1 %25, label %476, label %213, !dbg !3295

; <label>:213:                                    ; preds = %212
  %214 = add i64 %124, 2, !dbg !3297
  %215 = icmp ult i64 %214, %156, !dbg !3299
  br i1 %215, label %216, label %476, !dbg !3300

; <label>:216:                                    ; preds = %213
  %217 = add i64 %124, 1, !dbg !3301
  %218 = getelementptr inbounds i8, i8* %2, i64 %217, !dbg !3303
  %219 = load i8, i8* %218, align 1, !dbg !3303, !tbaa !1055
  %220 = icmp eq i8 %219, 63, !dbg !3304
  br i1 %220, label %221, label %476, !dbg !3305

; <label>:221:                                    ; preds = %216
  %222 = getelementptr inbounds i8, i8* %2, i64 %214, !dbg !3307
  %223 = load i8, i8* %222, align 1, !dbg !3307, !tbaa !1055
  %224 = sext i8 %223 to i32, !dbg !3307
  switch i32 %224, label %476 [
    i32 33, label %225
    i32 39, label %225
    i32 40, label %225
    i32 41, label %225
    i32 45, label %225
    i32 47, label %225
    i32 60, label %225
    i32 61, label %225
    i32 62, label %225
  ], !dbg !3308

; <label>:225:                                    ; preds = %221, %221, %221, %221, %221, %221, %221, %221, %221
  br i1 %112, label %226, label %644, !dbg !3309

; <label>:226:                                    ; preds = %225
  call void @llvm.dbg.value(metadata i8 %223, i64 0, metadata !3046, metadata !800), !dbg !3204
  call void @llvm.dbg.value(metadata i64 %214, i64 0, metadata !3035, metadata !800), !dbg !3173
  %227 = icmp ult i64 %125, %131, !dbg !3311
  br i1 %227, label %228, label %230, !dbg !3315

; <label>:228:                                    ; preds = %226
  %229 = getelementptr inbounds i8, i8* %0, i64 %125, !dbg !3317
  store i8 63, i8* %229, align 1, !dbg !3317, !tbaa !1055
  br label %230, !dbg !3317

; <label>:230:                                    ; preds = %228, %226
  %231 = add i64 %125, 1, !dbg !3319
  call void @llvm.dbg.value(metadata i64 %231, i64 0, metadata !3036, metadata !800), !dbg !3098
  %232 = icmp ult i64 %231, %131, !dbg !3321
  br i1 %232, label %233, label %235, !dbg !3325

; <label>:233:                                    ; preds = %230
  %234 = getelementptr inbounds i8, i8* %0, i64 %231, !dbg !3327
  store i8 34, i8* %234, align 1, !dbg !3327, !tbaa !1055
  br label %235, !dbg !3327

; <label>:235:                                    ; preds = %233, %230
  %236 = add i64 %125, 2, !dbg !3329
  call void @llvm.dbg.value(metadata i64 %236, i64 0, metadata !3036, metadata !800), !dbg !3098
  %237 = icmp ult i64 %236, %131, !dbg !3331
  br i1 %237, label %238, label %240, !dbg !3335

; <label>:238:                                    ; preds = %235
  %239 = getelementptr inbounds i8, i8* %0, i64 %236, !dbg !3337
  store i8 34, i8* %239, align 1, !dbg !3337, !tbaa !1055
  br label %240, !dbg !3337

; <label>:240:                                    ; preds = %238, %235
  %241 = add i64 %125, 3, !dbg !3339
  call void @llvm.dbg.value(metadata i64 %241, i64 0, metadata !3036, metadata !800), !dbg !3098
  %242 = icmp ult i64 %241, %131, !dbg !3341
  br i1 %242, label %243, label %245, !dbg !3345

; <label>:243:                                    ; preds = %240
  %244 = getelementptr inbounds i8, i8* %0, i64 %241, !dbg !3347
  store i8 63, i8* %244, align 1, !dbg !3347, !tbaa !1055
  br label %245, !dbg !3347

; <label>:245:                                    ; preds = %243, %240
  %246 = add i64 %125, 4, !dbg !3349
  call void @llvm.dbg.value(metadata i64 %246, i64 0, metadata !3036, metadata !800), !dbg !3098
  br label %476, !dbg !3351

; <label>:247:                                    ; preds = %155
  call void @llvm.dbg.value(metadata i8 98, i64 0, metadata !3050, metadata !800), !dbg !3352
  br label %257, !dbg !3353

; <label>:248:                                    ; preds = %155
  call void @llvm.dbg.value(metadata i8 102, i64 0, metadata !3050, metadata !800), !dbg !3352
  br label %257, !dbg !3354

; <label>:249:                                    ; preds = %155
  call void @llvm.dbg.value(metadata i8 114, i64 0, metadata !3050, metadata !800), !dbg !3352
  br label %255, !dbg !3355

; <label>:250:                                    ; preds = %155
  call void @llvm.dbg.value(metadata i8 116, i64 0, metadata !3050, metadata !800), !dbg !3352
  br label %255, !dbg !3356

; <label>:251:                                    ; preds = %155
  call void @llvm.dbg.value(metadata i8 118, i64 0, metadata !3050, metadata !800), !dbg !3352
  br label %257, !dbg !3357

; <label>:252:                                    ; preds = %155
  call void @llvm.dbg.value(metadata i8 %159, i64 0, metadata !3050, metadata !800), !dbg !3352
  br i1 %114, label %253, label %254, !dbg !3358

; <label>:253:                                    ; preds = %252
  br i1 %112, label %542, label %644, !dbg !3359

; <label>:254:                                    ; preds = %252
  br i1 %122, label %542, label %255, !dbg !3362

; <label>:255:                                    ; preds = %254, %155, %250, %249
  %256 = phi i8 [ 92, %254 ], [ 116, %250 ], [ 114, %249 ], [ 110, %155 ]
  call void @llvm.dbg.value(metadata i8 %256, i64 0, metadata !3050, metadata !800), !dbg !3352
  br i1 %118, label %257, label %644, !dbg !3364

; <label>:257:                                    ; preds = %255, %155, %251, %248, %247
  %258 = phi i8 [ %256, %255 ], [ 118, %251 ], [ 102, %248 ], [ 98, %247 ], [ 97, %155 ]
  call void @llvm.dbg.value(metadata i8 %258, i64 0, metadata !3050, metadata !800), !dbg !3352
  br i1 %105, label %503, label %476, !dbg !3366

; <label>:259:                                    ; preds = %155, %155
  %260 = icmp eq i64 %156, -1, !dbg !3367
  br i1 %260, label %261, label %266, !dbg !3369

; <label>:261:                                    ; preds = %259
  %262 = load i8, i8* %26, align 1, !dbg !3370, !tbaa !1055
  %263 = icmp ne i8 %262, 0, !dbg !3372
  %264 = icmp ne i64 %124, 0, !dbg !3373
  %265 = or i1 %264, %263, !dbg !3375
  br i1 %265, label %476, label %272, !dbg !3375

; <label>:266:                                    ; preds = %259
  %267 = icmp ne i64 %156, 1, !dbg !3376
  %268 = icmp ne i64 %124, 0, !dbg !3373
  %269 = or i1 %268, %267, !dbg !3378
  br i1 %269, label %476, label %272, !dbg !3378

; <label>:270:                                    ; preds = %155, %155
  %271 = icmp eq i64 %124, 0, !dbg !3373
  br i1 %271, label %272, label %476, !dbg !3380

; <label>:272:                                    ; preds = %270, %266, %261, %155
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3053, metadata !800), !dbg !3187
  br label %273, !dbg !3381

; <label>:273:                                    ; preds = %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %155, %272
  %274 = phi i8 [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 1, %272 ]
  call void @llvm.dbg.value(metadata i8 %274, i64 0, metadata !3053, metadata !800), !dbg !3187
  br i1 %118, label %476, label %644, !dbg !3382

; <label>:275:                                    ; preds = %155
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3044, metadata !800), !dbg !3107
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3053, metadata !800), !dbg !3187
  br i1 %114, label %276, label %476, !dbg !3384

; <label>:276:                                    ; preds = %275
  br i1 %112, label %277, label %644, !dbg !3385

; <label>:277:                                    ; preds = %276
  %278 = icmp eq i64 %131, 0, !dbg !3388
  %279 = icmp ne i64 %126, 0, !dbg !3390
  %280 = or i1 %279, %278, !dbg !3392
  call void @llvm.dbg.value(metadata i64 %131, i64 0, metadata !3037, metadata !800), !dbg !3099
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3027, metadata !800), !dbg !3090
  %281 = select i1 %280, i64 %126, i64 %131, !dbg !3392
  %282 = select i1 %280, i64 %131, i64 0, !dbg !3392
  call void @llvm.dbg.value(metadata i64 %282, i64 0, metadata !3027, metadata !800), !dbg !3090
  call void @llvm.dbg.value(metadata i64 %281, i64 0, metadata !3037, metadata !800), !dbg !3099
  %283 = icmp ult i64 %125, %282, !dbg !3393
  br i1 %283, label %284, label %286, !dbg !3397

; <label>:284:                                    ; preds = %277
  %285 = getelementptr inbounds i8, i8* %0, i64 %125, !dbg !3399
  store i8 39, i8* %285, align 1, !dbg !3399, !tbaa !1055
  br label %286, !dbg !3399

; <label>:286:                                    ; preds = %284, %277
  %287 = add i64 %125, 1, !dbg !3401
  call void @llvm.dbg.value(metadata i64 %287, i64 0, metadata !3036, metadata !800), !dbg !3098
  %288 = icmp ult i64 %287, %282, !dbg !3403
  br i1 %288, label %289, label %291, !dbg !3407

; <label>:289:                                    ; preds = %286
  %290 = getelementptr inbounds i8, i8* %0, i64 %287, !dbg !3409
  store i8 92, i8* %290, align 1, !dbg !3409, !tbaa !1055
  br label %291, !dbg !3409

; <label>:291:                                    ; preds = %289, %286
  %292 = add i64 %125, 2, !dbg !3411
  call void @llvm.dbg.value(metadata i64 %292, i64 0, metadata !3036, metadata !800), !dbg !3098
  %293 = icmp ult i64 %292, %282, !dbg !3413
  br i1 %293, label %294, label %296, !dbg !3417

; <label>:294:                                    ; preds = %291
  %295 = getelementptr inbounds i8, i8* %0, i64 %292, !dbg !3419
  store i8 39, i8* %295, align 1, !dbg !3419, !tbaa !1055
  br label %296, !dbg !3419

; <label>:296:                                    ; preds = %294, %291
  %297 = add i64 %125, 3, !dbg !3421
  call void @llvm.dbg.value(metadata i64 %297, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3043, metadata !800), !dbg !3106
  br label %476, !dbg !3423

; <label>:298:                                    ; preds = %155
  br i1 %14, label %299, label %308, !dbg !3424

; <label>:299:                                    ; preds = %298
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !3054, metadata !800), !dbg !3425
  %300 = tail call i16** @__ctype_b_loc() #1, !dbg !3426
  %301 = load i16*, i16** %300, align 8, !dbg !3426, !tbaa !808
  %302 = zext i8 %159 to i64, !dbg !3426
  %303 = getelementptr inbounds i16, i16* %301, i64 %302, !dbg !3426
  %304 = load i16, i16* %303, align 2, !dbg !3426, !tbaa !1370
  %305 = lshr i16 %304, 14, !dbg !3428
  %306 = trunc i16 %305 to i8, !dbg !3428
  %307 = and i8 %306, 1, !dbg !3428
  call void @llvm.dbg.value(metadata i8 %307, i64 0, metadata !3057, metadata !800), !dbg !3429
  br label %368, !dbg !3430

; <label>:308:                                    ; preds = %298
  call void @llvm.lifetime.start(i64 8, i8* nonnull %18) #10, !dbg !3431
  store i64 0, i64* %10, align 8, !dbg !3432
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !3054, metadata !800), !dbg !3425
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3057, metadata !800), !dbg !3429
  %309 = icmp eq i64 %156, -1, !dbg !3433
  br i1 %309, label %310, label %312, !dbg !3435, !llvm.loop !3436

; <label>:310:                                    ; preds = %308
  %311 = call i64 @strlen(i8* nonnull %2) #13, !dbg !3439
  call void @llvm.dbg.value(metadata i64 %311, i64 0, metadata !3029, metadata !800), !dbg !3092
  br label %312, !dbg !3440, !llvm.loop !3436

; <label>:312:                                    ; preds = %310, %308
  %313 = phi i64 [ %156, %308 ], [ %311, %310 ]
  br label %314, !dbg !3429

; <label>:314:                                    ; preds = %312, %355
  %315 = phi i64 [ %360, %355 ], [ 0, %312 ]
  %316 = phi i8 [ %359, %355 ], [ 1, %312 ]
  call void @llvm.dbg.value(metadata i8 %316, i64 0, metadata !3057, metadata !800), !dbg !3429
  call void @llvm.dbg.value(metadata i64 %315, i64 0, metadata !3054, metadata !800), !dbg !3425
  call void @llvm.dbg.value(metadata i64 %313, i64 0, metadata !3029, metadata !800), !dbg !3092
  call void @llvm.lifetime.start(i64 4, i8* nonnull %19) #10, !dbg !3441
  %317 = add i64 %315, %124, !dbg !3442
  %318 = getelementptr inbounds i8, i8* %2, i64 %317, !dbg !3443
  %319 = sub i64 %313, %317, !dbg !3444
  call void @llvm.dbg.value(metadata %struct.__mbstate_t* %11, i64 0, metadata !3058, metadata !1105), !dbg !3445
  call void @llvm.dbg.value(metadata i32* %12, i64 0, metadata !3075, metadata !1105), !dbg !3446
  %320 = call i64 @rpl_mbrtowc(i32* nonnull %12, i8* %318, i64 %319, %struct.__mbstate_t* nonnull %11) #10, !dbg !3447
  call void @llvm.dbg.value(metadata i64 %320, i64 0, metadata !3078, metadata !800), !dbg !3448
  switch i64 %320, label %334 [
    i64 0, label %350
    i64 -1, label %347
    i64 -2, label %321
  ], !dbg !3449

; <label>:321:                                    ; preds = %314
  call void @llvm.dbg.value(metadata i64 %315, i64 0, metadata !3054, metadata !800), !dbg !3425
  %322 = icmp ugt i64 %313, %317, !dbg !3450
  br i1 %322, label %323, label %351, !dbg !3453

; <label>:323:                                    ; preds = %321
  br label %324, !dbg !3454

; <label>:324:                                    ; preds = %323, %330
  %325 = phi i64 [ %332, %330 ], [ %317, %323 ]
  %326 = phi i64 [ %331, %330 ], [ %315, %323 ]
  %327 = getelementptr inbounds i8, i8* %2, i64 %325, !dbg !3454
  %328 = load i8, i8* %327, align 1, !dbg !3454, !tbaa !1055
  %329 = icmp eq i8 %328, 0, !dbg !3456
  br i1 %329, label %348, label %330, !dbg !3457

; <label>:330:                                    ; preds = %324
  %331 = add i64 %326, 1, !dbg !3459
  call void @llvm.dbg.value(metadata i64 %331, i64 0, metadata !3054, metadata !800), !dbg !3425
  call void @llvm.dbg.value(metadata i64 %331, i64 0, metadata !3054, metadata !800), !dbg !3425
  %332 = add i64 %331, %124, !dbg !3460
  %333 = icmp ult i64 %332, %313, !dbg !3450
  br i1 %333, label %324, label %348, !dbg !3453, !llvm.loop !3461

; <label>:334:                                    ; preds = %314
  %335 = icmp ugt i64 %320, 1, !dbg !3463
  %336 = and i1 %116, %335, !dbg !3467
  call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !3079, metadata !800), !dbg !3468
  br i1 %336, label %337, label %355, !dbg !3467

; <label>:337:                                    ; preds = %334
  br label %338, !dbg !3469

; <label>:338:                                    ; preds = %337, %344
  %339 = phi i64 [ %345, %344 ], [ 1, %337 ]
  %340 = add i64 %339, %317, !dbg !3469
  %341 = getelementptr inbounds i8, i8* %2, i64 %340, !dbg !3470
  %342 = load i8, i8* %341, align 1, !dbg !3470, !tbaa !1055
  %343 = sext i8 %342 to i32, !dbg !3470
  switch i32 %343, label %344 [
    i32 91, label %367
    i32 92, label %367
    i32 94, label %367
    i32 96, label %367
    i32 124, label %367
  ], !dbg !3471

; <label>:344:                                    ; preds = %338
  %345 = add nuw i64 %339, 1, !dbg !3472
  call void @llvm.dbg.value(metadata i64 %345, i64 0, metadata !3079, metadata !800), !dbg !3468
  call void @llvm.dbg.value(metadata i64 %345, i64 0, metadata !3079, metadata !800), !dbg !3468
  %346 = icmp ult i64 %345, %320, !dbg !3463
  br i1 %346, label %338, label %354, !dbg !3474, !llvm.loop !3476

; <label>:347:                                    ; preds = %314
  br label %351, !dbg !3429

; <label>:348:                                    ; preds = %324, %330
  %349 = phi i64 [ %331, %330 ], [ %326, %324 ]
  br label %351, !dbg !3429

; <label>:350:                                    ; preds = %314
  br label %351, !dbg !3429

; <label>:351:                                    ; preds = %350, %348, %347, %321
  %352 = phi i64 [ %315, %321 ], [ %315, %347 ], [ %349, %348 ], [ %315, %350 ]
  %353 = phi i8 [ 0, %321 ], [ 0, %347 ], [ 0, %348 ], [ %316, %350 ]
  call void @llvm.dbg.value(metadata i8 %359, i64 0, metadata !3057, metadata !800), !dbg !3429
  call void @llvm.dbg.value(metadata i64 %360, i64 0, metadata !3054, metadata !800), !dbg !3425
  call void @llvm.lifetime.end(i64 4, i8* nonnull %19) #10, !dbg !3479
  br label %364

; <label>:354:                                    ; preds = %344
  br label %355, !dbg !3480

; <label>:355:                                    ; preds = %354, %334
  %356 = load i32, i32* %12, align 4, !dbg !3480, !tbaa !1019
  call void @llvm.dbg.value(metadata i32 %356, i64 0, metadata !3075, metadata !800), !dbg !3446
  %357 = call i32 @iswprint(i32 %356) #10, !dbg !3482
  %358 = icmp eq i32 %357, 0, !dbg !3482
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3057, metadata !800), !dbg !3429
  %359 = select i1 %358, i8 0, i8 %316, !dbg !3483
  call void @llvm.dbg.value(metadata i8 %359, i64 0, metadata !3057, metadata !800), !dbg !3429
  %360 = add i64 %320, %315, !dbg !3484
  call void @llvm.dbg.value(metadata i64 %360, i64 0, metadata !3054, metadata !800), !dbg !3425
  call void @llvm.dbg.value(metadata i8 %359, i64 0, metadata !3057, metadata !800), !dbg !3429
  call void @llvm.dbg.value(metadata i64 %360, i64 0, metadata !3054, metadata !800), !dbg !3425
  call void @llvm.lifetime.end(i64 4, i8* nonnull %19) #10, !dbg !3479
  call void @llvm.dbg.value(metadata %struct.__mbstate_t* %11, i64 0, metadata !3058, metadata !1105), !dbg !3445
  %361 = call i32 @mbsinit(%struct.__mbstate_t* nonnull %11) #13, !dbg !3485
  %362 = icmp eq i32 %361, 0, !dbg !3486
  br i1 %362, label %314, label %363, !dbg !3487, !llvm.loop !3436

; <label>:363:                                    ; preds = %355
  br label %364, !dbg !3489

; <label>:364:                                    ; preds = %363, %351
  %365 = phi i8 [ %353, %351 ], [ %359, %363 ]
  %366 = phi i64 [ %352, %351 ], [ %360, %363 ]
  call void @llvm.lifetime.end(i64 8, i8* nonnull %18) #10, !dbg !3489
  br label %368

; <label>:367:                                    ; preds = %338, %338, %338, %338, %338
  call void @llvm.dbg.value(metadata i8 %359, i64 0, metadata !3057, metadata !800), !dbg !3429
  call void @llvm.dbg.value(metadata i64 %360, i64 0, metadata !3054, metadata !800), !dbg !3425
  call void @llvm.lifetime.end(i64 4, i8* nonnull %19) #10, !dbg !3479
  call void @llvm.lifetime.end(i64 8, i8* nonnull %18) #10, !dbg !3489
  br label %649

; <label>:368:                                    ; preds = %364, %299
  %369 = phi i64 [ %156, %299 ], [ %313, %364 ]
  %370 = phi i64 [ 1, %299 ], [ %366, %364 ]
  %371 = phi i8 [ %307, %299 ], [ %365, %364 ]
  call void @llvm.dbg.value(metadata i8 %371, i64 0, metadata !3057, metadata !800), !dbg !3429
  call void @llvm.dbg.value(metadata i64 %370, i64 0, metadata !3054, metadata !800), !dbg !3425
  call void @llvm.dbg.value(metadata i64 %369, i64 0, metadata !3029, metadata !800), !dbg !3092
  %372 = and i8 %371, 1, !dbg !3490
  %373 = icmp ne i8 %372, 0, !dbg !3490
  call void @llvm.dbg.value(metadata i8 %372, i64 0, metadata !3053, metadata !800), !dbg !3187
  %374 = icmp ult i64 %370, 2, !dbg !3491
  %375 = or i1 %373, %113, !dbg !3492
  %376 = and i1 %374, %375, !dbg !3494
  br i1 %376, label %476, label %377, !dbg !3494

; <label>:377:                                    ; preds = %368
  %378 = add i64 %370, %124, !dbg !3495
  call void @llvm.dbg.value(metadata i64 %378, i64 0, metadata !3086, metadata !800), !dbg !3496
  br label %379, !dbg !3497

; <label>:379:                                    ; preds = %472, %377
  %380 = phi i64 [ %124, %377 ], [ %447, %472 ]
  %381 = phi i64 [ %125, %377 ], [ %473, %472 ]
  %382 = phi i8 [ %128, %377 ], [ %468, %472 ]
  %383 = phi i8 [ %159, %377 ], [ %475, %472 ]
  %384 = phi i8 [ %157, %377 ], [ %445, %472 ]
  %385 = phi i8 [ 0, %377 ], [ %446, %472 ]
  call void @llvm.dbg.value(metadata i8 %385, i64 0, metadata !3052, metadata !800), !dbg !3186
  call void @llvm.dbg.value(metadata i8 %384, i64 0, metadata !3051, metadata !800), !dbg !3185
  call void @llvm.dbg.value(metadata i8 %383, i64 0, metadata !3046, metadata !800), !dbg !3204
  call void @llvm.dbg.value(metadata i8 %382, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %381, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %380, i64 0, metadata !3035, metadata !800), !dbg !3173
  br i1 %375, label %432, label %386, !dbg !3498

; <label>:386:                                    ; preds = %379
  br i1 %112, label %387, label %643, !dbg !3503

; <label>:387:                                    ; preds = %386
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3052, metadata !800), !dbg !3186
  %388 = and i8 %382, 1, !dbg !3507
  %389 = icmp eq i8 %388, 0, !dbg !3507
  %390 = and i1 %114, %389, !dbg !3510
  br i1 %390, label %391, label %407, !dbg !3510

; <label>:391:                                    ; preds = %387
  %392 = icmp ult i64 %381, %131, !dbg !3512
  br i1 %392, label %393, label %395, !dbg !3517

; <label>:393:                                    ; preds = %391
  %394 = getelementptr inbounds i8, i8* %0, i64 %381, !dbg !3519
  store i8 39, i8* %394, align 1, !dbg !3519, !tbaa !1055
  br label %395, !dbg !3519

; <label>:395:                                    ; preds = %393, %391
  %396 = add i64 %381, 1, !dbg !3521
  call void @llvm.dbg.value(metadata i64 %396, i64 0, metadata !3036, metadata !800), !dbg !3098
  %397 = icmp ult i64 %396, %131, !dbg !3523
  br i1 %397, label %398, label %400, !dbg !3527

; <label>:398:                                    ; preds = %395
  %399 = getelementptr inbounds i8, i8* %0, i64 %396, !dbg !3529
  store i8 36, i8* %399, align 1, !dbg !3529, !tbaa !1055
  br label %400, !dbg !3529

; <label>:400:                                    ; preds = %398, %395
  %401 = add i64 %381, 2, !dbg !3531
  call void @llvm.dbg.value(metadata i64 %401, i64 0, metadata !3036, metadata !800), !dbg !3098
  %402 = icmp ult i64 %401, %131, !dbg !3533
  br i1 %402, label %403, label %405, !dbg !3537

; <label>:403:                                    ; preds = %400
  %404 = getelementptr inbounds i8, i8* %0, i64 %401, !dbg !3539
  store i8 39, i8* %404, align 1, !dbg !3539, !tbaa !1055
  br label %405, !dbg !3539

; <label>:405:                                    ; preds = %403, %400
  %406 = add i64 %381, 3, !dbg !3541
  call void @llvm.dbg.value(metadata i64 %406, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3043, metadata !800), !dbg !3106
  br label %407, !dbg !3543

; <label>:407:                                    ; preds = %387, %405
  %408 = phi i64 [ %406, %405 ], [ %381, %387 ]
  %409 = phi i8 [ 1, %405 ], [ %382, %387 ]
  call void @llvm.dbg.value(metadata i8 %409, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %408, i64 0, metadata !3036, metadata !800), !dbg !3098
  %410 = icmp ult i64 %408, %131, !dbg !3545
  br i1 %410, label %411, label %413, !dbg !3549

; <label>:411:                                    ; preds = %407
  %412 = getelementptr inbounds i8, i8* %0, i64 %408, !dbg !3551
  store i8 92, i8* %412, align 1, !dbg !3551, !tbaa !1055
  br label %413, !dbg !3551

; <label>:413:                                    ; preds = %411, %407
  %414 = add i64 %408, 1, !dbg !3553
  call void @llvm.dbg.value(metadata i64 %414, i64 0, metadata !3036, metadata !800), !dbg !3098
  %415 = icmp ult i64 %414, %131, !dbg !3555
  br i1 %415, label %416, label %420, !dbg !3559

; <label>:416:                                    ; preds = %413
  %417 = lshr i8 %383, 6, !dbg !3561
  %418 = or i8 %417, 48, !dbg !3561
  %419 = getelementptr inbounds i8, i8* %0, i64 %414, !dbg !3561
  store i8 %418, i8* %419, align 1, !dbg !3561, !tbaa !1055
  br label %420, !dbg !3561

; <label>:420:                                    ; preds = %416, %413
  %421 = add i64 %408, 2, !dbg !3563
  call void @llvm.dbg.value(metadata i64 %421, i64 0, metadata !3036, metadata !800), !dbg !3098
  %422 = icmp ult i64 %421, %131, !dbg !3565
  br i1 %422, label %423, label %428, !dbg !3569

; <label>:423:                                    ; preds = %420
  %424 = lshr i8 %383, 3, !dbg !3571
  %425 = and i8 %424, 7, !dbg !3571
  %426 = or i8 %425, 48, !dbg !3571
  %427 = getelementptr inbounds i8, i8* %0, i64 %421, !dbg !3571
  store i8 %426, i8* %427, align 1, !dbg !3571, !tbaa !1055
  br label %428, !dbg !3571

; <label>:428:                                    ; preds = %423, %420
  %429 = add i64 %408, 3, !dbg !3573
  call void @llvm.dbg.value(metadata i64 %429, i64 0, metadata !3036, metadata !800), !dbg !3098
  %430 = and i8 %383, 7, !dbg !3575
  %431 = or i8 %430, 48, !dbg !3576
  call void @llvm.dbg.value(metadata i8 %431, i64 0, metadata !3046, metadata !800), !dbg !3204
  br label %441, !dbg !3577

; <label>:432:                                    ; preds = %379
  %433 = and i8 %384, 1, !dbg !3578
  %434 = icmp eq i8 %433, 0, !dbg !3578
  br i1 %434, label %441, label %435, !dbg !3580

; <label>:435:                                    ; preds = %432
  %436 = icmp ult i64 %381, %131, !dbg !3581
  br i1 %436, label %437, label %439, !dbg !3586

; <label>:437:                                    ; preds = %435
  %438 = getelementptr inbounds i8, i8* %0, i64 %381, !dbg !3588
  store i8 92, i8* %438, align 1, !dbg !3588, !tbaa !1055
  br label %439, !dbg !3588

; <label>:439:                                    ; preds = %437, %435
  %440 = add i64 %381, 1, !dbg !3590
  call void @llvm.dbg.value(metadata i64 %440, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3051, metadata !800), !dbg !3185
  br label %441, !dbg !3592

; <label>:441:                                    ; preds = %432, %439, %428
  %442 = phi i64 [ %440, %439 ], [ %381, %432 ], [ %429, %428 ]
  %443 = phi i8 [ %382, %439 ], [ %382, %432 ], [ %409, %428 ]
  %444 = phi i8 [ %383, %439 ], [ %383, %432 ], [ %431, %428 ]
  %445 = phi i8 [ 0, %439 ], [ %384, %432 ], [ %384, %428 ]
  %446 = phi i8 [ %385, %439 ], [ %385, %432 ], [ 1, %428 ]
  call void @llvm.dbg.value(metadata i8 %446, i64 0, metadata !3052, metadata !800), !dbg !3186
  call void @llvm.dbg.value(metadata i8 %445, i64 0, metadata !3051, metadata !800), !dbg !3185
  call void @llvm.dbg.value(metadata i8 %444, i64 0, metadata !3046, metadata !800), !dbg !3204
  call void @llvm.dbg.value(metadata i8 %443, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %442, i64 0, metadata !3036, metadata !800), !dbg !3098
  %447 = add i64 %380, 1, !dbg !3593
  %448 = icmp ugt i64 %378, %447, !dbg !3595
  br i1 %448, label %449, label %541, !dbg !3596

; <label>:449:                                    ; preds = %441
  %450 = and i8 %443, 1, !dbg !3597
  %451 = icmp ne i8 %450, 0, !dbg !3597
  %452 = and i8 %446, 1, !dbg !3601
  %453 = icmp eq i8 %452, 0, !dbg !3601
  %454 = and i1 %451, %453, !dbg !3597
  br i1 %454, label %455, label %466, !dbg !3597

; <label>:455:                                    ; preds = %449
  %456 = icmp ult i64 %442, %131, !dbg !3603
  br i1 %456, label %457, label %459, !dbg !3608

; <label>:457:                                    ; preds = %455
  %458 = getelementptr inbounds i8, i8* %0, i64 %442, !dbg !3610
  store i8 39, i8* %458, align 1, !dbg !3610, !tbaa !1055
  br label %459, !dbg !3610

; <label>:459:                                    ; preds = %457, %455
  %460 = add i64 %442, 1, !dbg !3612
  call void @llvm.dbg.value(metadata i64 %460, i64 0, metadata !3036, metadata !800), !dbg !3098
  %461 = icmp ult i64 %460, %131, !dbg !3614
  br i1 %461, label %462, label %464, !dbg !3618

; <label>:462:                                    ; preds = %459
  %463 = getelementptr inbounds i8, i8* %0, i64 %460, !dbg !3620
  store i8 39, i8* %463, align 1, !dbg !3620, !tbaa !1055
  br label %464, !dbg !3620

; <label>:464:                                    ; preds = %462, %459
  %465 = add i64 %442, 2, !dbg !3622
  call void @llvm.dbg.value(metadata i64 %465, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3043, metadata !800), !dbg !3106
  br label %466, !dbg !3624

; <label>:466:                                    ; preds = %449, %464
  %467 = phi i64 [ %465, %464 ], [ %442, %449 ]
  %468 = phi i8 [ 0, %464 ], [ %443, %449 ]
  call void @llvm.dbg.value(metadata i8 %468, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %467, i64 0, metadata !3036, metadata !800), !dbg !3098
  %469 = icmp ult i64 %467, %131, !dbg !3626
  br i1 %469, label %470, label %472, !dbg !3630

; <label>:470:                                    ; preds = %466
  %471 = getelementptr inbounds i8, i8* %0, i64 %467, !dbg !3632
  store i8 %444, i8* %471, align 1, !dbg !3632, !tbaa !1055
  br label %472, !dbg !3632

; <label>:472:                                    ; preds = %470, %466
  %473 = add i64 %467, 1, !dbg !3634
  call void @llvm.dbg.value(metadata i64 %473, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %447, i64 0, metadata !3035, metadata !800), !dbg !3173
  %474 = getelementptr inbounds i8, i8* %2, i64 %447, !dbg !3636
  %475 = load i8, i8* %474, align 1, !dbg !3636, !tbaa !1055
  call void @llvm.dbg.value(metadata i8 %475, i64 0, metadata !3046, metadata !800), !dbg !3204
  br label %379, !dbg !3637, !llvm.loop !3639

; <label>:476:                                    ; preds
  %477 = phi i64 [ %124, %296 ], [ %124, %275 ], [ %124, %273 ], [ %124, %270 ], [ %124, %261 ], [ %124, %266 ], [ %124, %257 ], [ %124, %210 ], [ %124, %221 ], [ %214, %245 ], [ %124, %216 ], [ %124, %213 ], [ %124, %212 ], [ %124, %211 ], [ %124, %209 ], [ %124, %207 ], [ %124, %193 ], [ %124, %190 ], [ %124, %188 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %155 ], [ %124, %368 ]
  %478 = phi i64 [ %297, %296 ], [ %125, %275 ], [ %125, %273 ], [ %125, %270 ], [ %125, %261 ], [ %125, %266 ], [ %125, %257 ], [ %125, %210 ], [ %125, %221 ], [ %246, %245 ], [ %125, %216 ], [ %125, %213 ], [ %125, %212 ], [ %125, %211 ], [ %125, %209 ], [ %208, %207 ], [ %189, %193 ], [ %189, %190 ], [ %189, %188 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %155 ], [ %125, %368 ]
  %479 = phi i64 [ %281, %296 ], [ %126, %275 ], [ %126, %273 ], [ %126, %270 ], [ %126, %261 ], [ %126, %266 ], [ %126, %257 ], [ %126, %210 ], [ %126, %221 ], [ %126, %245 ], [ %126, %216 ], [ %126, %213 ], [ %126, %212 ], [ %126, %211 ], [ %126, %209 ], [ %126, %207 ], [ %126, %193 ], [ %126, %190 ], [ %126, %188 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %155 ], [ %126, %368 ]
  %480 = phi i64 [ %156, %296 ], [ %156, %275 ], [ %156, %273 ], [ %156, %270 ], [ -1, %261 ], [ %156, %266 ], [ %156, %257 ], [ %156, %210 ], [ %156, %221 ], [ %156, %245 ], [ %156, %216 ], [ %156, %213 ], [ %156, %212 ], [ %156, %211 ], [ %156, %209 ], [ %156, %207 ], [ %156, %193 ], [ %156, %190 ], [ %156, %188 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %156, %155 ], [ %369, %368 ]
  %481 = phi i8 [ 0, %296 ], [ %128, %275 ], [ %128, %273 ], [ %128, %270 ], [ %128, %261 ], [ %128, %266 ], [ %128, %257 ], [ %128, %210 ], [ %128, %221 ], [ %128, %245 ], [ %128, %216 ], [ %128, %213 ], [ %128, %212 ], [ %128, %211 ], [ %128, %209 ], [ %184, %207 ], [ %184, %193 ], [ %184, %190 ], [ %184, %188 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %155 ], [ %128, %368 ]
  %482 = phi i8 [ 1, %296 ], [ 1, %275 ], [ %129, %273 ], [ %129, %270 ], [ %129, %261 ], [ %129, %266 ], [ %129, %257 ], [ %129, %210 ], [ %129, %221 ], [ %129, %245 ], [ %129, %216 ], [ %129, %213 ], [ %129, %212 ], [ %129, %211 ], [ %129, %209 ], [ %129, %207 ], [ %129, %193 ], [ %129, %190 ], [ %129, %188 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %155 ], [ %129, %368 ]
  %483 = phi i8 [ 39, %296 ], [ 39, %275 ], [ %159, %273 ], [ %159, %270 ], [ %159, %261 ], [ %159, %266 ], [ %159, %257 ], [ 63, %210 ], [ 63, %221 ], [ %223, %245 ], [ 63, %216 ], [ 63, %213 ], [ 63, %212 ], [ 63, %211 ], [ 0, %209 ], [ 48, %207 ], [ 48, %193 ], [ 48, %190 ], [ 48, %188 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %155 ], [ %159, %368 ]
  %484 = phi i8 [ 0, %296 ], [ 0, %275 ], [ 0, %273 ], [ 0, %270 ], [ 0, %261 ], [ 0, %266 ], [ 0, %257 ], [ 0, %210 ], [ 0, %221 ], [ 0, %245 ], [ 0, %216 ], [ 0, %213 ], [ 0, %212 ], [ 0, %211 ], [ 0, %209 ], [ 1, %207 ], [ 1, %193 ], [ 1, %190 ], [ 1, %188 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %155 ], [ 0, %368 ]
  %485 = phi i8 [ 1, %296 ], [ 1, %275 ], [ %274, %273 ], [ 0, %270 ], [ 0, %261 ], [ 0, %266 ], [ 0, %257 ], [ 0, %210 ], [ 0, %221 ], [ 0, %245 ], [ 0, %216 ], [ 0, %213 ], [ 0, %212 ], [ 0, %211 ], [ 0, %209 ], [ 0, %207 ], [ 0, %193 ], [ 0, %190 ], [ 0, %188 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ 1, %155 ], [ %372, %368 ]
  %486 = phi i64 [ %282, %296 ], [ %131, %275 ], [ %131, %273 ], [ %131, %270 ], [ %131, %261 ], [ %131, %266 ], [ %131, %257 ], [ %131, %210 ], [ %131, %221 ], [ %131, %245 ], [ %131, %216 ], [ %131, %213 ], [ %131, %212 ], [ %131, %211 ], [ %131, %209 ], [ %131, %207 ], [ %131, %193 ], [ %131, %190 ], [ %131, %188 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %155 ], [ %131, %368 ]
  call void @llvm.dbg.value(metadata i64 %486, i64 0, metadata !3027, metadata !800), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %485, i64 0, metadata !3053, metadata !800), !dbg !3187
  call void @llvm.dbg.value(metadata i8 %484, i64 0, metadata !3052, metadata !800), !dbg !3186
  call void @llvm.dbg.value(metadata i8 %157, i64 0, metadata !3051, metadata !800), !dbg !3185
  call void @llvm.dbg.value(metadata i8 %483, i64 0, metadata !3046, metadata !800), !dbg !3204
  call void @llvm.dbg.value(metadata i8 %482, i64 0, metadata !3044, metadata !800), !dbg !3107
  call void @llvm.dbg.value(metadata i8 %481, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %480, i64 0, metadata !3029, metadata !800), !dbg !3092
  call void @llvm.dbg.value(metadata i64 %479, i64 0, metadata !3037, metadata !800), !dbg !3099
  call void @llvm.dbg.value(metadata i64 %478, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %477, i64 0, metadata !3035, metadata !800), !dbg !3173
  br i1 %107, label %488, label %487, !dbg !3642

; <label>:487:                                    ; preds = %476
  br i1 %117, label %489, label %501, !dbg !3644

; <label>:488:                                    ; preds = %476
  br i1 %20, label %501, label %489, !dbg !3645

; <label>:489:                                    ; preds = %488, %487
  %490 = lshr i8 %483, 5, !dbg !3646
  %491 = zext i8 %490 to i64, !dbg !3646
  %492 = getelementptr inbounds i32, i32* %6, i64 %491, !dbg !3648
  %493 = load i32, i32* %492, align 4, !dbg !3648, !tbaa !1019
  %494 = and i8 %483, 31, !dbg !3649
  %495 = zext i8 %494 to i32, !dbg !3650
  %496 = shl i32 1, %495, !dbg !3651
  %497 = and i32 %493, %496, !dbg !3651
  %498 = icmp eq i32 %497, 0, !dbg !3651
  %499 = icmp eq i8 %157, 0, !dbg !3652
  %500 = and i1 %499, %498, !dbg !3653
  br i1 %500, label %542, label %503, !dbg !3653

; <label>:501:                                    ; preds = %488, %487
  %502 = icmp eq i8 %157, 0, !dbg !3652
  br i1 %502, label %542, label %503, !dbg !3654

; <label>:503:                                    ; preds = %257, %489, %501
  %504 = phi i64 [ %477, %489 ], [ %477, %501 ], [ %124, %257 ]
  %505 = phi i64 [ %478, %489 ], [ %478, %501 ], [ %125, %257 ]
  %506 = phi i64 [ %479, %489 ], [ %479, %501 ], [ %126, %257 ]
  %507 = phi i64 [ %480, %489 ], [ %480, %501 ], [ %156, %257 ]
  %508 = phi i8 [ %481, %489 ], [ %481, %501 ], [ %128, %257 ]
  %509 = phi i8 [ %482, %489 ], [ %482, %501 ], [ %129, %257 ]
  %510 = phi i8 [ %483, %489 ], [ %483, %501 ], [ %258, %257 ]
  %511 = phi i8 [ %485, %489 ], [ %485, %501 ], [ 0, %257 ]
  %512 = phi i64 [ %486, %489 ], [ %486, %501 ], [ %131, %257 ]
  call void @llvm.dbg.value(metadata i64 %512, i64 0, metadata !3027, metadata !800), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %511, i64 0, metadata !3053, metadata !800), !dbg !3187
  call void @llvm.dbg.value(metadata i8 %510, i64 0, metadata !3046, metadata !800), !dbg !3204
  call void @llvm.dbg.value(metadata i8 %509, i64 0, metadata !3044, metadata !800), !dbg !3107
  call void @llvm.dbg.value(metadata i8 %508, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %507, i64 0, metadata !3029, metadata !800), !dbg !3092
  call void @llvm.dbg.value(metadata i64 %506, i64 0, metadata !3037, metadata !800), !dbg !3099
  call void @llvm.dbg.value(metadata i64 %505, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %504, i64 0, metadata !3035, metadata !800), !dbg !3173
  br i1 %112, label %513, label %644, !dbg !3656

; <label>:513:                                    ; preds = %503
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3052, metadata !800), !dbg !3186
  %514 = and i8 %508, 1, !dbg !3659
  %515 = icmp eq i8 %514, 0, !dbg !3659
  %516 = and i1 %114, %515, !dbg !3662
  br i1 %516, label %517, label %533, !dbg !3662

; <label>:517:                                    ; preds = %513
  %518 = icmp ult i64 %505, %512, !dbg !3664
  br i1 %518, label %519, label %521, !dbg !3669

; <label>:519:                                    ; preds = %517
  %520 = getelementptr inbounds i8, i8* %0, i64 %505, !dbg !3671
  store i8 39, i8* %520, align 1, !dbg !3671, !tbaa !1055
  br label %521, !dbg !3671

; <label>:521:                                    ; preds = %519, %517
  %522 = add i64 %505, 1, !dbg !3673
  call void @llvm.dbg.value(metadata i64 %522, i64 0, metadata !3036, metadata !800), !dbg !3098
  %523 = icmp ult i64 %522, %512, !dbg !3675
  br i1 %523, label %524, label %526, !dbg !3679

; <label>:524:                                    ; preds = %521
  %525 = getelementptr inbounds i8, i8* %0, i64 %522, !dbg !3681
  store i8 36, i8* %525, align 1, !dbg !3681, !tbaa !1055
  br label %526, !dbg !3681

; <label>:526:                                    ; preds = %524, %521
  %527 = add i64 %505, 2, !dbg !3683
  call void @llvm.dbg.value(metadata i64 %527, i64 0, metadata !3036, metadata !800), !dbg !3098
  %528 = icmp ult i64 %527, %512, !dbg !3685
  br i1 %528, label %529, label %531, !dbg !3689

; <label>:529:                                    ; preds = %526
  %530 = getelementptr inbounds i8, i8* %0, i64 %527, !dbg !3691
  store i8 39, i8* %530, align 1, !dbg !3691, !tbaa !1055
  br label %531, !dbg !3691

; <label>:531:                                    ; preds = %529, %526
  %532 = add i64 %505, 3, !dbg !3693
  call void @llvm.dbg.value(metadata i64 %532, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !3043, metadata !800), !dbg !3106
  br label %533, !dbg !3695

; <label>:533:                                    ; preds = %513, %531
  %534 = phi i64 [ %532, %531 ], [ %505, %513 ]
  %535 = phi i8 [ 1, %531 ], [ %508, %513 ]
  call void @llvm.dbg.value(metadata i8 %535, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %534, i64 0, metadata !3036, metadata !800), !dbg !3098
  %536 = icmp ult i64 %534, %512, !dbg !3697
  br i1 %536, label %537, label %539, !dbg !3701

; <label>:537:                                    ; preds = %533
  %538 = getelementptr inbounds i8, i8* %0, i64 %534, !dbg !3703
  store i8 92, i8* %538, align 1, !dbg !3703, !tbaa !1055
  br label %539, !dbg !3703

; <label>:539:                                    ; preds = %533, %537
  %540 = add i64 %534, 1, !dbg !3705
  call void @llvm.dbg.value(metadata i64 %540, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %552, i64 0, metadata !3027, metadata !800), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %551, i64 0, metadata !3053, metadata !800), !dbg !3187
  call void @llvm.dbg.value(metadata i8 %550, i64 0, metadata !3052, metadata !800), !dbg !3186
  call void @llvm.dbg.value(metadata i8 %549, i64 0, metadata !3046, metadata !800), !dbg !3204
  call void @llvm.dbg.value(metadata i8 %548, i64 0, metadata !3044, metadata !800), !dbg !3107
  call void @llvm.dbg.value(metadata i8 %547, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %546, i64 0, metadata !3029, metadata !800), !dbg !3092
  call void @llvm.dbg.value(metadata i64 %545, i64 0, metadata !3037, metadata !800), !dbg !3099
  call void @llvm.dbg.value(metadata i64 %544, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %543, i64 0, metadata !3035, metadata !800), !dbg !3173
  br label %569, !dbg !3707

; <label>:541:                                    ; preds = %441
  br label %542, !dbg !3090

; <label>:542:                                    ; preds = %541, %254, %489, %253, %501
  %543 = phi i64 [ %477, %501 ], [ %124, %253 ], [ %477, %489 ], [ %124, %254 ], [ %380, %541 ]
  %544 = phi i64 [ %478, %501 ], [ %125, %253 ], [ %478, %489 ], [ %125, %254 ], [ %442, %541 ]
  %545 = phi i64 [ %479, %501 ], [ %126, %253 ], [ %479, %489 ], [ %126, %254 ], [ %126, %541 ]
  %546 = phi i64 [ %480, %501 ], [ %156, %253 ], [ %480, %489 ], [ %156, %254 ], [ %369, %541 ]
  %547 = phi i8 [ %481, %501 ], [ %128, %253 ], [ %481, %489 ], [ %128, %254 ], [ %443, %541 ]
  %548 = phi i8 [ %482, %501 ], [ %129, %253 ], [ %482, %489 ], [ %129, %254 ], [ %129, %541 ]
  %549 = phi i8 [ %483, %501 ], [ 92, %253 ], [ %483, %489 ], [ 92, %254 ], [ %444, %541 ]
  %550 = phi i8 [ %484, %501 ], [ 0, %253 ], [ %484, %489 ], [ 0, %254 ], [ %446, %541 ]
  %551 = phi i8 [ %485, %501 ], [ 0, %253 ], [ %485, %489 ], [ 0, %254 ], [ %372, %541 ]
  %552 = phi i64 [ %486, %501 ], [ %131, %253 ], [ %486, %489 ], [ %131, %254 ], [ %131, %541 ]
  call void @llvm.dbg.value(metadata i64 %552, i64 0, metadata !3027, metadata !800), !dbg !3090
  call void @llvm.dbg.value(metadata i8 %551, i64 0, metadata !3053, metadata !800), !dbg !3187
  call void @llvm.dbg.value(metadata i8 %550, i64 0, metadata !3052, metadata !800), !dbg !3186
  call void @llvm.dbg.value(metadata i8 %549, i64 0, metadata !3046, metadata !800), !dbg !3204
  call void @llvm.dbg.value(metadata i8 %548, i64 0, metadata !3044, metadata !800), !dbg !3107
  call void @llvm.dbg.value(metadata i8 %547, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %546, i64 0, metadata !3029, metadata !800), !dbg !3092
  call void @llvm.dbg.value(metadata i64 %545, i64 0, metadata !3037, metadata !800), !dbg !3099
  call void @llvm.dbg.value(metadata i64 %544, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i64 %543, i64 0, metadata !3035, metadata !800), !dbg !3173
  %553 = and i8 %547, 1, !dbg !3707
  %554 = icmp ne i8 %553, 0, !dbg !3707
  %555 = and i8 %550, 1, !dbg !3711
  %556 = icmp eq i8 %555, 0, !dbg !3711
  %557 = and i1 %554, %556, !dbg !3707
  br i1 %557, label %558, label %569, !dbg !3707

; <label>:558:                                    ; preds = %542
  %559 = icmp ult i64 %544, %552, !dbg !3713
  br i1 %559, label %560, label %562, !dbg !3718

; <label>:560:                                    ; preds = %558
  %561 = getelementptr inbounds i8, i8* %0, i64 %544, !dbg !3720
  store i8 39, i8* %561, align 1, !dbg !3720, !tbaa !1055
  br label %562, !dbg !3720

; <label>:562:                                    ; preds = %560, %558
  %563 = add i64 %544, 1, !dbg !3722
  call void @llvm.dbg.value(metadata i64 %563, i64 0, metadata !3036, metadata !800), !dbg !3098
  %564 = icmp ult i64 %563, %552, !dbg !3724
  br i1 %564, label %565, label %567, !dbg !3728

; <label>:565:                                    ; preds = %562
  %566 = getelementptr inbounds i8, i8* %0, i64 %563, !dbg !3730
  store i8 39, i8* %566, align 1, !dbg !3730, !tbaa !1055
  br label %567, !dbg !3730

; <label>:567:                                    ; preds = %565, %562
  %568 = add i64 %544, 2, !dbg !3732
  call void @llvm.dbg.value(metadata i64 %568, i64 0, metadata !3036, metadata !800), !dbg !3098
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3043, metadata !800), !dbg !3106
  br label %569, !dbg !3734

; <label>:569:                                    ; preds = %539, %542, %567
  %570 = phi i64 [ %552, %567 ], [ %552, %542 ], [ %512, %539 ]
  %571 = phi i8 [ %551, %567 ], [ %551, %542 ], [ %511, %539 ]
  %572 = phi i8 [ %549, %567 ], [ %549, %542 ], [ %510, %539 ]
  %573 = phi i8 [ %548, %567 ], [ %548, %542 ], [ %509, %539 ]
  %574 = phi i64 [ %546, %567 ], [ %546, %542 ], [ %507, %539 ]
  %575 = phi i64 [ %545, %567 ], [ %545, %542 ], [ %506, %539 ]
  %576 = phi i64 [ %543, %567 ], [ %543, %542 ], [ %504, %539 ]
  %577 = phi i64 [ %568, %567 ], [ %544, %542 ], [ %540, %539 ]
  %578 = phi i8 [ 0, %567 ], [ %547, %542 ], [ %535, %539 ]
  call void @llvm.dbg.value(metadata i8 %578, i64 0, metadata !3043, metadata !800), !dbg !3106
  call void @llvm.dbg.value(metadata i64 %577, i64 0, metadata !3036, metadata !800), !dbg !3098
  %579 = icmp ult i64 %577, %570, !dbg !3736
  br i1 %579, label %580, label %582, !dbg !3740

; <label>:580:                                    ; preds = %569
  %581 = getelementptr inbounds i8, i8* %0, i64 %577, !dbg !3742
  store i8 %572, i8* %581, align 1, !dbg !3742, !tbaa !1055
  br label %582, !dbg !3742

; <label>:582:                                    ; preds = %580, %569
  %583 = add i64 %577, 1, !dbg !3744
  call void @llvm.dbg.value(metadata i64 %583, i64 0, metadata !3036, metadata !800), !dbg !3098
  %584 = and i8 %571, 1, !dbg !3746
  %585 = icmp eq i8 %584, 0, !dbg !3746
  call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3045, metadata !800), !dbg !3108
  %586 = select i1 %585, i8 0, i8 %130, !dbg !3748
  call void @llvm.dbg.value(metadata i8 %586, i64 0, metadata !3045, metadata !800), !dbg !3108
  br label %587, !dbg !3749

; <label>:587:                                    ; preds = %582, %209
  %588 = phi i64 [ %124, %209 ], [ %576, %582 ]
  %589 = phi i64 [ %125, %209 ], [ %583, %582 ]
  %590 = phi i64 [ %126, %209 ], [ %575, %582 ]
  %591 = phi i64 [ %156, %209 ], [ %574, %582 ]
  %592 = phi i8 [ %128, %209 ], [ %578, %582 ]
  %593 = phi i8 [ %129, %209 ], [ %573, %582 ]
  %594 = phi i8 [ %130, %209 ], [ %586, %582 ]
  %595 = phi i64 [ %131, %209 ], [ %570, %582 ]
  %596 = add i64 %588, 1, !dbg !3750
  call void @llvm.dbg.value(metadata i64 %596, i64 0, metadata !3035, metadata !800), !dbg !3173
  br label %123, !dbg !3752, !llvm.loop !3753

; <label>:597:                                    ; preds = %133, %135
  %598 = phi i64 [ %124, %133 ], [ -1, %135 ]
  %599 = icmp eq i64 %125, 0, !dbg !3756
  %600 = and i1 %114, %599, !dbg !3758
  %601 = xor i1 %600, true, !dbg !3758
  %602 = or i1 %112, %601, !dbg !3758
  br i1 %602, label %603, label %648, !dbg !3758

; <label>:603:                                    ; preds = %597
  %604 = and i1 %114, %112, !dbg !3759
  %605 = xor i1 %604, true, !dbg !3759
  %606 = and i8 %129, 1, !dbg !3761
  %607 = icmp eq i8 %606, 0, !dbg !3761
  %608 = or i1 %607, %605, !dbg !3759
  br i1 %608, label %618, label %609, !dbg !3759

; <label>:609:                                    ; preds = %603
  %610 = and i8 %130, 1, !dbg !3763
  %611 = icmp eq i8 %610, 0, !dbg !3763
  br i1 %611, label %614, label %612, !dbg !3766

; <label>:612:                                    ; preds = %609
  %613 = call fastcc i64 @quotearg_buffer_restyled(i8* %0, i64 %126, i8* %2, i64 %598, i32 5, i32 %5, i32* %6, i8* %97, i8* %98), !dbg !3767
  br label %659, !dbg !3768

; <label>:614:                                    ; preds = %609
  %615 = icmp eq i64 %131, 0, !dbg !3769
  %616 = icmp ne i64 %126, 0, !dbg !3771
  %617 = and i1 %616, %615, !dbg !3773
  br i1 %617, label %27, label %618, !dbg !3773

; <label>:618:                                    ; preds = %603, %614
  %619 = icmp ne i8* %100, null, !dbg !3774
  %620 = and i1 %619, %112, !dbg !3776
  br i1 %620, label %621, label %638, !dbg !3776

; <label>:621:                                    ; preds = %618
  call void @llvm.dbg.value(metadata i8* %100, i64 0, metadata !3038, metadata !800), !dbg !3100
  call void @llvm.dbg.value(metadata i64 %125, i64 0, metadata !3036, metadata !800), !dbg !3098
  %622 = load i8, i8* %100, align 1, !dbg !3777, !tbaa !1055
  %623 = icmp eq i8 %622, 0, !dbg !3781
  br i1 %623, label %638, label %624, !dbg !3781

; <label>:624:                                    ; preds = %621
  br label %625, !dbg !3783

; <label>:625:                                    ; preds = %624, %632
  %626 = phi i8 [ %635, %632 ], [ %622, %624 ]
  %627 = phi i8* [ %634, %632 ], [ %100, %624 ]
  %628 = phi i64 [ %633, %632 ], [ %125, %624 ]
  %629 = icmp ult i64 %628, %131, !dbg !3783
  br i1 %629, label %630, label %632, !dbg !3787

; <label>:630:                                    ; preds = %625
  %631 = getelementptr inbounds i8, i8* %0, i64 %628, !dbg !3789
  store i8 %626, i8* %631, align 1, !dbg !3789, !tbaa !1055
  br label %632, !dbg !3789

; <label>:632:                                    ; preds = %630, %625
  %633 = add i64 %628, 1, !dbg !3791
  call void @llvm.dbg.value(metadata i64 %633, i64 0, metadata !3036, metadata !800), !dbg !3098
  %634 = getelementptr inbounds i8, i8* %627, i64 1, !dbg !3793
  call void @llvm.dbg.value(metadata i8* %634, i64 0, metadata !3038, metadata !800), !dbg !3100
  call void @llvm.dbg.value(metadata i8* %634, i64 0, metadata !3038, metadata !800), !dbg !3100
  call void @llvm.dbg.value(metadata i64 %633, i64 0, metadata !3036, metadata !800), !dbg !3098
  %635 = load i8, i8* %634, align 1, !dbg !3777, !tbaa !1055
  %636 = icmp eq i8 %635, 0, !dbg !3781
  br i1 %636, label %637, label %625, !dbg !3781, !llvm.loop !3795

; <label>:637:                                    ; preds = %632
  br label %638, !dbg !3098

; <label>:638:                                    ; preds = %637, %621, %618
  %639 = phi i64 [ %125, %618 ], [ %125, %621 ], [ %633, %637 ]
  call void @llvm.dbg.value(metadata i64 %639, i64 0, metadata !3036, metadata !800), !dbg !3098
  %640 = icmp ult i64 %639, %131, !dbg !3798
  br i1 %640, label %641, label %659, !dbg !3800

; <label>:641:                                    ; preds = %638
  %642 = getelementptr inbounds i8, i8* %0, i64 %639, !dbg !3801
  store i8 0, i8* %642, align 1, !dbg !3802, !tbaa !1055
  br label %659, !dbg !3801

; <label>:643:                                    ; preds = %386
  br label %649, !dbg !3090

; <label>:644:                                    ; preds = %148, %161, %211, %225, %253, %255, %273, %276, %503
  %645 = phi i32 [ %96, %148 ], [ %96, %161 ], [ 2, %211 ], [ 5, %225 ], [ 2, %253 ], [ 2, %255 ], [ 2, %273 ], [ 2, %276 ], [ %96, %503 ]
  %646 = phi i64 [ %146, %148 ], [ %156, %161 ], [ %156, %211 ], [ %156, %225 ], [ %156, %253 ], [ %156, %255 ], [ %156, %273 ], [ %156, %276 ], [ %507, %503 ]
  %647 = phi i64 [ %131, %148 ], [ %131, %161 ], [ %131, %211 ], [ %131, %225 ], [ %131, %253 ], [ %131, %255 ], [ %131, %273 ], [ %131, %276 ], [ %512, %503 ]
  br label %649, !dbg !3090

; <label>:648:                                    ; preds = %597
  br label %649, !dbg !3090

; <label>:649:                                    ; preds = %648, %644, %643, %367
  %650 = phi i32 [ 2, %367 ], [ %96, %643 ], [ %645, %644 ], [ %96, %648 ]
  %651 = phi i64 [ %313, %367 ], [ %369, %643 ], [ %646, %644 ], [ %598, %648 ]
  %652 = phi i64 [ %131, %367 ], [ %131, %643 ], [ %647, %644 ], [ %131, %648 ]
  call void @llvm.dbg.value(metadata i64 %652, i64 0, metadata !3027, metadata !800), !dbg !3090
  call void @llvm.dbg.value(metadata i64 %651, i64 0, metadata !3029, metadata !800), !dbg !3092
  %653 = icmp ne i32 %650, 2, !dbg !3803
  %654 = icmp eq i8 %104, 0, !dbg !3805
  %655 = or i1 %653, %654, !dbg !3807
  call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !3030, metadata !800), !dbg !3093
  %656 = select i1 %655, i32 %650, i32 4, !dbg !3807
  call void @llvm.dbg.value(metadata i32 %656, i64 0, metadata !3030, metadata !800), !dbg !3093
  %657 = and i32 %5, -3, !dbg !3808
  %658 = call fastcc i64 @quotearg_buffer_restyled(i8* %0, i64 %652, i8* %2, i64 %651, i32 %656, i32 %657, i32* null, i8* %97, i8* %98), !dbg !3809
  br label %659, !dbg !3810

; <label>:659:                                    ; preds = %638, %641, %649, %612
  %660 = phi i64 [ %658, %649 ], [ %613, %612 ], [ %639, %641 ], [ %639, %638 ]
  ret i64 %660, !dbg !3811
}

; Function Attrs: nounwind
declare i64 @__ctype_get_mb_cur_max() local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i8* @gettext_quote(i8*, i32) unnamed_addr #6 !dbg !3812 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !3816, metadata !800), !dbg !3820
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !3817, metadata !800), !dbg !3821
  %3 = tail call i8* @dcgettext(i8* null, i8* %0, i32 5) #10, !dbg !3822
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !3818, metadata !800), !dbg !3823
  %4 = icmp eq i8* %3, %0, !dbg !3824
  br i1 %4, label %5, label %75, !dbg !3826

; <label>:5:                                      ; preds = %2
  %6 = tail call i8* @locale_charset() #10, !dbg !3827
  tail call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !3819, metadata !800), !dbg !3828
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3829, metadata !800), !dbg !3845
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3843, metadata !800), !dbg !3848
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3844, metadata !800), !dbg !3849
  %7 = load i8, i8* %6, align 1, !tbaa !1055
  %8 = sext i8 %7 to i32
  %9 = and i32 %8, -33, !dbg !3850
  switch i32 %9, label %72 [
    i32 85, label %10
    i32 71, label %38
  ], !dbg !3850

; <label>:10:                                     ; preds = %5
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3853, metadata !800), !dbg !3867
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3865, metadata !800), !dbg !3871
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3866, metadata !800), !dbg !3872
  %11 = getelementptr inbounds i8, i8* %6, i64 1
  %12 = load i8, i8* %11, align 1, !tbaa !1055
  %13 = sext i8 %12 to i32
  %14 = and i32 %13, -33, !dbg !3873
  %15 = icmp eq i32 %14, 84, !dbg !3873
  br i1 %15, label %16, label %72, !dbg !3873

; <label>:16:                                     ; preds = %10
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3876, metadata !800), !dbg !3889
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3887, metadata !800), !dbg !3893
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3888, metadata !800), !dbg !3894
  %17 = getelementptr inbounds i8, i8* %6, i64 2
  %18 = load i8, i8* %17, align 1, !tbaa !1055
  %19 = sext i8 %18 to i32
  %20 = and i32 %19, -33, !dbg !3895
  %21 = icmp eq i32 %20, 70, !dbg !3895
  br i1 %21, label %22, label %72, !dbg !3895

; <label>:22:                                     ; preds = %16
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3898, metadata !800), !dbg !3910
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3908, metadata !800), !dbg !3914
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3909, metadata !800), !dbg !3915
  %23 = getelementptr inbounds i8, i8* %6, i64 3
  %24 = load i8, i8* %23, align 1, !tbaa !1055
  %25 = icmp eq i8 %24, 45, !dbg !3916
  br i1 %25, label %26, label %72, !dbg !3919

; <label>:26:                                     ; preds = %22
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3921, metadata !800), !dbg !3932
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3930, metadata !800), !dbg !3936
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3931, metadata !800), !dbg !3937
  %27 = getelementptr inbounds i8, i8* %6, i64 4
  %28 = load i8, i8* %27, align 1, !tbaa !1055
  %29 = icmp eq i8 %28, 56, !dbg !3938
  br i1 %29, label %30, label %72, !dbg !3941

; <label>:30:                                     ; preds = %26
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3943, metadata !800), !dbg !3953
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3951, metadata !800), !dbg !3957
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3952, metadata !800), !dbg !3958
  %31 = getelementptr inbounds i8, i8* %6, i64 5
  %32 = load i8, i8* %31, align 1, !tbaa !1055
  %33 = icmp eq i8 %32, 0, !dbg !3959
  br i1 %33, label %34, label %72, !dbg !3962

; <label>:34:                                     ; preds = %30
  %35 = load i8, i8* %0, align 1, !dbg !3964, !tbaa !1055
  %36 = icmp eq i8 %35, 96, !dbg !3965
  %37 = select i1 %36, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.95, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.96, i64 0, i64 0), !dbg !3964
  br label %75, !dbg !3966

; <label>:38:                                     ; preds = %5
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3853, metadata !800), !dbg !3967
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3865, metadata !800), !dbg !3971
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3866, metadata !800), !dbg !3972
  %39 = getelementptr inbounds i8, i8* %6, i64 1
  %40 = load i8, i8* %39, align 1, !tbaa !1055
  %41 = sext i8 %40 to i32
  %42 = and i32 %41, -33, !dbg !3973
  %43 = icmp eq i32 %42, 66, !dbg !3973
  br i1 %43, label %44, label %72, !dbg !3973

; <label>:44:                                     ; preds = %38
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3876, metadata !800), !dbg !3974
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3887, metadata !800), !dbg !3976
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3888, metadata !800), !dbg !3977
  %45 = getelementptr inbounds i8, i8* %6, i64 2
  %46 = load i8, i8* %45, align 1, !tbaa !1055
  %47 = icmp eq i8 %46, 49, !dbg !3978
  br i1 %47, label %48, label %72, !dbg !3980

; <label>:48:                                     ; preds = %44
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3898, metadata !800), !dbg !3982
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3908, metadata !800), !dbg !3984
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3909, metadata !800), !dbg !3985
  %49 = getelementptr inbounds i8, i8* %6, i64 3
  %50 = load i8, i8* %49, align 1, !tbaa !1055
  %51 = icmp eq i8 %50, 56, !dbg !3986
  br i1 %51, label %52, label %72, !dbg !3987

; <label>:52:                                     ; preds = %48
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3921, metadata !800), !dbg !3988
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3930, metadata !800), !dbg !3990
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3931, metadata !800), !dbg !3991
  %53 = getelementptr inbounds i8, i8* %6, i64 4
  %54 = load i8, i8* %53, align 1, !tbaa !1055
  %55 = icmp eq i8 %54, 48, !dbg !3992
  br i1 %55, label %56, label %72, !dbg !3993

; <label>:56:                                     ; preds = %52
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !3943, metadata !800), !dbg !3994
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3951, metadata !800), !dbg !3996
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !3952, metadata !800), !dbg !3997
  %57 = getelementptr inbounds i8, i8* %6, i64 5
  %58 = load i8, i8* %57, align 1, !tbaa !1055
  %59 = icmp eq i8 %58, 51, !dbg !3998
  br i1 %59, label %60, label %72, !dbg !3999

; <label>:60:                                     ; preds = %56
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !4000, metadata !800), !dbg !4009
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4007, metadata !800), !dbg !4013
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4008, metadata !800), !dbg !4014
  %61 = getelementptr inbounds i8, i8* %6, i64 6
  %62 = load i8, i8* %61, align 1, !tbaa !1055
  %63 = icmp eq i8 %62, 48, !dbg !4015
  br i1 %63, label %64, label %72, !dbg !4018

; <label>:64:                                     ; preds = %60
  tail call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !4020, metadata !800), !dbg !4028
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4026, metadata !800), !dbg !4032
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !4027, metadata !800), !dbg !4033
  %65 = getelementptr inbounds i8, i8* %6, i64 7
  %66 = load i8, i8* %65, align 1, !tbaa !1055
  %67 = icmp eq i8 %66, 0, !dbg !4034
  br i1 %67, label %68, label %72, !dbg !4037

; <label>:68:                                     ; preds = %64
  %69 = load i8, i8* %0, align 1, !dbg !4038, !tbaa !1055
  %70 = icmp eq i8 %69, 96, !dbg !4039
  %71 = select i1 %70, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.97, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.98, i64 0, i64 0), !dbg !4038
  br label %75, !dbg !4040

; <label>:72:                                     ; preds = %5, %30, %26, %22, %16, %10, %64, %60, %56, %52, %48, %44, %38
  %73 = icmp eq i32 %1, 9, !dbg !4041
  %74 = select i1 %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.93, i64 0, i64 0), !dbg !4042
  br label %75, !dbg !4043

; <label>:75:                                     ; preds = %2, %72, %68, %34
  %76 = phi i8* [ %37, %34 ], [ %71, %68 ], [ %74, %72 ], [ %3, %2 ]
  ret i8* %76, !dbg !4044
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @iswprint(i32) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @mbsinit(%struct.__mbstate_t*) local_unnamed_addr #4

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_alloc(i8*, i64, %struct.quoting_options*) local_unnamed_addr #6 !dbg !4045 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4049, metadata !800), !dbg !4052
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4050, metadata !800), !dbg !4053
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %2, i64 0, metadata !4051, metadata !800), !dbg !4054
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4055, metadata !800) #10, !dbg !4068
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4060, metadata !800) #10, !dbg !4070
  tail call void @llvm.dbg.value(metadata i64* null, i64 0, metadata !4061, metadata !800) #10, !dbg !4071
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %2, i64 0, metadata !4062, metadata !800) #10, !dbg !4072
  %4 = icmp ne %struct.quoting_options* %2, null, !dbg !4073
  %5 = select i1 %4, %struct.quoting_options* %2, %struct.quoting_options* @default_quoting_options, !dbg !4073
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4063, metadata !800) #10, !dbg !4074
  %6 = tail call i32* @__errno_location() #1, !dbg !4075
  %7 = load i32, i32* %6, align 4, !dbg !4075, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %7, i64 0, metadata !4064, metadata !800) #10, !dbg !4076
  %8 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 1, !dbg !4077
  %9 = load i32, i32* %8, align 4, !dbg !4077, !tbaa !2958
  %10 = or i32 %9, 1, !dbg !4078
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !4065, metadata !800) #10, !dbg !4079
  %11 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 0, !dbg !4080
  %12 = load i32, i32* %11, align 8, !dbg !4080, !tbaa !2896
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 2, i64 0, !dbg !4081
  %14 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 3, !dbg !4082
  %15 = load i8*, i8** %14, align 8, !dbg !4082, !tbaa !2985
  %16 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 4, !dbg !4083
  %17 = load i8*, i8** %16, align 8, !dbg !4083, !tbaa !2988
  %18 = tail call fastcc i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %0, i64 %1, i32 %12, i32 %10, i32* %13, i8* %15, i8* %17) #10, !dbg !4084
  %19 = add i64 %18, 1, !dbg !4085
  tail call void @llvm.dbg.value(metadata i64 %19, i64 0, metadata !4066, metadata !800) #10, !dbg !4086
  tail call void @llvm.dbg.value(metadata i64 %19, i64 0, metadata !4087, metadata !800) #10, !dbg !4092
  %20 = tail call noalias i8* @xmalloc(i64 %19) #10, !dbg !4094
  tail call void @llvm.dbg.value(metadata i8* %20, i64 0, metadata !4067, metadata !800) #10, !dbg !4095
  %21 = load i32, i32* %11, align 8, !dbg !4096, !tbaa !2896
  %22 = load i8*, i8** %14, align 8, !dbg !4097, !tbaa !2985
  %23 = load i8*, i8** %16, align 8, !dbg !4098, !tbaa !2988
  %24 = tail call fastcc i64 @quotearg_buffer_restyled(i8* %20, i64 %19, i8* %0, i64 %1, i32 %21, i32 %10, i32* %13, i8* %22, i8* %23) #10, !dbg !4099
  store i32 %7, i32* %6, align 4, !dbg !4100, !tbaa !1019
  ret i8* %20, !dbg !4101
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_alloc_mem(i8*, i64, i64*, %struct.quoting_options*) local_unnamed_addr #6 !dbg !4056 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4055, metadata !800), !dbg !4102
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4060, metadata !800), !dbg !4103
  tail call void @llvm.dbg.value(metadata i64* %2, i64 0, metadata !4061, metadata !800), !dbg !4104
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %3, i64 0, metadata !4062, metadata !800), !dbg !4105
  %5 = icmp ne %struct.quoting_options* %3, null, !dbg !4106
  %6 = select i1 %5, %struct.quoting_options* %3, %struct.quoting_options* @default_quoting_options, !dbg !4106
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %6, i64 0, metadata !4063, metadata !800), !dbg !4107
  %7 = tail call i32* @__errno_location() #1, !dbg !4108
  %8 = load i32, i32* %7, align 4, !dbg !4108, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !4064, metadata !800), !dbg !4109
  %9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 1, !dbg !4110
  %10 = load i32, i32* %9, align 4, !dbg !4110, !tbaa !2958
  %11 = icmp ne i64* %2, null, !dbg !4111
  %12 = xor i1 %11, true, !dbg !4111
  %13 = zext i1 %12 to i32, !dbg !4111
  %14 = or i32 %10, %13, !dbg !4112
  tail call void @llvm.dbg.value(metadata i32 %14, i64 0, metadata !4065, metadata !800), !dbg !4113
  %15 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 0, !dbg !4114
  %16 = load i32, i32* %15, align 8, !dbg !4114, !tbaa !2896
  %17 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 2, i64 0, !dbg !4115
  %18 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 3, !dbg !4116
  %19 = load i8*, i8** %18, align 8, !dbg !4116, !tbaa !2985
  %20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 4, !dbg !4117
  %21 = load i8*, i8** %20, align 8, !dbg !4117, !tbaa !2988
  %22 = tail call fastcc i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %0, i64 %1, i32 %16, i32 %14, i32* %17, i8* %19, i8* %21), !dbg !4118
  %23 = add i64 %22, 1, !dbg !4119
  tail call void @llvm.dbg.value(metadata i64 %23, i64 0, metadata !4066, metadata !800), !dbg !4120
  tail call void @llvm.dbg.value(metadata i64 %23, i64 0, metadata !4087, metadata !800) #10, !dbg !4121
  %24 = tail call noalias i8* @xmalloc(i64 %23) #10, !dbg !4123
  tail call void @llvm.dbg.value(metadata i8* %24, i64 0, metadata !4067, metadata !800), !dbg !4124
  %25 = load i32, i32* %15, align 8, !dbg !4125, !tbaa !2896
  %26 = load i8*, i8** %18, align 8, !dbg !4126, !tbaa !2985
  %27 = load i8*, i8** %20, align 8, !dbg !4127, !tbaa !2988
  %28 = tail call fastcc i64 @quotearg_buffer_restyled(i8* %24, i64 %23, i8* %0, i64 %1, i32 %25, i32 %14, i32* %17, i8* %26, i8* %27), !dbg !4128
  store i32 %8, i32* %7, align 4, !dbg !4129, !tbaa !1019
  br i1 %11, label %29, label %30, !dbg !4130

; <label>:29:                                     ; preds = %4
  store i64 %22, i64* %2, align 8, !dbg !4131, !tbaa !1090
  br label %30, !dbg !4133

; <label>:30:                                     ; preds = %29, %4
  ret i8* %24, !dbg !4134
}

; Function Attrs: nounwind sspstrong uwtable
define void @quotearg_free() local_unnamed_addr #6 !dbg !4135 {
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !4139, !tbaa !808
  tail call void @llvm.dbg.value(metadata %struct.slotvec* %1, i64 0, metadata !4137, metadata !800), !dbg !4140
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !4138, metadata !800), !dbg !4141
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !4138, metadata !800), !dbg !4141
  %2 = load i32, i32* @nslots, align 4, !dbg !4142, !tbaa !1019
  %3 = icmp sgt i32 %2, 1, !dbg !4146
  br i1 %3, label %4, label %14, !dbg !4147

; <label>:4:                                      ; preds = %0
  br label %5, !dbg !4149

; <label>:5:                                      ; preds = %4, %5
  %6 = phi i64 [ %9, %5 ], [ 1, %4 ]
  %7 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %1, i64 %6, i32 1, !dbg !4149
  %8 = load i8*, i8** %7, align 8, !dbg !4149, !tbaa !4150
  tail call void @free(i8* %8) #10, !dbg !4152
  %9 = add nuw i64 %6, 1, !dbg !4153
  %10 = load i32, i32* @nslots, align 4, !dbg !4142, !tbaa !1019
  %11 = sext i32 %10 to i64, !dbg !4146
  %12 = icmp slt i64 %9, %11, !dbg !4146
  br i1 %12, label %5, label %13, !dbg !4147, !llvm.loop !4155

; <label>:13:                                     ; preds = %5
  br label %14, !dbg !4158

; <label>:14:                                     ; preds = %13, %0
  %15 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %1, i64 0, i32 1, !dbg !4158
  %16 = load i8*, i8** %15, align 8, !dbg !4158, !tbaa !4150
  %17 = icmp eq i8* %16, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !4160
  br i1 %17, label %19, label %18, !dbg !4161

; <label>:18:                                     ; preds = %14
  tail call void @free(i8* %16) #10, !dbg !4162
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i64 0, i32 0), align 8, !dbg !4164, !tbaa !4165
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i64 0, i32 1), align 8, !dbg !4166, !tbaa !4150
  br label %19, !dbg !4167

; <label>:19:                                     ; preds = %14, %18
  %20 = icmp eq %struct.slotvec* %1, @slotvec0, !dbg !4168
  br i1 %20, label %23, label %21, !dbg !4170

; <label>:21:                                     ; preds = %19
  %22 = bitcast %struct.slotvec* %1 to i8*, !dbg !4171
  tail call void @free(i8* %22) #10, !dbg !4173
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !4174, !tbaa !808
  br label %23, !dbg !4175

; <label>:23:                                     ; preds = %19, %21
  store i32 1, i32* @nslots, align 4, !dbg !4176, !tbaa !1019
  ret void, !dbg !4177
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_n(i32, i8*) local_unnamed_addr #6 !dbg !4178 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4182, metadata !800), !dbg !4184
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4183, metadata !800), !dbg !4185
  %3 = tail call fastcc i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* nonnull @default_quoting_options), !dbg !4186
  ret i8* %3, !dbg !4187
}

; Function Attrs: nounwind sspstrong uwtable
define internal fastcc i8* @quotearg_n_options(i32, i8*, i64, %struct.quoting_options*) unnamed_addr #6 !dbg !4188 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4192, metadata !800), !dbg !4206
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4193, metadata !800), !dbg !4207
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !4194, metadata !800), !dbg !4208
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %3, i64 0, metadata !4195, metadata !800), !dbg !4209
  %5 = tail call i32* @__errno_location() #1, !dbg !4210
  %6 = load i32, i32* %5, align 4, !dbg !4210, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %6, i64 0, metadata !4196, metadata !800), !dbg !4211
  %7 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !4212, !tbaa !808
  tail call void @llvm.dbg.value(metadata %struct.slotvec* %7, i64 0, metadata !4197, metadata !800), !dbg !4213
  %8 = icmp slt i32 %0, 0, !dbg !4214
  br i1 %8, label %9, label %10, !dbg !4216

; <label>:9:                                      ; preds = %4
  tail call void @abort() #14, !dbg !4217
  unreachable, !dbg !4217

; <label>:10:                                     ; preds = %4
  %11 = load i32, i32* @nslots, align 4, !dbg !4218, !tbaa !1019
  %12 = icmp sgt i32 %11, %0, !dbg !4219
  br i1 %12, label %34, label %13, !dbg !4220

; <label>:13:                                     ; preds = %10
  %14 = icmp eq %struct.slotvec* %7, @slotvec0, !dbg !4221
  %15 = icmp ugt i32 %0, 2147483646, !dbg !4222
  br i1 %15, label %16, label %17, !dbg !4224

; <label>:16:                                     ; preds = %13
  tail call void @xalloc_die() #14, !dbg !4225
  unreachable, !dbg !4225

; <label>:17:                                     ; preds = %13
  %18 = bitcast %struct.slotvec* %7 to i8*, !dbg !4226
  %19 = select i1 %14, i8* null, i8* %18, !dbg !4226
  %20 = add nsw i32 %0, 1, !dbg !4228
  %21 = sext i32 %20 to i64, !dbg !4229
  %22 = shl nsw i64 %21, 4, !dbg !4230
  %23 = tail call i8* @xrealloc(i8* %19, i64 %22) #10, !dbg !4231
  %24 = bitcast i8* %23 to %struct.slotvec*, !dbg !4231
  tail call void @llvm.dbg.value(metadata %struct.slotvec* %24, i64 0, metadata !4197, metadata !800), !dbg !4213
  store i8* %23, i8** bitcast (%struct.slotvec** @slotvec to i8**), align 8, !dbg !4232, !tbaa !808
  br i1 %14, label %25, label %26, !dbg !4233

; <label>:25:                                     ; preds = %17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i32 8, i1 false), !dbg !4234, !tbaa.struct !4236
  br label %26, !dbg !4237

; <label>:26:                                     ; preds = %25, %17
  %27 = load i32, i32* @nslots, align 4, !dbg !4238, !tbaa !1019
  %28 = sext i32 %27 to i64, !dbg !4239
  %29 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %24, i64 %28, !dbg !4239
  %30 = bitcast %struct.slotvec* %29 to i8*, !dbg !4240
  %31 = sub nsw i32 %20, %27, !dbg !4241
  %32 = sext i32 %31 to i64, !dbg !4242
  %33 = shl nsw i64 %32, 4, !dbg !4243
  tail call void @llvm.memset.p0i8.i64(i8* %30, i8 0, i64 %33, i32 8, i1 false), !dbg !4240
  store i32 %20, i32* @nslots, align 4, !dbg !4244, !tbaa !1019
  br label %34, !dbg !4245

; <label>:34:                                     ; preds = %10, %26
  %35 = phi %struct.slotvec* [ %24, %26 ], [ %7, %10 ]
  tail call void @llvm.dbg.value(metadata %struct.slotvec* %35, i64 0, metadata !4197, metadata !800), !dbg !4213
  %36 = sext i32 %0 to i64, !dbg !4246
  %37 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %35, i64 %36, i32 0, !dbg !4247
  %38 = load i64, i64* %37, align 8, !dbg !4247, !tbaa !4165
  tail call void @llvm.dbg.value(metadata i64 %38, i64 0, metadata !4201, metadata !800), !dbg !4248
  %39 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %35, i64 %36, i32 1, !dbg !4249
  %40 = load i8*, i8** %39, align 8, !dbg !4249, !tbaa !4150
  tail call void @llvm.dbg.value(metadata i8* %40, i64 0, metadata !4203, metadata !800), !dbg !4250
  %41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i64 0, i32 1, !dbg !4251
  %42 = load i32, i32* %41, align 4, !dbg !4251, !tbaa !2958
  %43 = or i32 %42, 1, !dbg !4252
  tail call void @llvm.dbg.value(metadata i32 %43, i64 0, metadata !4204, metadata !800), !dbg !4253
  %44 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i64 0, i32 0, !dbg !4254
  %45 = load i32, i32* %44, align 8, !dbg !4254, !tbaa !2896
  %46 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i64 0, i32 2, i64 0, !dbg !4255
  %47 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i64 0, i32 3, !dbg !4256
  %48 = load i8*, i8** %47, align 8, !dbg !4256, !tbaa !2985
  %49 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i64 0, i32 4, !dbg !4257
  %50 = load i8*, i8** %49, align 8, !dbg !4257, !tbaa !2988
  %51 = tail call fastcc i64 @quotearg_buffer_restyled(i8* %40, i64 %38, i8* %1, i64 %2, i32 %45, i32 %43, i32* %46, i8* %48, i8* %50), !dbg !4258
  tail call void @llvm.dbg.value(metadata i64 %51, i64 0, metadata !4205, metadata !800), !dbg !4259
  %52 = icmp ugt i64 %38, %51, !dbg !4260
  br i1 %52, label %63, label %53, !dbg !4262

; <label>:53:                                     ; preds = %34
  %54 = add i64 %51, 1, !dbg !4263
  tail call void @llvm.dbg.value(metadata i64 %54, i64 0, metadata !4201, metadata !800), !dbg !4248
  store i64 %54, i64* %37, align 8, !dbg !4265, !tbaa !4165
  %55 = icmp eq i8* %40, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !4266
  br i1 %55, label %57, label %56, !dbg !4268

; <label>:56:                                     ; preds = %53
  tail call void @free(i8* %40) #10, !dbg !4269
  br label %57, !dbg !4269

; <label>:57:                                     ; preds = %53, %56
  tail call void @llvm.dbg.value(metadata i64 %54, i64 0, metadata !4087, metadata !800) #10, !dbg !4270
  %58 = tail call noalias i8* @xmalloc(i64 %54) #10, !dbg !4272
  tail call void @llvm.dbg.value(metadata i8* %58, i64 0, metadata !4203, metadata !800), !dbg !4250
  store i8* %58, i8** %39, align 8, !dbg !4273, !tbaa !4150
  %59 = load i32, i32* %44, align 8, !dbg !4274, !tbaa !2896
  %60 = load i8*, i8** %47, align 8, !dbg !4275, !tbaa !2985
  %61 = load i8*, i8** %49, align 8, !dbg !4276, !tbaa !2988
  %62 = tail call fastcc i64 @quotearg_buffer_restyled(i8* %58, i64 %54, i8* %1, i64 %2, i32 %59, i32 %43, i32* %46, i8* %60, i8* %61), !dbg !4277
  br label %63, !dbg !4278

; <label>:63:                                     ; preds = %34, %57
  %64 = phi i8* [ %58, %57 ], [ %40, %34 ]
  tail call void @llvm.dbg.value(metadata i8* %64, i64 0, metadata !4203, metadata !800), !dbg !4250
  store i32 %6, i32* %5, align 4, !dbg !4279, !tbaa !1019
  ret i8* %64, !dbg !4280
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_n_mem(i32, i8*, i64) local_unnamed_addr #6 !dbg !4281 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4285, metadata !800), !dbg !4288
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4286, metadata !800), !dbg !4289
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !4287, metadata !800), !dbg !4290
  %4 = tail call fastcc i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* nonnull @default_quoting_options), !dbg !4291
  ret i8* %4, !dbg !4292
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg(i8*) local_unnamed_addr #6 !dbg !4293 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4296, metadata !800), !dbg !4297
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4182, metadata !800) #10, !dbg !4298
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4183, metadata !800) #10, !dbg !4300
  %2 = tail call fastcc i8* @quotearg_n_options(i32 0, i8* %0, i64 -1, %struct.quoting_options* nonnull @default_quoting_options) #10, !dbg !4301
  ret i8* %2, !dbg !4302
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_mem(i8*, i64) local_unnamed_addr #6 !dbg !4303 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4307, metadata !800), !dbg !4309
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4308, metadata !800), !dbg !4310
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4285, metadata !800) #10, !dbg !4311
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4286, metadata !800) #10, !dbg !4313
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4287, metadata !800) #10, !dbg !4314
  %3 = tail call fastcc i8* @quotearg_n_options(i32 0, i8* %0, i64 %1, %struct.quoting_options* nonnull @default_quoting_options) #10, !dbg !4315
  ret i8* %3, !dbg !4316
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_n_style(i32, i32, i8*) local_unnamed_addr #6 !dbg !4317 {
  %4 = alloca [52 x i8], align 4
  tail call void @llvm.dbg.declare(metadata [52 x i8]* %4, metadata !4325, metadata !4331), !dbg !4332
  %5 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4321, metadata !800), !dbg !4334
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4322, metadata !800), !dbg !4335
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4323, metadata !800), !dbg !4336
  %6 = bitcast %struct.quoting_options* %5 to i8*, !dbg !4337
  call void @llvm.lifetime.start(i64 56, i8* nonnull %6) #10, !dbg !4337
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4324, metadata !1105), !dbg !4338
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4330, metadata !800) #10, !dbg !4339
  %7 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 0, !dbg !4340
  call void @llvm.lifetime.start(i64 52, i8* nonnull %7), !dbg !4340
  tail call void @llvm.dbg.declare(metadata %struct.quoting_options* undef, metadata !4325, metadata !800) #10, !dbg !4332
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4325, metadata !4341) #10, !dbg !4332
  call void @llvm.memset.p0i8.i64(i8* nonnull %7, i8 0, i64 52, i32 4, i1 false), !dbg !4332
  %8 = icmp eq i32 %1, 10, !dbg !4342
  br i1 %8, label %9, label %10, !dbg !4344

; <label>:9:                                      ; preds = %3
  tail call void @abort() #14, !dbg !4345, !noalias !4346
  unreachable, !dbg !4345

; <label>:10:                                     ; preds = %3
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4325, metadata !4341) #10, !dbg !4332
  %11 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 0, !dbg !4349
  store i32 %1, i32* %11, align 8, !dbg !4349, !alias.scope !4346
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 1, !dbg !4349
  %13 = bitcast i32* %12 to i8*, !dbg !4349
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* nonnull %7, i64 52, i32 4, i1 false) #10, !dbg !4349
  call void @llvm.lifetime.end(i64 52, i8* nonnull %7), !dbg !4350
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4324, metadata !1105), !dbg !4338
  %14 = call fastcc i8* @quotearg_n_options(i32 %0, i8* %2, i64 -1, %struct.quoting_options* nonnull %5), !dbg !4351
  call void @llvm.lifetime.end(i64 56, i8* nonnull %6) #10, !dbg !4352
  ret i8* %14, !dbg !4353
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_n_style_mem(i32, i32, i8*, i64) local_unnamed_addr #6 !dbg !4354 {
  %5 = alloca [52 x i8], align 4
  tail call void @llvm.dbg.declare(metadata [52 x i8]* %5, metadata !4325, metadata !4331), !dbg !4363
  %6 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4358, metadata !800), !dbg !4365
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4359, metadata !800), !dbg !4366
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4360, metadata !800), !dbg !4367
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !4361, metadata !800), !dbg !4368
  %7 = bitcast %struct.quoting_options* %6 to i8*, !dbg !4369
  call void @llvm.lifetime.start(i64 56, i8* nonnull %7) #10, !dbg !4369
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %6, i64 0, metadata !4362, metadata !1105), !dbg !4370
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4330, metadata !800) #10, !dbg !4371
  %8 = getelementptr inbounds [52 x i8], [52 x i8]* %5, i64 0, i64 0, !dbg !4372
  call void @llvm.lifetime.start(i64 52, i8* nonnull %8), !dbg !4372
  tail call void @llvm.dbg.declare(metadata %struct.quoting_options* undef, metadata !4325, metadata !800) #10, !dbg !4363
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4325, metadata !4341) #10, !dbg !4363
  call void @llvm.memset.p0i8.i64(i8* nonnull %8, i8 0, i64 52, i32 4, i1 false), !dbg !4363
  %9 = icmp eq i32 %1, 10, !dbg !4373
  br i1 %9, label %10, label %11, !dbg !4374

; <label>:10:                                     ; preds = %4
  tail call void @abort() #14, !dbg !4375, !noalias !4376
  unreachable, !dbg !4375

; <label>:11:                                     ; preds = %4
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4325, metadata !4341) #10, !dbg !4363
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 0, !dbg !4379
  store i32 %1, i32* %12, align 8, !dbg !4379, !alias.scope !4376
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 1, !dbg !4379
  %14 = bitcast i32* %13 to i8*, !dbg !4379
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* nonnull %8, i64 52, i32 4, i1 false) #10, !dbg !4379
  call void @llvm.lifetime.end(i64 52, i8* nonnull %8), !dbg !4380
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %6, i64 0, metadata !4362, metadata !1105), !dbg !4370
  %15 = call fastcc i8* @quotearg_n_options(i32 %0, i8* %2, i64 %3, %struct.quoting_options* nonnull %6), !dbg !4381
  call void @llvm.lifetime.end(i64 56, i8* nonnull %7) #10, !dbg !4382
  ret i8* %15, !dbg !4383
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_style(i32, i8*) local_unnamed_addr #6 !dbg !4384 {
  %3 = alloca [52 x i8], align 4
  tail call void @llvm.dbg.declare(metadata [52 x i8]* %3, metadata !4325, metadata !4331), !dbg !4390
  %4 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4388, metadata !800), !dbg !4393
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4389, metadata !800), !dbg !4394
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4321, metadata !800) #10, !dbg !4395
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4322, metadata !800) #10, !dbg !4396
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4323, metadata !800) #10, !dbg !4397
  %5 = bitcast %struct.quoting_options* %4 to i8*, !dbg !4398
  call void @llvm.lifetime.start(i64 56, i8* nonnull %5) #10, !dbg !4398
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !4324, metadata !1105) #10, !dbg !4399
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4330, metadata !800) #10, !dbg !4400
  %6 = getelementptr inbounds [52 x i8], [52 x i8]* %3, i64 0, i64 0, !dbg !4401
  call void @llvm.lifetime.start(i64 52, i8* nonnull %6), !dbg !4401
  tail call void @llvm.dbg.declare(metadata %struct.quoting_options* undef, metadata !4325, metadata !800) #10, !dbg !4390
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4325, metadata !4341) #10, !dbg !4390
  call void @llvm.memset.p0i8.i64(i8* nonnull %6, i8 0, i64 52, i32 4, i1 false), !dbg !4390
  %7 = icmp eq i32 %0, 10, !dbg !4402
  br i1 %7, label %8, label %9, !dbg !4403

; <label>:8:                                      ; preds = %2
  tail call void @abort() #14, !dbg !4404, !noalias !4405
  unreachable, !dbg !4404

; <label>:9:                                      ; preds = %2
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4325, metadata !4341) #10, !dbg !4390
  %10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i64 0, i32 0, !dbg !4408
  store i32 %0, i32* %10, align 8, !dbg !4408, !alias.scope !4405
  %11 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i64 0, i32 1, !dbg !4408
  %12 = bitcast i32* %11 to i8*, !dbg !4408
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* nonnull %6, i64 52, i32 4, i1 false) #10, !dbg !4408
  call void @llvm.lifetime.end(i64 52, i8* nonnull %6), !dbg !4409
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !4324, metadata !1105) #10, !dbg !4399
  %13 = call fastcc i8* @quotearg_n_options(i32 0, i8* %1, i64 -1, %struct.quoting_options* nonnull %4) #10, !dbg !4410
  call void @llvm.lifetime.end(i64 56, i8* nonnull %5) #10, !dbg !4411
  ret i8* %13, !dbg !4412
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_style_mem(i32, i8*, i64) local_unnamed_addr #6 !dbg !4413 {
  %4 = alloca [52 x i8], align 4
  tail call void @llvm.dbg.declare(metadata [52 x i8]* %4, metadata !4325, metadata !4331), !dbg !4420
  %5 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4417, metadata !800), !dbg !4423
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4418, metadata !800), !dbg !4424
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !4419, metadata !800), !dbg !4425
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4358, metadata !800) #10, !dbg !4426
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4359, metadata !800) #10, !dbg !4427
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4360, metadata !800) #10, !dbg !4428
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !4361, metadata !800) #10, !dbg !4429
  %6 = bitcast %struct.quoting_options* %5 to i8*, !dbg !4430
  call void @llvm.lifetime.start(i64 56, i8* nonnull %6) #10, !dbg !4430
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4362, metadata !1105) #10, !dbg !4431
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4330, metadata !800) #10, !dbg !4432
  %7 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 0, !dbg !4433
  call void @llvm.lifetime.start(i64 52, i8* nonnull %7), !dbg !4433
  tail call void @llvm.dbg.declare(metadata %struct.quoting_options* undef, metadata !4325, metadata !800) #10, !dbg !4420
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4325, metadata !4341) #10, !dbg !4420
  call void @llvm.memset.p0i8.i64(i8* nonnull %7, i8 0, i64 52, i32 4, i1 false), !dbg !4420
  %8 = icmp eq i32 %0, 10, !dbg !4434
  br i1 %8, label %9, label %10, !dbg !4435

; <label>:9:                                      ; preds = %3
  tail call void @abort() #14, !dbg !4436, !noalias !4437
  unreachable, !dbg !4436

; <label>:10:                                     ; preds = %3
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4325, metadata !4341) #10, !dbg !4420
  %11 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 0, !dbg !4440
  store i32 %0, i32* %11, align 8, !dbg !4440, !alias.scope !4437
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 1, !dbg !4440
  %13 = bitcast i32* %12 to i8*, !dbg !4440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* nonnull %7, i64 52, i32 4, i1 false) #10, !dbg !4440
  call void @llvm.lifetime.end(i64 52, i8* nonnull %7), !dbg !4441
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4362, metadata !1105) #10, !dbg !4431
  %14 = call fastcc i8* @quotearg_n_options(i32 0, i8* %1, i64 %2, %struct.quoting_options* nonnull %5) #10, !dbg !4442
  call void @llvm.lifetime.end(i64 56, i8* nonnull %6) #10, !dbg !4443
  ret i8* %14, !dbg !4444
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_char_mem(i8*, i64, i8 signext) local_unnamed_addr #6 !dbg !4445 {
  %4 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4449, metadata !800), !dbg !4453
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4450, metadata !800), !dbg !4454
  tail call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !4451, metadata !800), !dbg !4455
  %5 = bitcast %struct.quoting_options* %4 to i8*, !dbg !4456
  call void @llvm.lifetime.start(i64 56, i8* nonnull %5) #10, !dbg !4456
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %5, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false), !dbg !4457, !tbaa.struct !4458
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !4452, metadata !1105), !dbg !4459
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !2916, metadata !800), !dbg !4460
  tail call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !2917, metadata !800), !dbg !4462
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2918, metadata !800), !dbg !4463
  tail call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !2919, metadata !800), !dbg !4464
  %6 = lshr i8 %2, 5, !dbg !4465
  %7 = zext i8 %6 to i64, !dbg !4465
  %8 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i64 0, i32 2, i64 %7, !dbg !4466
  tail call void @llvm.dbg.value(metadata i32* %8, i64 0, metadata !2920, metadata !800), !dbg !4467
  %9 = and i8 %2, 31, !dbg !4468
  %10 = zext i8 %9 to i32, !dbg !4469
  tail call void @llvm.dbg.value(metadata i32 %10, i64 0, metadata !2922, metadata !800), !dbg !4470
  %11 = load i32, i32* %8, align 4, !dbg !4471, !tbaa !1019
  %12 = lshr i32 %11, %10, !dbg !4472
  %13 = and i32 %12, 1, !dbg !4473
  tail call void @llvm.dbg.value(metadata i32 %13, i64 0, metadata !2923, metadata !800), !dbg !4474
  %14 = xor i32 %13, 1, !dbg !4475
  %15 = shl i32 %14, %10, !dbg !4476
  %16 = xor i32 %15, %11, !dbg !4477
  store i32 %16, i32* %8, align 4, !dbg !4477, !tbaa !1019
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !4452, metadata !1105), !dbg !4459
  %17 = call fastcc i8* @quotearg_n_options(i32 0, i8* %0, i64 %1, %struct.quoting_options* nonnull %4), !dbg !4478
  call void @llvm.lifetime.end(i64 56, i8* nonnull %5) #10, !dbg !4479
  ret i8* %17, !dbg !4480
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_char(i8*, i8 signext) local_unnamed_addr #6 !dbg !4481 {
  %3 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4485, metadata !800), !dbg !4487
  tail call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !4486, metadata !800), !dbg !4488
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4449, metadata !800) #10, !dbg !4489
  tail call void @llvm.dbg.value(metadata i64 -1, i64 0, metadata !4450, metadata !800) #10, !dbg !4491
  tail call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !4451, metadata !800) #10, !dbg !4492
  %4 = bitcast %struct.quoting_options* %3 to i8*, !dbg !4493
  call void @llvm.lifetime.start(i64 56, i8* nonnull %4) #10, !dbg !4493
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %4, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false) #10, !dbg !4494, !tbaa.struct !4458
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %3, i64 0, metadata !4452, metadata !1105) #10, !dbg !4495
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %3, i64 0, metadata !2916, metadata !800) #10, !dbg !4496
  tail call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !2917, metadata !800) #10, !dbg !4498
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2918, metadata !800) #10, !dbg !4499
  tail call void @llvm.dbg.value(metadata i8 %1, i64 0, metadata !2919, metadata !800) #10, !dbg !4500
  %5 = lshr i8 %1, 5, !dbg !4501
  %6 = zext i8 %5 to i64, !dbg !4501
  %7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i64 0, i32 2, i64 %6, !dbg !4502
  tail call void @llvm.dbg.value(metadata i32* %7, i64 0, metadata !2920, metadata !800) #10, !dbg !4503
  %8 = and i8 %1, 31, !dbg !4504
  %9 = zext i8 %8 to i32, !dbg !4505
  tail call void @llvm.dbg.value(metadata i32 %9, i64 0, metadata !2922, metadata !800) #10, !dbg !4506
  %10 = load i32, i32* %7, align 4, !dbg !4507, !tbaa !1019
  %11 = lshr i32 %10, %9, !dbg !4508
  %12 = and i32 %11, 1, !dbg !4509
  tail call void @llvm.dbg.value(metadata i32 %12, i64 0, metadata !2923, metadata !800) #10, !dbg !4510
  %13 = xor i32 %12, 1, !dbg !4511
  %14 = shl i32 %13, %9, !dbg !4512
  %15 = xor i32 %14, %10, !dbg !4513
  store i32 %15, i32* %7, align 4, !dbg !4513, !tbaa !1019
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %3, i64 0, metadata !4452, metadata !1105) #10, !dbg !4495
  %16 = call fastcc i8* @quotearg_n_options(i32 0, i8* %0, i64 -1, %struct.quoting_options* nonnull %3) #10, !dbg !4514
  call void @llvm.lifetime.end(i64 56, i8* nonnull %4) #10, !dbg !4515
  ret i8* %16, !dbg !4516
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_colon(i8*) local_unnamed_addr #6 !dbg !4517 {
  %2 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4519, metadata !800), !dbg !4520
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4485, metadata !800) #10, !dbg !4521
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !4486, metadata !800) #10, !dbg !4523
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4449, metadata !800) #10, !dbg !4524
  tail call void @llvm.dbg.value(metadata i64 -1, i64 0, metadata !4450, metadata !800) #10, !dbg !4526
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !4451, metadata !800) #10, !dbg !4527
  %3 = bitcast %struct.quoting_options* %2 to i8*, !dbg !4528
  call void @llvm.lifetime.start(i64 56, i8* nonnull %3) #10, !dbg !4528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %3, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false) #10, !dbg !4529, !tbaa.struct !4458
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %2, i64 0, metadata !4452, metadata !1105) #10, !dbg !4530
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %2, i64 0, metadata !2916, metadata !800) #10, !dbg !4531
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !2917, metadata !800) #10, !dbg !4533
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2918, metadata !800) #10, !dbg !4534
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !2919, metadata !800) #10, !dbg !4535
  %4 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %2, i64 0, i32 2, i64 1, !dbg !4536
  tail call void @llvm.dbg.value(metadata i32* %4, i64 0, metadata !2920, metadata !800) #10, !dbg !4537
  tail call void @llvm.dbg.value(metadata i32 26, i64 0, metadata !2922, metadata !800) #10, !dbg !4538
  %5 = load i32, i32* %4, align 4, !dbg !4539, !tbaa !1019
  %6 = or i32 %5, 67108864, !dbg !4540
  store i32 %6, i32* %4, align 4, !dbg !4540, !tbaa !1019
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %2, i64 0, metadata !4452, metadata !1105) #10, !dbg !4530
  %7 = call fastcc i8* @quotearg_n_options(i32 0, i8* %0, i64 -1, %struct.quoting_options* nonnull %2) #10, !dbg !4541
  call void @llvm.lifetime.end(i64 56, i8* nonnull %3) #10, !dbg !4542
  ret i8* %7, !dbg !4543
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_colon_mem(i8*, i64) local_unnamed_addr #6 !dbg !4544 {
  %3 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4546, metadata !800), !dbg !4548
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4547, metadata !800), !dbg !4549
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4449, metadata !800) #10, !dbg !4550
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4450, metadata !800) #10, !dbg !4552
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !4451, metadata !800) #10, !dbg !4553
  %4 = bitcast %struct.quoting_options* %3 to i8*, !dbg !4554
  call void @llvm.lifetime.start(i64 56, i8* nonnull %4) #10, !dbg !4554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %4, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false) #10, !dbg !4555, !tbaa.struct !4458
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %3, i64 0, metadata !4452, metadata !1105) #10, !dbg !4556
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %3, i64 0, metadata !2916, metadata !800) #10, !dbg !4557
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !2917, metadata !800) #10, !dbg !4559
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2918, metadata !800) #10, !dbg !4560
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !2919, metadata !800) #10, !dbg !4561
  %5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i64 0, i32 2, i64 1, !dbg !4562
  tail call void @llvm.dbg.value(metadata i32* %5, i64 0, metadata !2920, metadata !800) #10, !dbg !4563
  tail call void @llvm.dbg.value(metadata i32 26, i64 0, metadata !2922, metadata !800) #10, !dbg !4564
  %6 = load i32, i32* %5, align 4, !dbg !4565, !tbaa !1019
  %7 = or i32 %6, 67108864, !dbg !4566
  store i32 %7, i32* %5, align 4, !dbg !4566, !tbaa !1019
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %3, i64 0, metadata !4452, metadata !1105) #10, !dbg !4556
  %8 = call fastcc i8* @quotearg_n_options(i32 0, i8* %0, i64 %1, %struct.quoting_options* nonnull %3) #10, !dbg !4567
  call void @llvm.lifetime.end(i64 56, i8* nonnull %4) #10, !dbg !4568
  ret i8* %8, !dbg !4569
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_n_style_colon(i32, i32, i8*) local_unnamed_addr #6 !dbg !4570 {
  %4 = alloca [52 x i8], align 4
  tail call void @llvm.dbg.declare(metadata [52 x i8]* %4, metadata !4325, metadata !4331), !dbg !4576
  %5 = alloca %struct.quoting_options, align 8
  %6 = alloca [52 x i8], align 4
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4572, metadata !800), !dbg !4578
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4573, metadata !800), !dbg !4579
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4574, metadata !800), !dbg !4580
  %7 = bitcast %struct.quoting_options* %5 to i8*, !dbg !4581
  call void @llvm.lifetime.start(i64 56, i8* nonnull %7) #10, !dbg !4581
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4330, metadata !800) #10, !dbg !4582
  %8 = getelementptr inbounds [52 x i8], [52 x i8]* %4, i64 0, i64 0, !dbg !4583
  call void @llvm.lifetime.start(i64 52, i8* nonnull %8), !dbg !4583
  tail call void @llvm.dbg.declare(metadata %struct.quoting_options* undef, metadata !4325, metadata !800) #10, !dbg !4576
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4325, metadata !4341) #10, !dbg !4576
  call void @llvm.memset.p0i8.i64(i8* nonnull %8, i8 0, i64 52, i32 4, i1 false), !dbg !4576
  %9 = icmp eq i32 %1, 10, !dbg !4584
  br i1 %9, label %10, label %11, !dbg !4585

; <label>:10:                                     ; preds = %3
  tail call void @abort() #14, !dbg !4586, !noalias !4587
  unreachable, !dbg !4586

; <label>:11:                                     ; preds = %3
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !4325, metadata !4341) #10, !dbg !4576
  %12 = getelementptr inbounds [52 x i8], [52 x i8]* %6, i64 0, i64 0, !dbg !4590
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %12, i8* nonnull %8, i64 52, i32 4, i1 false), !dbg !4590
  call void @llvm.lifetime.end(i64 52, i8* nonnull %8), !dbg !4591
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 0, !dbg !4592
  store i32 %1, i32* %13, align 8, !dbg !4592
  %14 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 1, !dbg !4592
  %15 = bitcast i32* %14 to i8*, !dbg !4592
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* nonnull %12, i64 52, i32 4, i1 false), !dbg !4592
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4575, metadata !1105), !dbg !4593
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !2916, metadata !800), !dbg !4594
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !2917, metadata !800), !dbg !4596
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2918, metadata !800), !dbg !4597
  tail call void @llvm.dbg.value(metadata i8 58, i64 0, metadata !2919, metadata !800), !dbg !4598
  %16 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 2, i64 1, !dbg !4599
  tail call void @llvm.dbg.value(metadata i32* %16, i64 0, metadata !2920, metadata !800), !dbg !4600
  tail call void @llvm.dbg.value(metadata i32 26, i64 0, metadata !2922, metadata !800), !dbg !4601
  %17 = load i32, i32* %16, align 4, !dbg !4602, !tbaa !1019
  %18 = or i32 %17, 67108864, !dbg !4603
  store i32 %18, i32* %16, align 4, !dbg !4603, !tbaa !1019
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4575, metadata !1105), !dbg !4593
  %19 = call fastcc i8* @quotearg_n_options(i32 %0, i8* %2, i64 -1, %struct.quoting_options* nonnull %5), !dbg !4604
  call void @llvm.lifetime.end(i64 56, i8* nonnull %7) #10, !dbg !4605
  ret i8* %19, !dbg !4606
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_n_custom(i32, i8*, i8*, i8*) local_unnamed_addr #6 !dbg !4607 {
  %5 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4611, metadata !800), !dbg !4615
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4612, metadata !800), !dbg !4616
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4613, metadata !800), !dbg !4617
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !4614, metadata !800), !dbg !4618
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4619, metadata !800) #10, !dbg !4629
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4624, metadata !800) #10, !dbg !4631
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4625, metadata !800) #10, !dbg !4632
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !4626, metadata !800) #10, !dbg !4633
  tail call void @llvm.dbg.value(metadata i64 -1, i64 0, metadata !4627, metadata !800) #10, !dbg !4634
  %6 = bitcast %struct.quoting_options* %5 to i8*, !dbg !4635
  call void @llvm.lifetime.start(i64 56, i8* nonnull %6) #10, !dbg !4635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %6, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false) #10, !dbg !4636, !tbaa.struct !4458
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4628, metadata !1105) #10, !dbg !4637
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !2966, metadata !800) #10, !dbg !4638
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2967, metadata !800) #10, !dbg !4640
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2968, metadata !800) #10, !dbg !4641
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* @default_quoting_options, i64 0, metadata !2966, metadata !800) #10, !dbg !4638
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !2966, metadata !800) #10, !dbg !4638
  %7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 0, !dbg !4642
  store i32 10, i32* %7, align 8, !dbg !4643, !tbaa !2896
  %8 = icmp ne i8* %1, null, !dbg !4644
  %9 = icmp ne i8* %2, null, !dbg !4645
  %10 = and i1 %8, %9, !dbg !4646
  br i1 %10, label %12, label %11, !dbg !4646

; <label>:11:                                     ; preds = %4
  tail call void @abort() #14, !dbg !4647
  unreachable, !dbg !4647

; <label>:12:                                     ; preds = %4
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 3, !dbg !4648
  store i8* %1, i8** %13, align 8, !dbg !4649, !tbaa !2985
  %14 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 4, !dbg !4650
  store i8* %2, i8** %14, align 8, !dbg !4651, !tbaa !2988
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4628, metadata !1105) #10, !dbg !4637
  %15 = call fastcc i8* @quotearg_n_options(i32 %0, i8* %3, i64 -1, %struct.quoting_options* nonnull %5) #10, !dbg !4652
  call void @llvm.lifetime.end(i64 56, i8* nonnull %6) #10, !dbg !4653
  ret i8* %15, !dbg !4654
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_n_custom_mem(i32, i8*, i8*, i8*, i64) local_unnamed_addr #6 !dbg !4620 {
  %6 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4619, metadata !800), !dbg !4655
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4624, metadata !800), !dbg !4656
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4625, metadata !800), !dbg !4657
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !4626, metadata !800), !dbg !4658
  tail call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !4627, metadata !800), !dbg !4659
  %7 = bitcast %struct.quoting_options* %6 to i8*, !dbg !4660
  call void @llvm.lifetime.start(i64 56, i8* nonnull %7) #10, !dbg !4660
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %7, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false), !dbg !4661, !tbaa.struct !4458
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %6, i64 0, metadata !4628, metadata !1105), !dbg !4662
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %6, i64 0, metadata !2966, metadata !800) #10, !dbg !4663
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2967, metadata !800) #10, !dbg !4665
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !2968, metadata !800) #10, !dbg !4666
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* @default_quoting_options, i64 0, metadata !2966, metadata !800) #10, !dbg !4663
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %6, i64 0, metadata !2966, metadata !800) #10, !dbg !4663
  %8 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 0, !dbg !4667
  store i32 10, i32* %8, align 8, !dbg !4668, !tbaa !2896
  %9 = icmp ne i8* %1, null, !dbg !4669
  %10 = icmp ne i8* %2, null, !dbg !4670
  %11 = and i1 %9, %10, !dbg !4671
  br i1 %11, label %13, label %12, !dbg !4671

; <label>:12:                                     ; preds = %5
  tail call void @abort() #14, !dbg !4672
  unreachable, !dbg !4672

; <label>:13:                                     ; preds = %5
  %14 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 3, !dbg !4673
  store i8* %1, i8** %14, align 8, !dbg !4674, !tbaa !2985
  %15 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %6, i64 0, i32 4, !dbg !4675
  store i8* %2, i8** %15, align 8, !dbg !4676, !tbaa !2988
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %6, i64 0, metadata !4628, metadata !1105), !dbg !4662
  %16 = call fastcc i8* @quotearg_n_options(i32 %0, i8* %3, i64 %4, %struct.quoting_options* nonnull %6), !dbg !4677
  call void @llvm.lifetime.end(i64 56, i8* nonnull %7) #10, !dbg !4678
  ret i8* %16, !dbg !4679
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_custom(i8*, i8*, i8*) local_unnamed_addr #6 !dbg !4680 {
  %4 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4684, metadata !800), !dbg !4687
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4685, metadata !800), !dbg !4688
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4686, metadata !800), !dbg !4689
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4611, metadata !800) #10, !dbg !4690
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4612, metadata !800) #10, !dbg !4692
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4613, metadata !800) #10, !dbg !4693
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4614, metadata !800) #10, !dbg !4694
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4619, metadata !800) #10, !dbg !4695
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4624, metadata !800) #10, !dbg !4697
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4625, metadata !800) #10, !dbg !4698
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4626, metadata !800) #10, !dbg !4699
  tail call void @llvm.dbg.value(metadata i64 -1, i64 0, metadata !4627, metadata !800) #10, !dbg !4700
  %5 = bitcast %struct.quoting_options* %4 to i8*, !dbg !4701
  call void @llvm.lifetime.start(i64 56, i8* nonnull %5) #10, !dbg !4701
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %5, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false) #10, !dbg !4702, !tbaa.struct !4458
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !4628, metadata !1105) #10, !dbg !4703
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !2966, metadata !800) #10, !dbg !4704
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2967, metadata !800) #10, !dbg !4706
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2968, metadata !800) #10, !dbg !4707
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* @default_quoting_options, i64 0, metadata !2966, metadata !800) #10, !dbg !4704
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !2966, metadata !800) #10, !dbg !4704
  %6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i64 0, i32 0, !dbg !4708
  store i32 10, i32* %6, align 8, !dbg !4709, !tbaa !2896
  %7 = icmp ne i8* %0, null, !dbg !4710
  %8 = icmp ne i8* %1, null, !dbg !4711
  %9 = and i1 %7, %8, !dbg !4712
  br i1 %9, label %11, label %10, !dbg !4712

; <label>:10:                                     ; preds = %3
  tail call void @abort() #14, !dbg !4713
  unreachable, !dbg !4713

; <label>:11:                                     ; preds = %3
  %12 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i64 0, i32 3, !dbg !4714
  store i8* %0, i8** %12, align 8, !dbg !4715, !tbaa !2985
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i64 0, i32 4, !dbg !4716
  store i8* %1, i8** %13, align 8, !dbg !4717, !tbaa !2988
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %4, i64 0, metadata !4628, metadata !1105) #10, !dbg !4703
  %14 = call fastcc i8* @quotearg_n_options(i32 0, i8* %2, i64 -1, %struct.quoting_options* nonnull %4) #10, !dbg !4718
  call void @llvm.lifetime.end(i64 56, i8* nonnull %5) #10, !dbg !4719
  ret i8* %14, !dbg !4720
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quotearg_custom_mem(i8*, i8*, i8*, i64) local_unnamed_addr #6 !dbg !4721 {
  %5 = alloca %struct.quoting_options, align 8
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4725, metadata !800), !dbg !4729
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4726, metadata !800), !dbg !4730
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4727, metadata !800), !dbg !4731
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !4728, metadata !800), !dbg !4732
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4619, metadata !800) #10, !dbg !4733
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4624, metadata !800) #10, !dbg !4735
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4625, metadata !800) #10, !dbg !4736
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4626, metadata !800) #10, !dbg !4737
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !4627, metadata !800) #10, !dbg !4738
  %6 = bitcast %struct.quoting_options* %5 to i8*, !dbg !4739
  call void @llvm.lifetime.start(i64 56, i8* nonnull %6) #10, !dbg !4739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %6, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i32 8, i1 false) #10, !dbg !4740, !tbaa.struct !4458
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4628, metadata !1105) #10, !dbg !4741
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !2966, metadata !800) #10, !dbg !4742
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !2967, metadata !800) #10, !dbg !4744
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2968, metadata !800) #10, !dbg !4745
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* @default_quoting_options, i64 0, metadata !2966, metadata !800) #10, !dbg !4742
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !2966, metadata !800) #10, !dbg !4742
  %7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 0, !dbg !4746
  store i32 10, i32* %7, align 8, !dbg !4747, !tbaa !2896
  %8 = icmp ne i8* %0, null, !dbg !4748
  %9 = icmp ne i8* %1, null, !dbg !4749
  %10 = and i1 %8, %9, !dbg !4750
  br i1 %10, label %12, label %11, !dbg !4750

; <label>:11:                                     ; preds = %4
  tail call void @abort() #14, !dbg !4751
  unreachable, !dbg !4751

; <label>:12:                                     ; preds = %4
  %13 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 3, !dbg !4752
  store i8* %0, i8** %13, align 8, !dbg !4753, !tbaa !2985
  %14 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i64 0, i32 4, !dbg !4754
  store i8* %1, i8** %14, align 8, !dbg !4755, !tbaa !2988
  tail call void @llvm.dbg.value(metadata %struct.quoting_options* %5, i64 0, metadata !4628, metadata !1105) #10, !dbg !4741
  %15 = call fastcc i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* nonnull %5) #10, !dbg !4756
  call void @llvm.lifetime.end(i64 56, i8* nonnull %6) #10, !dbg !4757
  ret i8* %15, !dbg !4758
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quote_n_mem(i32, i8*, i64) local_unnamed_addr #6 !dbg !4759 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4763, metadata !800), !dbg !4766
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4764, metadata !800), !dbg !4767
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !4765, metadata !800), !dbg !4768
  %4 = tail call fastcc i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* nonnull @quote_quoting_options), !dbg !4769
  ret i8* %4, !dbg !4770
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quote_mem(i8*, i64) local_unnamed_addr #6 !dbg !4771 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4775, metadata !800), !dbg !4777
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4776, metadata !800), !dbg !4778
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4763, metadata !800) #10, !dbg !4779
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4764, metadata !800) #10, !dbg !4781
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !4765, metadata !800) #10, !dbg !4782
  %3 = tail call fastcc i8* @quotearg_n_options(i32 0, i8* %0, i64 %1, %struct.quoting_options* nonnull @quote_quoting_options) #10, !dbg !4783
  ret i8* %3, !dbg !4784
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quote_n(i32, i8*) local_unnamed_addr #6 !dbg !4785 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4789, metadata !800), !dbg !4791
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4790, metadata !800), !dbg !4792
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4763, metadata !800) #10, !dbg !4793
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4764, metadata !800) #10, !dbg !4795
  tail call void @llvm.dbg.value(metadata i64 -1, i64 0, metadata !4765, metadata !800) #10, !dbg !4796
  %3 = tail call fastcc i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* nonnull @quote_quoting_options) #10, !dbg !4797
  ret i8* %3, !dbg !4798
}

; Function Attrs: nounwind sspstrong uwtable
define i8* @quote(i8*) local_unnamed_addr #6 !dbg !4799 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4803, metadata !800), !dbg !4804
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4789, metadata !800) #10, !dbg !4805
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4790, metadata !800) #10, !dbg !4807
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4763, metadata !800) #10, !dbg !4808
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !4764, metadata !800) #10, !dbg !4810
  tail call void @llvm.dbg.value(metadata i64 -1, i64 0, metadata !4765, metadata !800) #10, !dbg !4811
  %2 = tail call fastcc i8* @quotearg_n_options(i32 0, i8* %0, i64 -1, %struct.quoting_options* nonnull @quote_quoting_options) #10, !dbg !4812
  ret i8* %2, !dbg !4813
}

; Function Attrs: nounwind sspstrong uwtable
define i32 @dup_safer(i32) local_unnamed_addr #6 !dbg !4814 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !4817, metadata !800), !dbg !4818
  %2 = tail call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3) #10, !dbg !4819
  ret i32 %2, !dbg !4820
}

; Function Attrs: nounwind sspstrong uwtable
define void @version_etc_arn(%struct._IO_FILE*, i8*, i8*, i8*, i8** readonly, i64) local_unnamed_addr #6 !dbg !4821 {
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !4866, metadata !800), !dbg !4872
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4867, metadata !800), !dbg !4873
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4868, metadata !800), !dbg !4874
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !4869, metadata !800), !dbg !4875
  tail call void @llvm.dbg.value(metadata i8** %4, i64 0, metadata !4870, metadata !800), !dbg !4876
  tail call void @llvm.dbg.value(metadata i64 %5, i64 0, metadata !4871, metadata !800), !dbg !4877
  %7 = icmp eq i8* %1, null, !dbg !4878
  br i1 %7, label %10, label %8, !dbg !4880

; <label>:8:                                      ; preds = %6
  %9 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.105, i64 0, i64 0), i8* nonnull %1, i8* %2, i8* %3) #10, !dbg !4881
  br label %12, !dbg !4881

; <label>:10:                                     ; preds = %6
  %11 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.106, i64 0, i64 0), i8* %2, i8* %3) #10, !dbg !4882
  br label %12

; <label>:12:                                     ; preds = %10, %8
  %13 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.107, i64 0, i64 0), i32 5) #10, !dbg !4883
  %14 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %13, i32 2017) #10, !dbg !4884
  %15 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([203 x i8], [203 x i8]* @.str.3.108, i64 0, i64 0), i32 5) #10, !dbg !4886
  %16 = tail call i32 @fputs_unlocked(i8* %15, %struct._IO_FILE* %0) #10, !dbg !4887
  switch i64 %5, label %126 [
    i64 0, label %17
    i64 1, label %18
    i64 2, label %22
    i64 3, label %28
    i64 4, label %36
    i64 5, label %46
    i64 6, label %58
    i64 7, label %72
    i64 8, label %88
    i64 9, label %106
  ], !dbg !4888

; <label>:17:                                     ; preds = %12
  tail call void @abort() #14, !dbg !4889
  unreachable, !dbg !4889

; <label>:18:                                     ; preds = %12
  %19 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.109, i64 0, i64 0), i32 5) #10, !dbg !4891
  %20 = load i8*, i8** %4, align 8, !dbg !4891, !tbaa !808
  %21 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %19, i8* %20) #10, !dbg !4892
  br label %146, !dbg !4894

; <label>:22:                                     ; preds = %12
  %23 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.110, i64 0, i64 0), i32 5) #10, !dbg !4895
  %24 = load i8*, i8** %4, align 8, !dbg !4895, !tbaa !808
  %25 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4895
  %26 = load i8*, i8** %25, align 8, !dbg !4895, !tbaa !808
  %27 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %23, i8* %24, i8* %26) #10, !dbg !4896
  br label %146, !dbg !4897

; <label>:28:                                     ; preds = %12
  %29 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.111, i64 0, i64 0), i32 5) #10, !dbg !4898
  %30 = load i8*, i8** %4, align 8, !dbg !4898, !tbaa !808
  %31 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4898
  %32 = load i8*, i8** %31, align 8, !dbg !4898, !tbaa !808
  %33 = getelementptr inbounds i8*, i8** %4, i64 2, !dbg !4898
  %34 = load i8*, i8** %33, align 8, !dbg !4898, !tbaa !808
  %35 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %29, i8* %30, i8* %32, i8* %34) #10, !dbg !4899
  br label %146, !dbg !4900

; <label>:36:                                     ; preds = %12
  %37 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.112, i64 0, i64 0), i32 5) #10, !dbg !4901
  %38 = load i8*, i8** %4, align 8, !dbg !4901, !tbaa !808
  %39 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4901
  %40 = load i8*, i8** %39, align 8, !dbg !4901, !tbaa !808
  %41 = getelementptr inbounds i8*, i8** %4, i64 2, !dbg !4901
  %42 = load i8*, i8** %41, align 8, !dbg !4901, !tbaa !808
  %43 = getelementptr inbounds i8*, i8** %4, i64 3, !dbg !4901
  %44 = load i8*, i8** %43, align 8, !dbg !4901, !tbaa !808
  %45 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %37, i8* %38, i8* %40, i8* %42, i8* %44) #10, !dbg !4902
  br label %146, !dbg !4903

; <label>:46:                                     ; preds = %12
  %47 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.113, i64 0, i64 0), i32 5) #10, !dbg !4904
  %48 = load i8*, i8** %4, align 8, !dbg !4904, !tbaa !808
  %49 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4904
  %50 = load i8*, i8** %49, align 8, !dbg !4904, !tbaa !808
  %51 = getelementptr inbounds i8*, i8** %4, i64 2, !dbg !4904
  %52 = load i8*, i8** %51, align 8, !dbg !4904, !tbaa !808
  %53 = getelementptr inbounds i8*, i8** %4, i64 3, !dbg !4904
  %54 = load i8*, i8** %53, align 8, !dbg !4904, !tbaa !808
  %55 = getelementptr inbounds i8*, i8** %4, i64 4, !dbg !4904
  %56 = load i8*, i8** %55, align 8, !dbg !4904, !tbaa !808
  %57 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %47, i8* %48, i8* %50, i8* %52, i8* %54, i8* %56) #10, !dbg !4905
  br label %146, !dbg !4906

; <label>:58:                                     ; preds = %12
  %59 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.114, i64 0, i64 0), i32 5) #10, !dbg !4907
  %60 = load i8*, i8** %4, align 8, !dbg !4907, !tbaa !808
  %61 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4907
  %62 = load i8*, i8** %61, align 8, !dbg !4907, !tbaa !808
  %63 = getelementptr inbounds i8*, i8** %4, i64 2, !dbg !4907
  %64 = load i8*, i8** %63, align 8, !dbg !4907, !tbaa !808
  %65 = getelementptr inbounds i8*, i8** %4, i64 3, !dbg !4907
  %66 = load i8*, i8** %65, align 8, !dbg !4907, !tbaa !808
  %67 = getelementptr inbounds i8*, i8** %4, i64 4, !dbg !4907
  %68 = load i8*, i8** %67, align 8, !dbg !4907, !tbaa !808
  %69 = getelementptr inbounds i8*, i8** %4, i64 5, !dbg !4907
  %70 = load i8*, i8** %69, align 8, !dbg !4907, !tbaa !808
  %71 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %59, i8* %60, i8* %62, i8* %64, i8* %66, i8* %68, i8* %70) #10, !dbg !4908
  br label %146, !dbg !4909

; <label>:72:                                     ; preds = %12
  %73 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.115, i64 0, i64 0), i32 5) #10, !dbg !4910
  %74 = load i8*, i8** %4, align 8, !dbg !4910, !tbaa !808
  %75 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4910
  %76 = load i8*, i8** %75, align 8, !dbg !4910, !tbaa !808
  %77 = getelementptr inbounds i8*, i8** %4, i64 2, !dbg !4910
  %78 = load i8*, i8** %77, align 8, !dbg !4910, !tbaa !808
  %79 = getelementptr inbounds i8*, i8** %4, i64 3, !dbg !4910
  %80 = load i8*, i8** %79, align 8, !dbg !4910, !tbaa !808
  %81 = getelementptr inbounds i8*, i8** %4, i64 4, !dbg !4910
  %82 = load i8*, i8** %81, align 8, !dbg !4910, !tbaa !808
  %83 = getelementptr inbounds i8*, i8** %4, i64 5, !dbg !4910
  %84 = load i8*, i8** %83, align 8, !dbg !4910, !tbaa !808
  %85 = getelementptr inbounds i8*, i8** %4, i64 6, !dbg !4910
  %86 = load i8*, i8** %85, align 8, !dbg !4910, !tbaa !808
  %87 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %73, i8* %74, i8* %76, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86) #10, !dbg !4911
  br label %146, !dbg !4912

; <label>:88:                                     ; preds = %12
  %89 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.116, i64 0, i64 0), i32 5) #10, !dbg !4913
  %90 = load i8*, i8** %4, align 8, !dbg !4913, !tbaa !808
  %91 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4913
  %92 = load i8*, i8** %91, align 8, !dbg !4913, !tbaa !808
  %93 = getelementptr inbounds i8*, i8** %4, i64 2, !dbg !4913
  %94 = load i8*, i8** %93, align 8, !dbg !4913, !tbaa !808
  %95 = getelementptr inbounds i8*, i8** %4, i64 3, !dbg !4913
  %96 = load i8*, i8** %95, align 8, !dbg !4913, !tbaa !808
  %97 = getelementptr inbounds i8*, i8** %4, i64 4, !dbg !4913
  %98 = load i8*, i8** %97, align 8, !dbg !4913, !tbaa !808
  %99 = getelementptr inbounds i8*, i8** %4, i64 5, !dbg !4913
  %100 = load i8*, i8** %99, align 8, !dbg !4913, !tbaa !808
  %101 = getelementptr inbounds i8*, i8** %4, i64 6, !dbg !4913
  %102 = load i8*, i8** %101, align 8, !dbg !4913, !tbaa !808
  %103 = getelementptr inbounds i8*, i8** %4, i64 7, !dbg !4913
  %104 = load i8*, i8** %103, align 8, !dbg !4913, !tbaa !808
  %105 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %89, i8* %90, i8* %92, i8* %94, i8* %96, i8* %98, i8* %100, i8* %102, i8* %104) #10, !dbg !4914
  br label %146, !dbg !4915

; <label>:106:                                    ; preds = %12
  %107 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.117, i64 0, i64 0), i32 5) #10, !dbg !4916
  %108 = load i8*, i8** %4, align 8, !dbg !4916, !tbaa !808
  %109 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4916
  %110 = load i8*, i8** %109, align 8, !dbg !4916, !tbaa !808
  %111 = getelementptr inbounds i8*, i8** %4, i64 2, !dbg !4916
  %112 = load i8*, i8** %111, align 8, !dbg !4916, !tbaa !808
  %113 = getelementptr inbounds i8*, i8** %4, i64 3, !dbg !4916
  %114 = load i8*, i8** %113, align 8, !dbg !4916, !tbaa !808
  %115 = getelementptr inbounds i8*, i8** %4, i64 4, !dbg !4916
  %116 = load i8*, i8** %115, align 8, !dbg !4916, !tbaa !808
  %117 = getelementptr inbounds i8*, i8** %4, i64 5, !dbg !4916
  %118 = load i8*, i8** %117, align 8, !dbg !4916, !tbaa !808
  %119 = getelementptr inbounds i8*, i8** %4, i64 6, !dbg !4916
  %120 = load i8*, i8** %119, align 8, !dbg !4916, !tbaa !808
  %121 = getelementptr inbounds i8*, i8** %4, i64 7, !dbg !4916
  %122 = load i8*, i8** %121, align 8, !dbg !4916, !tbaa !808
  %123 = getelementptr inbounds i8*, i8** %4, i64 8, !dbg !4916
  %124 = load i8*, i8** %123, align 8, !dbg !4916, !tbaa !808
  %125 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %107, i8* %108, i8* %110, i8* %112, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124) #10, !dbg !4917
  br label %146, !dbg !4918

; <label>:126:                                    ; preds = %12
  %127 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.118, i64 0, i64 0), i32 5) #10, !dbg !4919
  %128 = load i8*, i8** %4, align 8, !dbg !4919, !tbaa !808
  %129 = getelementptr inbounds i8*, i8** %4, i64 1, !dbg !4919
  %130 = load i8*, i8** %129, align 8, !dbg !4919, !tbaa !808
  %131 = getelementptr inbounds i8*, i8** %4, i64 2, !dbg !4919
  %132 = load i8*, i8** %131, align 8, !dbg !4919, !tbaa !808
  %133 = getelementptr inbounds i8*, i8** %4, i64 3, !dbg !4919
  %134 = load i8*, i8** %133, align 8, !dbg !4919, !tbaa !808
  %135 = getelementptr inbounds i8*, i8** %4, i64 4, !dbg !4919
  %136 = load i8*, i8** %135, align 8, !dbg !4919, !tbaa !808
  %137 = getelementptr inbounds i8*, i8** %4, i64 5, !dbg !4919
  %138 = load i8*, i8** %137, align 8, !dbg !4919, !tbaa !808
  %139 = getelementptr inbounds i8*, i8** %4, i64 6, !dbg !4919
  %140 = load i8*, i8** %139, align 8, !dbg !4919, !tbaa !808
  %141 = getelementptr inbounds i8*, i8** %4, i64 7, !dbg !4919
  %142 = load i8*, i8** %141, align 8, !dbg !4919, !tbaa !808
  %143 = getelementptr inbounds i8*, i8** %4, i64 8, !dbg !4919
  %144 = load i8*, i8** %143, align 8, !dbg !4919, !tbaa !808
  %145 = tail call i32 (%struct._IO_FILE*, i32, i8*, ...) @__fprintf_chk(%struct._IO_FILE* %0, i32 1, i8* %127, i8* %128, i8* %130, i8* %132, i8* %134, i8* %136, i8* %138, i8* %140, i8* %142, i8* %144) #10, !dbg !4920
  br label %146, !dbg !4921

; <label>:146:                                    ; preds = %126, %106, %88, %72, %58, %46, %36, %28, %22, %18
  ret void, !dbg !4922
}

; Function Attrs: nounwind sspstrong uwtable
define void @version_etc_ar(%struct._IO_FILE*, i8*, i8*, i8*, i8** readonly) local_unnamed_addr #6 !dbg !4923 {
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !4927, metadata !800), !dbg !4933
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4928, metadata !800), !dbg !4934
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4929, metadata !800), !dbg !4935
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !4930, metadata !800), !dbg !4936
  tail call void @llvm.dbg.value(metadata i8** %4, i64 0, metadata !4931, metadata !800), !dbg !4937
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !4932, metadata !800), !dbg !4938
  br label %6, !dbg !4939

; <label>:6:                                      ; preds = %6, %5
  %7 = phi i64 [ 0, %5 ], [ %11, %6 ]
  tail call void @llvm.dbg.value(metadata i64 %7, i64 0, metadata !4932, metadata !800), !dbg !4938
  %8 = getelementptr inbounds i8*, i8** %4, i64 %7, !dbg !4941
  %9 = load i8*, i8** %8, align 8, !dbg !4941, !tbaa !808
  %10 = icmp eq i8* %9, null, !dbg !4944
  %11 = add i64 %7, 1, !dbg !4946
  tail call void @llvm.dbg.value(metadata i64 %11, i64 0, metadata !4932, metadata !800), !dbg !4938
  br i1 %10, label %12, label %6, !dbg !4944, !llvm.loop !4948

; <label>:12:                                     ; preds = %6
  tail call void @version_etc_arn(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, i8** nonnull %4, i64 %7), !dbg !4951
  ret void, !dbg !4952
}

; Function Attrs: nounwind sspstrong uwtable
define void @version_etc_va(%struct._IO_FILE*, i8*, i8*, i8*, %struct.__va_list_tag* nocapture) local_unnamed_addr #6 !dbg !4953 {
  %6 = alloca [10 x i8*], align 16
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !4964, metadata !800), !dbg !4972
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !4965, metadata !800), !dbg !4973
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !4966, metadata !800), !dbg !4974
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !4967, metadata !800), !dbg !4975
  tail call void @llvm.dbg.value(metadata %struct.__va_list_tag* %4, i64 0, metadata !4968, metadata !800), !dbg !4976
  %7 = bitcast [10 x i8*]* %6 to i8*, !dbg !4977
  call void @llvm.lifetime.start(i64 80, i8* nonnull %7) #10, !dbg !4977
  tail call void @llvm.dbg.declare(metadata [10 x i8*]* %6, metadata !4970, metadata !800), !dbg !4978
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !4969, metadata !800), !dbg !4979
  %8 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 0
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 3
  %10 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %4, i64 0, i32 2
  %11 = load i32, i32* %8, align 8, !dbg !4980
  %12 = icmp ult i32 %11, 41, !dbg !4980
  br i1 %12, label %13, label %18, !dbg !4980

; <label>:13:                                     ; preds = %5
  %14 = load i8*, i8** %9, align 8, !dbg !4984
  %15 = sext i32 %11 to i64, !dbg !4984
  %16 = getelementptr i8, i8* %14, i64 %15, !dbg !4984
  %17 = add i32 %11, 8, !dbg !4984
  store i32 %17, i32* %8, align 8, !dbg !4984
  br label %21, !dbg !4984

; <label>:18:                                     ; preds = %5
  %19 = load i8*, i8** %10, align 8, !dbg !4986
  %20 = getelementptr i8, i8* %19, i64 8, !dbg !4986
  store i8* %20, i8** %10, align 8, !dbg !4986
  br label %21, !dbg !4986

; <label>:21:                                     ; preds = %18, %13
  %22 = phi i32 [ %17, %13 ], [ %11, %18 ], !dbg !4980
  %23 = phi i8* [ %16, %13 ], [ %19, %18 ]
  %24 = bitcast i8* %23 to i8**, !dbg !4988
  %25 = load i8*, i8** %24, align 8, !dbg !4988
  %26 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 0, !dbg !4990
  store i8* %25, i8** %26, align 16, !dbg !4991, !tbaa !808
  %27 = icmp eq i8* %25, null, !dbg !4992
  br i1 %27, label %30, label %28, !dbg !4993

; <label>:28:                                     ; preds = %21
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %29 = icmp ult i32 %22, 41, !dbg !4980
  br i1 %29, label %35, label %32, !dbg !4980

; <label>:30:                                     ; preds = %135, %128, %121, %114, %108, %91, %74, %57, %40, %21
  %31 = phi i64 [ 0, %21 ], [ 1, %40 ], [ 2, %57 ], [ 3, %74 ], [ 4, %91 ], [ 5, %108 ], [ 6, %114 ], [ 7, %121 ], [ 8, %128 ], [ %142, %135 ]
  call void @version_etc_arn(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, i8** nonnull %26, i64 %31), !dbg !4995
  call void @llvm.lifetime.end(i64 80, i8* nonnull %7) #10, !dbg !4996
  ret void, !dbg !4996

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %10, align 8, !dbg !4986
  %34 = getelementptr i8, i8* %33, i64 8, !dbg !4986
  store i8* %34, i8** %10, align 8, !dbg !4986
  br label %40, !dbg !4986

; <label>:35:                                     ; preds = %28
  %36 = load i8*, i8** %9, align 8, !dbg !4984
  %37 = sext i32 %22 to i64, !dbg !4984
  %38 = getelementptr i8, i8* %36, i64 %37, !dbg !4984
  %39 = add i32 %22, 8, !dbg !4984
  store i32 %39, i32* %8, align 8, !dbg !4984
  br label %40, !dbg !4984

; <label>:40:                                     ; preds = %35, %32
  %41 = phi i32 [ %39, %35 ], [ %22, %32 ], !dbg !4980
  %42 = phi i8* [ %38, %35 ], [ %33, %32 ]
  %43 = bitcast i8* %42 to i8**, !dbg !4988
  %44 = load i8*, i8** %43, align 8, !dbg !4988
  %45 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 1, !dbg !4990
  store i8* %44, i8** %45, align 8, !dbg !4991, !tbaa !808
  %46 = icmp eq i8* %44, null, !dbg !4992
  br i1 %46, label %30, label %47, !dbg !4993

; <label>:47:                                     ; preds = %40
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %48 = icmp ult i32 %41, 41, !dbg !4980
  br i1 %48, label %52, label %49, !dbg !4980

; <label>:49:                                     ; preds = %47
  %50 = load i8*, i8** %10, align 8, !dbg !4986
  %51 = getelementptr i8, i8* %50, i64 8, !dbg !4986
  store i8* %51, i8** %10, align 8, !dbg !4986
  br label %57, !dbg !4986

; <label>:52:                                     ; preds = %47
  %53 = load i8*, i8** %9, align 8, !dbg !4984
  %54 = sext i32 %41 to i64, !dbg !4984
  %55 = getelementptr i8, i8* %53, i64 %54, !dbg !4984
  %56 = add i32 %41, 8, !dbg !4984
  store i32 %56, i32* %8, align 8, !dbg !4984
  br label %57, !dbg !4984

; <label>:57:                                     ; preds = %52, %49
  %58 = phi i32 [ %56, %52 ], [ %41, %49 ], !dbg !4980
  %59 = phi i8* [ %55, %52 ], [ %50, %49 ]
  %60 = bitcast i8* %59 to i8**, !dbg !4988
  %61 = load i8*, i8** %60, align 8, !dbg !4988
  %62 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 2, !dbg !4990
  store i8* %61, i8** %62, align 16, !dbg !4991, !tbaa !808
  %63 = icmp eq i8* %61, null, !dbg !4992
  br i1 %63, label %30, label %64, !dbg !4993

; <label>:64:                                     ; preds = %57
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %65 = icmp ult i32 %58, 41, !dbg !4980
  br i1 %65, label %69, label %66, !dbg !4980

; <label>:66:                                     ; preds = %64
  %67 = load i8*, i8** %10, align 8, !dbg !4986
  %68 = getelementptr i8, i8* %67, i64 8, !dbg !4986
  store i8* %68, i8** %10, align 8, !dbg !4986
  br label %74, !dbg !4986

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %9, align 8, !dbg !4984
  %71 = sext i32 %58 to i64, !dbg !4984
  %72 = getelementptr i8, i8* %70, i64 %71, !dbg !4984
  %73 = add i32 %58, 8, !dbg !4984
  store i32 %73, i32* %8, align 8, !dbg !4984
  br label %74, !dbg !4984

; <label>:74:                                     ; preds = %69, %66
  %75 = phi i32 [ %73, %69 ], [ %58, %66 ], !dbg !4980
  %76 = phi i8* [ %72, %69 ], [ %67, %66 ]
  %77 = bitcast i8* %76 to i8**, !dbg !4988
  %78 = load i8*, i8** %77, align 8, !dbg !4988
  %79 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 3, !dbg !4990
  store i8* %78, i8** %79, align 8, !dbg !4991, !tbaa !808
  %80 = icmp eq i8* %78, null, !dbg !4992
  br i1 %80, label %30, label %81, !dbg !4993

; <label>:81:                                     ; preds = %74
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %82 = icmp ult i32 %75, 41, !dbg !4980
  br i1 %82, label %86, label %83, !dbg !4980

; <label>:83:                                     ; preds = %81
  %84 = load i8*, i8** %10, align 8, !dbg !4986
  %85 = getelementptr i8, i8* %84, i64 8, !dbg !4986
  store i8* %85, i8** %10, align 8, !dbg !4986
  br label %91, !dbg !4986

; <label>:86:                                     ; preds = %81
  %87 = load i8*, i8** %9, align 8, !dbg !4984
  %88 = sext i32 %75 to i64, !dbg !4984
  %89 = getelementptr i8, i8* %87, i64 %88, !dbg !4984
  %90 = add i32 %75, 8, !dbg !4984
  store i32 %90, i32* %8, align 8, !dbg !4984
  br label %91, !dbg !4984

; <label>:91:                                     ; preds = %86, %83
  %92 = phi i32 [ %90, %86 ], [ %75, %83 ], !dbg !4980
  %93 = phi i8* [ %89, %86 ], [ %84, %83 ]
  %94 = bitcast i8* %93 to i8**, !dbg !4988
  %95 = load i8*, i8** %94, align 8, !dbg !4988
  %96 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 4, !dbg !4990
  store i8* %95, i8** %96, align 16, !dbg !4991, !tbaa !808
  %97 = icmp eq i8* %95, null, !dbg !4992
  br i1 %97, label %30, label %98, !dbg !4993

; <label>:98:                                     ; preds = %91
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %99 = icmp ult i32 %92, 41, !dbg !4980
  br i1 %99, label %103, label %100, !dbg !4980

; <label>:100:                                    ; preds = %98
  %101 = load i8*, i8** %10, align 8, !dbg !4986
  %102 = getelementptr i8, i8* %101, i64 8, !dbg !4986
  store i8* %102, i8** %10, align 8, !dbg !4986
  br label %108, !dbg !4986

; <label>:103:                                    ; preds = %98
  %104 = load i8*, i8** %9, align 8, !dbg !4984
  %105 = sext i32 %92 to i64, !dbg !4984
  %106 = getelementptr i8, i8* %104, i64 %105, !dbg !4984
  %107 = add i32 %92, 8, !dbg !4984
  store i32 %107, i32* %8, align 8, !dbg !4984
  br label %108, !dbg !4984

; <label>:108:                                    ; preds = %103, %100
  %109 = phi i8* [ %106, %103 ], [ %101, %100 ]
  %110 = bitcast i8* %109 to i8**, !dbg !4988
  %111 = load i8*, i8** %110, align 8, !dbg !4988
  %112 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 5, !dbg !4990
  store i8* %111, i8** %112, align 8, !dbg !4991, !tbaa !808
  %113 = icmp eq i8* %111, null, !dbg !4992
  br i1 %113, label %30, label %114, !dbg !4993

; <label>:114:                                    ; preds = %108
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %115 = load i8*, i8** %10, align 8, !dbg !4986
  %116 = getelementptr i8, i8* %115, i64 8, !dbg !4986
  store i8* %116, i8** %10, align 8, !dbg !4986
  %117 = bitcast i8* %115 to i8**, !dbg !4988
  %118 = load i8*, i8** %117, align 8, !dbg !4988
  %119 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 6, !dbg !4990
  store i8* %118, i8** %119, align 16, !dbg !4991, !tbaa !808
  %120 = icmp eq i8* %118, null, !dbg !4992
  br i1 %120, label %30, label %121, !dbg !4993

; <label>:121:                                    ; preds = %114
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %122 = load i8*, i8** %10, align 8, !dbg !4986
  %123 = getelementptr i8, i8* %122, i64 8, !dbg !4986
  store i8* %123, i8** %10, align 8, !dbg !4986
  %124 = bitcast i8* %122 to i8**, !dbg !4988
  %125 = load i8*, i8** %124, align 8, !dbg !4988
  %126 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 7, !dbg !4990
  store i8* %125, i8** %126, align 8, !dbg !4991, !tbaa !808
  %127 = icmp eq i8* %125, null, !dbg !4992
  br i1 %127, label %30, label %128, !dbg !4993

; <label>:128:                                    ; preds = %121
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %129 = load i8*, i8** %10, align 8, !dbg !4986
  %130 = getelementptr i8, i8* %129, i64 8, !dbg !4986
  store i8* %130, i8** %10, align 8, !dbg !4986
  %131 = bitcast i8* %129 to i8**, !dbg !4988
  %132 = load i8*, i8** %131, align 8, !dbg !4988
  %133 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 8, !dbg !4990
  store i8* %132, i8** %133, align 16, !dbg !4991, !tbaa !808
  %134 = icmp eq i8* %132, null, !dbg !4992
  br i1 %134, label %30, label %135, !dbg !4993

; <label>:135:                                    ; preds = %128
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %136 = load i8*, i8** %10, align 8, !dbg !4986
  %137 = getelementptr i8, i8* %136, i64 8, !dbg !4986
  store i8* %137, i8** %10, align 8, !dbg !4986
  %138 = bitcast i8* %136 to i8**, !dbg !4988
  %139 = load i8*, i8** %138, align 8, !dbg !4988
  %140 = getelementptr inbounds [10 x i8*], [10 x i8*]* %6, i64 0, i64 9, !dbg !4990
  store i8* %139, i8** %140, align 8, !dbg !4991, !tbaa !808
  %141 = icmp eq i8* %139, null, !dbg !4992
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !4969, metadata !800), !dbg !4979
  %142 = select i1 %141, i64 9, i64 10, !dbg !4993
  br label %30, !dbg !4993
}

; Function Attrs: nounwind sspstrong uwtable
define void @version_etc(%struct._IO_FILE*, i8*, i8*, i8*, ...) local_unnamed_addr #6 !dbg !4997 {
  %5 = alloca [1 x %struct.__va_list_tag], align 16
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !5001, metadata !800), !dbg !5010
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !5002, metadata !800), !dbg !5011
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !5003, metadata !800), !dbg !5012
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !5004, metadata !800), !dbg !5013
  %6 = bitcast [1 x %struct.__va_list_tag]* %5 to i8*, !dbg !5014
  call void @llvm.lifetime.start(i64 24, i8* nonnull %6) #10, !dbg !5014
  tail call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %5, metadata !5005, metadata !800), !dbg !5015
  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %5, i64 0, i64 0, !dbg !5016
  call void @llvm.va_start(i8* nonnull %6), !dbg !5016
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* nonnull %7), !dbg !5017
  call void @llvm.va_end(i8* nonnull %6), !dbg !5018
  call void @llvm.lifetime.end(i64 24, i8* nonnull %6) #10, !dbg !5019
  ret void, !dbg !5019
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: nounwind sspstrong uwtable
define void @emit_bug_reporting_address() local_unnamed_addr #6 !dbg !5020 {
  %1 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.121, i64 0, i64 0), i32 5) #10, !dbg !5021
  %2 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.122, i64 0, i64 0)) #10, !dbg !5022
  %3 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.123, i64 0, i64 0), i32 5) #10, !dbg !5024
  %4 = tail call i32 (i32, i8*, ...) @__printf_chk(i32 1, i8* %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.124, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18.125, i64 0, i64 0)) #10, !dbg !5025
  %5 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.19.126, i64 0, i64 0), i32 5) #10, !dbg !5026
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !5026, !tbaa !808
  %7 = tail call i32 @fputs_unlocked(i8* %5, %struct._IO_FILE* %6) #10, !dbg !5027
  ret void, !dbg !5028
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define noalias i8* @xnmalloc(i64, i64) local_unnamed_addr #12 !dbg !5029 {
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5033, metadata !800), !dbg !5035
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !5034, metadata !800), !dbg !5036
  %3 = udiv i64 9223372036854775807, %1, !dbg !5037
  %4 = icmp ult i64 %3, %0, !dbg !5037
  br i1 %4, label %5, label %6, !dbg !5039

; <label>:5:                                      ; preds = %2
  tail call void @xalloc_die() #14, !dbg !5040
  unreachable, !dbg !5040

; <label>:6:                                      ; preds = %2
  %7 = mul i64 %1, %0, !dbg !5041
  tail call void @llvm.dbg.value(metadata i64 %7, i64 0, metadata !5042, metadata !800) #10, !dbg !5049
  %8 = tail call noalias i8* @malloc(i64 %7) #10, !dbg !5051
  tail call void @llvm.dbg.value(metadata i8* %8, i64 0, metadata !5048, metadata !800) #10, !dbg !5052
  %9 = icmp eq i8* %8, null, !dbg !5053
  %10 = icmp ne i64 %7, 0, !dbg !5055
  %11 = and i1 %10, %9, !dbg !5057
  br i1 %11, label %12, label %13, !dbg !5057

; <label>:12:                                     ; preds = %6
  tail call void @xalloc_die() #14, !dbg !5058
  unreachable, !dbg !5058

; <label>:13:                                     ; preds = %6
  ret i8* %8, !dbg !5059
}

; Function Attrs: nounwind sspstrong uwtable
define noalias i8* @xmalloc(i64) local_unnamed_addr #6 !dbg !5043 {
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5042, metadata !800), !dbg !5060
  %2 = tail call noalias i8* @malloc(i64 %0) #10, !dbg !5061
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !5048, metadata !800), !dbg !5062
  %3 = icmp eq i8* %2, null, !dbg !5063
  %4 = icmp ne i64 %0, 0, !dbg !5064
  %5 = and i1 %4, %3, !dbg !5065
  br i1 %5, label %6, label %7, !dbg !5065

; <label>:6:                                      ; preds = %1
  tail call void @xalloc_die() #14, !dbg !5066
  unreachable, !dbg !5066

; <label>:7:                                      ; preds = %1
  ret i8* %2, !dbg !5067
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define noalias i8* @xnrealloc(i8*, i64, i64) local_unnamed_addr #12 !dbg !5068 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5072, metadata !800), !dbg !5075
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !5073, metadata !800), !dbg !5076
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !5074, metadata !800), !dbg !5077
  %4 = udiv i64 9223372036854775807, %2, !dbg !5078
  %5 = icmp ult i64 %4, %1, !dbg !5078
  br i1 %5, label %6, label %7, !dbg !5080

; <label>:6:                                      ; preds = %3
  tail call void @xalloc_die() #14, !dbg !5081
  unreachable, !dbg !5081

; <label>:7:                                      ; preds = %3
  %8 = mul i64 %2, %1, !dbg !5082
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5083, metadata !800) #10, !dbg !5089
  tail call void @llvm.dbg.value(metadata i64 %8, i64 0, metadata !5088, metadata !800) #10, !dbg !5091
  %9 = icmp eq i64 %8, 0, !dbg !5092
  %10 = icmp ne i8* %0, null, !dbg !5094
  %11 = and i1 %10, %9, !dbg !5096
  br i1 %11, label %12, label %13, !dbg !5096

; <label>:12:                                     ; preds = %7
  tail call void @free(i8* nonnull %0) #10, !dbg !5097
  br label %19, !dbg !5099

; <label>:13:                                     ; preds = %7
  %14 = tail call i8* @realloc(i8* %0, i64 %8) #10, !dbg !5100
  tail call void @llvm.dbg.value(metadata i8* %14, i64 0, metadata !5083, metadata !800) #10, !dbg !5089
  %15 = icmp eq i8* %14, null, !dbg !5101
  %16 = icmp ne i64 %8, 0, !dbg !5103
  %17 = and i1 %16, %15, !dbg !5105
  br i1 %17, label %18, label %19, !dbg !5105

; <label>:18:                                     ; preds = %13
  tail call void @xalloc_die() #14, !dbg !5106
  unreachable, !dbg !5106

; <label>:19:                                     ; preds = %12, %13
  %20 = phi i8* [ null, %12 ], [ %14, %13 ]
  ret i8* %20, !dbg !5107
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define noalias i8* @xrealloc(i8*, i64) local_unnamed_addr #6 !dbg !5084 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5083, metadata !800), !dbg !5108
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !5088, metadata !800), !dbg !5109
  %3 = icmp eq i64 %1, 0, !dbg !5110
  %4 = icmp ne i8* %0, null, !dbg !5111
  %5 = and i1 %4, %3, !dbg !5112
  br i1 %5, label %6, label %7, !dbg !5112

; <label>:6:                                      ; preds = %2
  tail call void @free(i8* nonnull %0) #10, !dbg !5113
  br label %13, !dbg !5114

; <label>:7:                                      ; preds = %2
  %8 = tail call i8* @realloc(i8* %0, i64 %1) #10, !dbg !5115
  tail call void @llvm.dbg.value(metadata i8* %8, i64 0, metadata !5083, metadata !800), !dbg !5108
  %9 = icmp eq i8* %8, null, !dbg !5116
  %10 = icmp ne i64 %1, 0, !dbg !5117
  %11 = and i1 %10, %9, !dbg !5118
  br i1 %11, label %12, label %13, !dbg !5118

; <label>:12:                                     ; preds = %7
  tail call void @xalloc_die() #14, !dbg !5119
  unreachable, !dbg !5119

; <label>:13:                                     ; preds = %7, %6
  %14 = phi i8* [ null, %6 ], [ %8, %7 ]
  ret i8* %14, !dbg !5120
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define noalias i8* @x2nrealloc(i8*, i64* nocapture, i64) local_unnamed_addr #12 !dbg !760 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !765, metadata !800), !dbg !5121
  tail call void @llvm.dbg.value(metadata i64* %1, i64 0, metadata !766, metadata !800), !dbg !5122
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !767, metadata !800), !dbg !5123
  %4 = load i64, i64* %1, align 8, !dbg !5124, !tbaa !1090
  tail call void @llvm.dbg.value(metadata i64 %4, i64 0, metadata !768, metadata !800), !dbg !5125
  %5 = icmp eq i8* %0, null, !dbg !5126
  br i1 %5, label %6, label %13, !dbg !5128

; <label>:6:                                      ; preds = %3
  %7 = icmp eq i64 %4, 0, !dbg !5129
  br i1 %7, label %8, label %17, !dbg !5132

; <label>:8:                                      ; preds = %6
  %9 = udiv i64 128, %2, !dbg !5133
  tail call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !768, metadata !800), !dbg !5125
  %10 = icmp ugt i64 %2, 128, !dbg !5135
  %11 = zext i1 %10 to i64, !dbg !5135
  %12 = add nuw nsw i64 %9, %11, !dbg !5136
  tail call void @llvm.dbg.value(metadata i64 %12, i64 0, metadata !768, metadata !800), !dbg !5125
  br label %17, !dbg !5137

; <label>:13:                                     ; preds = %3
  %14 = udiv i64 6148914691236517204, %2, !dbg !5138
  %15 = icmp ugt i64 %14, %4, !dbg !5141
  br i1 %15, label %20, label %16, !dbg !5142

; <label>:16:                                     ; preds = %13
  tail call void @xalloc_die() #14, !dbg !5143
  unreachable, !dbg !5143

; <label>:17:                                     ; preds = %6, %8
  %18 = phi i64 [ %12, %8 ], [ %4, %6 ]
  tail call void @llvm.dbg.value(metadata i64 %23, i64 0, metadata !768, metadata !800), !dbg !5125
  store i64 %18, i64* %1, align 8, !dbg !5144, !tbaa !1090
  %19 = mul i64 %18, %2, !dbg !5145
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5083, metadata !800) #10, !dbg !5146
  tail call void @llvm.dbg.value(metadata i64 %24, i64 0, metadata !5088, metadata !800) #10, !dbg !5148
  br label %27, !dbg !5149

; <label>:20:                                     ; preds = %13
  %21 = lshr i64 %4, 1, !dbg !5150
  %22 = add i64 %4, 1, !dbg !5151
  %23 = add i64 %22, %21, !dbg !5152
  tail call void @llvm.dbg.value(metadata i64 %23, i64 0, metadata !768, metadata !800), !dbg !5125
  tail call void @llvm.dbg.value(metadata i64 %23, i64 0, metadata !768, metadata !800), !dbg !5125
  store i64 %23, i64* %1, align 8, !dbg !5144, !tbaa !1090
  %24 = mul i64 %23, %2, !dbg !5145
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5083, metadata !800) #10, !dbg !5146
  tail call void @llvm.dbg.value(metadata i64 %24, i64 0, metadata !5088, metadata !800) #10, !dbg !5148
  %25 = icmp eq i64 %24, 0, !dbg !5153
  br i1 %25, label %26, label %27, !dbg !5149

; <label>:26:                                     ; preds = %20
  tail call void @free(i8* nonnull %0) #10, !dbg !5154
  br label %34, !dbg !5155

; <label>:27:                                     ; preds = %17, %20
  %28 = phi i64 [ %19, %17 ], [ %24, %20 ]
  %29 = tail call i8* @realloc(i8* %0, i64 %28) #10, !dbg !5156
  tail call void @llvm.dbg.value(metadata i8* %29, i64 0, metadata !5083, metadata !800) #10, !dbg !5146
  %30 = icmp eq i8* %29, null, !dbg !5157
  %31 = icmp ne i64 %28, 0, !dbg !5158
  %32 = and i1 %31, %30, !dbg !5159
  br i1 %32, label %33, label %34, !dbg !5159

; <label>:33:                                     ; preds = %27
  tail call void @xalloc_die() #14, !dbg !5160
  unreachable, !dbg !5160

; <label>:34:                                     ; preds = %26, %27
  %35 = phi i8* [ null, %26 ], [ %29, %27 ]
  ret i8* %35, !dbg !5161
}

; Function Attrs: inlinehint nounwind sspstrong uwtable
define noalias i8* @xcharalloc(i64) local_unnamed_addr #12 !dbg !5162 {
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5164, metadata !800), !dbg !5165
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5042, metadata !800) #10, !dbg !5166
  %2 = tail call noalias i8* @malloc(i64 %0) #10, !dbg !5168
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !5048, metadata !800) #10, !dbg !5169
  %3 = icmp eq i8* %2, null, !dbg !5170
  %4 = icmp ne i64 %0, 0, !dbg !5171
  %5 = and i1 %4, %3, !dbg !5172
  br i1 %5, label %6, label %7, !dbg !5172

; <label>:6:                                      ; preds = %1
  tail call void @xalloc_die() #14, !dbg !5173
  unreachable, !dbg !5173

; <label>:7:                                      ; preds = %1
  ret i8* %2, !dbg !5174
}

; Function Attrs: nounwind sspstrong uwtable
define noalias i8* @x2realloc(i8*, i64* nocapture) local_unnamed_addr #6 !dbg !5175 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5179, metadata !800), !dbg !5181
  tail call void @llvm.dbg.value(metadata i64* %1, i64 0, metadata !5180, metadata !800), !dbg !5182
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !765, metadata !800) #10, !dbg !5183
  tail call void @llvm.dbg.value(metadata i64* %1, i64 0, metadata !766, metadata !800) #10, !dbg !5185
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !767, metadata !800) #10, !dbg !5186
  %3 = load i64, i64* %1, align 8, !dbg !5187, !tbaa !1090
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !768, metadata !800) #10, !dbg !5188
  %4 = icmp eq i8* %0, null, !dbg !5189
  br i1 %4, label %5, label %8, !dbg !5190

; <label>:5:                                      ; preds = %2
  %6 = icmp eq i64 %3, 0, !dbg !5191
  tail call void @llvm.dbg.value(metadata i64 128, i64 0, metadata !768, metadata !800) #10, !dbg !5188
  tail call void @llvm.dbg.value(metadata i64 128, i64 0, metadata !768, metadata !800) #10, !dbg !5188
  %7 = select i1 %6, i64 128, i64 %3, !dbg !5192
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !768, metadata !800) #10, !dbg !5188
  store i64 %7, i64* %1, align 8, !dbg !5193, !tbaa !1090
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5083, metadata !800) #10, !dbg !5194
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !5088, metadata !800) #10, !dbg !5196
  br label %17, !dbg !5197

; <label>:8:                                      ; preds = %2
  %9 = icmp ult i64 %3, 6148914691236517204, !dbg !5198
  br i1 %9, label %11, label %10, !dbg !5199

; <label>:10:                                     ; preds = %8
  tail call void @xalloc_die() #14, !dbg !5200
  unreachable, !dbg !5200

; <label>:11:                                     ; preds = %8
  %12 = lshr i64 %3, 1, !dbg !5201
  %13 = add i64 %3, 1, !dbg !5202
  %14 = add i64 %13, %12, !dbg !5203
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !768, metadata !800) #10, !dbg !5188
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !768, metadata !800) #10, !dbg !5188
  store i64 %14, i64* %1, align 8, !dbg !5193, !tbaa !1090
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5083, metadata !800) #10, !dbg !5194
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !5088, metadata !800) #10, !dbg !5196
  %15 = icmp eq i64 %14, 0, !dbg !5204
  br i1 %15, label %16, label %17, !dbg !5197

; <label>:16:                                     ; preds = %11
  tail call void @free(i8* nonnull %0) #10, !dbg !5205
  br label %24, !dbg !5206

; <label>:17:                                     ; preds = %11, %5
  %18 = phi i64 [ %7, %5 ], [ %14, %11 ]
  %19 = tail call i8* @realloc(i8* %0, i64 %18) #10, !dbg !5207
  tail call void @llvm.dbg.value(metadata i8* %19, i64 0, metadata !5083, metadata !800) #10, !dbg !5194
  %20 = icmp eq i8* %19, null, !dbg !5208
  %21 = icmp ne i64 %18, 0, !dbg !5209
  %22 = and i1 %21, %20, !dbg !5210
  br i1 %22, label %23, label %24, !dbg !5210

; <label>:23:                                     ; preds = %17
  tail call void @xalloc_die() #14, !dbg !5211
  unreachable, !dbg !5211

; <label>:24:                                     ; preds = %16, %17
  %25 = phi i8* [ null, %16 ], [ %19, %17 ]
  ret i8* %25, !dbg !5212
}

; Function Attrs: nounwind sspstrong uwtable
define noalias i8* @xzalloc(i64) local_unnamed_addr #6 !dbg !5213 {
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5215, metadata !800), !dbg !5216
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5042, metadata !800) #10, !dbg !5217
  %2 = tail call noalias i8* @malloc(i64 %0) #10, !dbg !5219
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !5048, metadata !800) #10, !dbg !5220
  %3 = icmp eq i8* %2, null, !dbg !5221
  %4 = icmp ne i64 %0, 0, !dbg !5222
  %5 = and i1 %4, %3, !dbg !5223
  br i1 %5, label %6, label %7, !dbg !5223

; <label>:6:                                      ; preds = %1
  tail call void @xalloc_die() #14, !dbg !5224
  unreachable, !dbg !5224

; <label>:7:                                      ; preds = %1
  tail call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 %0, i32 1, i1 false), !dbg !5225
  ret i8* %2, !dbg !5226
}

; Function Attrs: nounwind sspstrong uwtable
define noalias i8* @xcalloc(i64, i64) local_unnamed_addr #6 !dbg !5227 {
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5229, metadata !800), !dbg !5232
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !5230, metadata !800), !dbg !5233
  %3 = udiv i64 9223372036854775807, %1, !dbg !5234
  %4 = icmp ult i64 %3, %0, !dbg !5234
  br i1 %4, label %8, label %5, !dbg !5236

; <label>:5:                                      ; preds = %2
  %6 = tail call i8* @rpl_calloc(i64 %0, i64 %1) #10, !dbg !5237
  tail call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !5231, metadata !800), !dbg !5239
  %7 = icmp eq i8* %6, null, !dbg !5240
  br i1 %7, label %8, label %9, !dbg !5241

; <label>:8:                                      ; preds = %5, %2
  tail call void @xalloc_die() #14, !dbg !5243
  unreachable, !dbg !5243

; <label>:9:                                      ; preds = %5
  ret i8* %6, !dbg !5244
}

; Function Attrs: nounwind sspstrong uwtable
define noalias i8* @xmemdup(i8* nocapture readonly, i64) local_unnamed_addr #6 !dbg !5245 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5247, metadata !800), !dbg !5249
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !5248, metadata !800), !dbg !5250
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !5042, metadata !800) #10, !dbg !5251
  %3 = tail call noalias i8* @malloc(i64 %1) #10, !dbg !5253
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !5048, metadata !800) #10, !dbg !5254
  %4 = icmp eq i8* %3, null, !dbg !5255
  %5 = icmp ne i64 %1, 0, !dbg !5256
  %6 = and i1 %5, %4, !dbg !5257
  br i1 %6, label %7, label %8, !dbg !5257

; <label>:7:                                      ; preds = %2
  tail call void @xalloc_die() #14, !dbg !5258
  unreachable, !dbg !5258

; <label>:8:                                      ; preds = %2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %0, i64 %1, i32 1, i1 false), !dbg !5259
  ret i8* %3, !dbg !5260
}

; Function Attrs: nounwind sspstrong uwtable
define noalias i8* @xstrdup(i8* nocapture readonly) local_unnamed_addr #6 !dbg !5261 {
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5263, metadata !800), !dbg !5264
  %2 = tail call i64 @strlen(i8* %0) #13, !dbg !5265
  %3 = add i64 %2, 1, !dbg !5266
  tail call void @llvm.dbg.value(metadata i8* %0, i64 0, metadata !5247, metadata !800) #10, !dbg !5267
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !5248, metadata !800) #10, !dbg !5270
  tail call void @llvm.dbg.value(metadata i64 %3, i64 0, metadata !5042, metadata !800) #10, !dbg !5271
  %4 = tail call noalias i8* @malloc(i64 %3) #10, !dbg !5273
  tail call void @llvm.dbg.value(metadata i8* %4, i64 0, metadata !5048, metadata !800) #10, !dbg !5274
  %5 = icmp eq i8* %4, null, !dbg !5275
  %6 = icmp ne i64 %3, 0, !dbg !5276
  %7 = and i1 %6, %5, !dbg !5277
  br i1 %7, label %8, label %9, !dbg !5277

; <label>:8:                                      ; preds = %1
  tail call void @xalloc_die() #14, !dbg !5278
  unreachable, !dbg !5278

; <label>:9:                                      ; preds = %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %0, i64 %3, i32 1, i1 false) #10, !dbg !5279
  ret i8* %4, !dbg !5280
}

; Function Attrs: noreturn nounwind sspstrong uwtable
define void @xalloc_die() local_unnamed_addr #0 !dbg !5281 {
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !5283, !tbaa !1019
  %2 = tail call i8* @dcgettext(i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.137, i64 0, i64 0), i32 5) #10, !dbg !5284
  tail call void (i32, i32, i8*, ...) @error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i64 0, i64 0), i8* %2) #10, !dbg !5285
  tail call void @abort() #14, !dbg !5287
  unreachable, !dbg !5287
}

; Function Attrs: nounwind sspstrong uwtable
define noalias i8* @rpl_calloc(i64, i64) local_unnamed_addr #6 !dbg !5288 {
  tail call void @llvm.dbg.value(metadata i64 %0, i64 0, metadata !5291, metadata !800), !dbg !5297
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !5292, metadata !800), !dbg !5298
  %3 = icmp eq i64 %0, 0, !dbg !5299
  %4 = icmp eq i64 %1, 0, !dbg !5300
  %5 = or i1 %3, %4, !dbg !5302
  br i1 %5, label %12, label %6, !dbg !5302

; <label>:6:                                      ; preds = %2
  %7 = mul i64 %1, %0, !dbg !5303
  tail call void @llvm.dbg.value(metadata i64 %7, i64 0, metadata !5294, metadata !800), !dbg !5304
  %8 = udiv i64 %7, %1, !dbg !5305
  %9 = icmp eq i64 %8, %0, !dbg !5307
  br i1 %9, label %12, label %10, !dbg !5308

; <label>:10:                                     ; preds = %6
  %11 = tail call i32* @__errno_location() #1, !dbg !5309
  store i32 12, i32* %11, align 4, !dbg !5311, !tbaa !1019
  br label %16

; <label>:12:                                     ; preds = %6, %2
  %13 = phi i64 [ 1, %2 ], [ %1, %6 ]
  %14 = phi i64 [ 1, %2 ], [ %0, %6 ]
  tail call void @llvm.dbg.value(metadata i64 %14, i64 0, metadata !5291, metadata !800), !dbg !5297
  tail call void @llvm.dbg.value(metadata i64 %13, i64 0, metadata !5292, metadata !800), !dbg !5298
  %15 = tail call noalias i8* @calloc(i64 %14, i64 %13) #10, !dbg !5312
  tail call void @llvm.dbg.value(metadata i8* %15, i64 0, metadata !5293, metadata !800), !dbg !5313
  br label %16, !dbg !5314

; <label>:16:                                     ; preds = %10, %12
  %17 = phi i8* [ %15, %12 ], [ null, %10 ]
  ret i8* %17, !dbg !5315
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define i32 @rpl_fclose(%struct._IO_FILE* nonnull) local_unnamed_addr #6 !dbg !5316 {
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !5361, metadata !800), !dbg !5365
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !5362, metadata !800), !dbg !5366
  tail call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !5364, metadata !800), !dbg !5367
  %2 = tail call i32 @fileno(%struct._IO_FILE* nonnull %0) #10, !dbg !5368
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !5363, metadata !800), !dbg !5369
  %3 = icmp slt i32 %2, 0, !dbg !5370
  br i1 %3, label %4, label %6, !dbg !5372

; <label>:4:                                      ; preds = %1
  %5 = tail call i32 @fclose(%struct._IO_FILE* nonnull %0), !dbg !5373
  br label %24, !dbg !5374

; <label>:6:                                      ; preds = %1
  %7 = tail call i32 @__freading(%struct._IO_FILE* nonnull %0) #10, !dbg !5375
  %8 = icmp eq i32 %7, 0, !dbg !5375
  br i1 %8, label %13, label %9, !dbg !5377

; <label>:9:                                      ; preds = %6
  %10 = tail call i32 @fileno(%struct._IO_FILE* nonnull %0) #10, !dbg !5378
  %11 = tail call i64 @lseek(i32 %10, i64 0, i32 1) #10, !dbg !5380
  %12 = icmp eq i64 %11, -1, !dbg !5382
  br i1 %12, label %16, label %13, !dbg !5383

; <label>:13:                                     ; preds = %9, %6
  %14 = tail call i32 @rpl_fflush(%struct._IO_FILE* nonnull %0) #10, !dbg !5384
  %15 = icmp eq i32 %14, 0, !dbg !5384
  br i1 %15, label %16, label %18, !dbg !5385

; <label>:16:                                     ; preds = %13, %9
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !5362, metadata !800), !dbg !5366
  %17 = tail call i32 @fclose(%struct._IO_FILE* nonnull %0), !dbg !5387
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !5364, metadata !800), !dbg !5367
  br label %24, !dbg !5388

; <label>:18:                                     ; preds = %13
  %19 = tail call i32* @__errno_location() #1, !dbg !5389
  %20 = load i32, i32* %19, align 4, !dbg !5389, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !5362, metadata !800), !dbg !5366
  tail call void @llvm.dbg.value(metadata i32 %20, i64 0, metadata !5362, metadata !800), !dbg !5366
  %21 = tail call i32 @fclose(%struct._IO_FILE* nonnull %0), !dbg !5387
  tail call void @llvm.dbg.value(metadata i32 %21, i64 0, metadata !5364, metadata !800), !dbg !5367
  %22 = icmp eq i32 %20, 0, !dbg !5390
  br i1 %22, label %24, label %23, !dbg !5388

; <label>:23:                                     ; preds = %18
  store i32 %20, i32* %19, align 4, !dbg !5392, !tbaa !1019
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !5364, metadata !800), !dbg !5367
  br label %24, !dbg !5394

; <label>:24:                                     ; preds = %16, %23, %18, %4
  %25 = phi i32 [ %5, %4 ], [ -1, %23 ], [ %21, %18 ], [ %17, %16 ]
  ret i32 %25, !dbg !5395
}

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__freading(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @lseek(i32, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define i32 @rpl_fcntl(i32, i32, ...) local_unnamed_addr #6 !dbg !360 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !368, metadata !800), !dbg !5396
  tail call void @llvm.dbg.value(metadata i32 %1, i64 0, metadata !369, metadata !800), !dbg !5397
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*, !dbg !5398
  call void @llvm.lifetime.start(i64 24, i8* nonnull %4) #10, !dbg !5398
  tail call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %3, metadata !370, metadata !800), !dbg !5399
  tail call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !381, metadata !800), !dbg !5400
  call void @llvm.va_start(i8* nonnull %4), !dbg !5401
  %5 = icmp eq i32 %1, 1030, !dbg !5402
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0
  %7 = load i32, i32* %6, align 16
  %8 = icmp ult i32 %7, 41
  br i1 %5, label %9, label %59, !dbg !5402

; <label>:9:                                      ; preds = %2
  br i1 %8, label %10, label %16, !dbg !5403

; <label>:10:                                     ; preds = %9
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3, !dbg !5404
  %12 = load i8*, i8** %11, align 16, !dbg !5404
  %13 = sext i32 %7 to i64, !dbg !5404
  %14 = getelementptr i8, i8* %12, i64 %13, !dbg !5404
  %15 = add i32 %7, 8, !dbg !5404
  store i32 %15, i32* %6, align 16, !dbg !5404
  br label %20, !dbg !5404

; <label>:16:                                     ; preds = %9
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2, !dbg !5406
  %18 = load i8*, i8** %17, align 8, !dbg !5406
  %19 = getelementptr i8, i8* %18, i64 8, !dbg !5406
  store i8* %19, i8** %17, align 8, !dbg !5406
  br label %20, !dbg !5406

; <label>:20:                                     ; preds = %16, %10
  %21 = phi i8* [ %14, %10 ], [ %18, %16 ]
  %22 = bitcast i8* %21 to i32*, !dbg !5408
  %23 = load i32, i32* %22, align 4, !dbg !5408
  call void @llvm.dbg.value(metadata i32 %23, i64 0, metadata !382, metadata !800), !dbg !5410
  %24 = load i32, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !dbg !5411, !tbaa !1019
  %25 = icmp sgt i32 %24, -1, !dbg !5413
  br i1 %25, label %26, label %39, !dbg !5414

; <label>:26:                                     ; preds = %20
  %27 = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 1030, i32 %23) #10, !dbg !5415
  call void @llvm.dbg.value(metadata i32 %27, i64 0, metadata !381, metadata !800), !dbg !5400
  %28 = icmp sgt i32 %27, -1, !dbg !5417
  br i1 %28, label %36, label %29, !dbg !5419

; <label>:29:                                     ; preds = %26
  %30 = tail call i32* @__errno_location() #1, !dbg !5420
  %31 = load i32, i32* %30, align 4, !dbg !5420, !tbaa !1019
  %32 = icmp eq i32 %31, 22, !dbg !5422
  br i1 %32, label %33, label %36, !dbg !5423

; <label>:33:                                     ; preds = %29
  %34 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 %23), !dbg !5425
  call void @llvm.dbg.value(metadata i32 %34, i64 0, metadata !381, metadata !800), !dbg !5400
  %35 = icmp slt i32 %34, 0, !dbg !5427
  br i1 %35, label %75, label %36, !dbg !5429

; <label>:36:                                     ; preds = %29, %26, %33
  %37 = phi i32 [ %27, %26 ], [ %27, %29 ], [ %34, %33 ]
  %38 = phi i32 [ 1, %26 ], [ 1, %29 ], [ -1, %33 ]
  call void @llvm.dbg.value(metadata i32 %37, i64 0, metadata !381, metadata !800), !dbg !5400
  store i32 %38, i32* @rpl_fcntl.have_dupfd_cloexec, align 4, !tbaa !1019
  br label %42, !dbg !5430

; <label>:39:                                     ; preds = %20
  %40 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 %23), !dbg !5431
  call void @llvm.dbg.value(metadata i32 %40, i64 0, metadata !381, metadata !800), !dbg !5400
  %41 = load i32, i32* @rpl_fcntl.have_dupfd_cloexec, align 4
  br label %42

; <label>:42:                                     ; preds = %39, %36
  %43 = phi i32 [ %38, %36 ], [ %41, %39 ], !dbg !5432
  %44 = phi i32 [ %37, %36 ], [ %40, %39 ]
  call void @llvm.dbg.value(metadata i32 %44, i64 0, metadata !381, metadata !800), !dbg !5400
  %45 = icmp sgt i32 %44, -1, !dbg !5434
  %46 = icmp eq i32 %43, -1, !dbg !5435
  %47 = and i1 %45, %46, !dbg !5436
  br i1 %47, label %48, label %75, !dbg !5436

; <label>:48:                                     ; preds = %42
  %49 = call i32 (i32, i32, ...) @fcntl(i32 %44, i32 1) #10, !dbg !5437
  call void @llvm.dbg.value(metadata i32 %49, i64 0, metadata !385, metadata !800), !dbg !5438
  %50 = icmp slt i32 %49, 0, !dbg !5439
  br i1 %50, label %55, label %51, !dbg !5440

; <label>:51:                                     ; preds = %48
  %52 = or i32 %49, 1, !dbg !5441
  %53 = call i32 (i32, i32, ...) @fcntl(i32 %44, i32 2, i32 %52) #10, !dbg !5443
  %54 = icmp eq i32 %53, -1, !dbg !5444
  br i1 %54, label %55, label %75, !dbg !5445

; <label>:55:                                     ; preds = %51, %48
  %56 = tail call i32* @__errno_location() #1, !dbg !5447
  %57 = load i32, i32* %56, align 4, !dbg !5447, !tbaa !1019
  call void @llvm.dbg.value(metadata i32 %57, i64 0, metadata !388, metadata !800), !dbg !5448
  %58 = call i32 @close(i32 %44) #10, !dbg !5449
  store i32 %57, i32* %56, align 4, !dbg !5450, !tbaa !1019
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !381, metadata !800), !dbg !5400
  br label %75, !dbg !5451

; <label>:59:                                     ; preds = %2
  br i1 %8, label %60, label %66, !dbg !5452

; <label>:60:                                     ; preds = %59
  %61 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3, !dbg !5453
  %62 = load i8*, i8** %61, align 16, !dbg !5453
  %63 = sext i32 %7 to i64, !dbg !5453
  %64 = getelementptr i8, i8* %62, i64 %63, !dbg !5453
  %65 = add i32 %7, 8, !dbg !5453
  store i32 %65, i32* %6, align 16, !dbg !5453
  br label %70, !dbg !5453

; <label>:66:                                     ; preds = %59
  %67 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2, !dbg !5455
  %68 = load i8*, i8** %67, align 8, !dbg !5455
  %69 = getelementptr i8, i8* %68, i64 8, !dbg !5455
  store i8* %69, i8** %67, align 8, !dbg !5455
  br label %70, !dbg !5455

; <label>:70:                                     ; preds = %66, %60
  %71 = phi i8* [ %64, %60 ], [ %68, %66 ]
  %72 = bitcast i8* %71 to i8**, !dbg !5457
  %73 = load i8*, i8** %72, align 8, !dbg !5457
  call void @llvm.dbg.value(metadata i8* %73, i64 0, metadata !391, metadata !800), !dbg !5459
  %74 = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 %1, i8* %73) #10, !dbg !5460
  call void @llvm.dbg.value(metadata i32 %74, i64 0, metadata !381, metadata !800), !dbg !5400
  br label %75

; <label>:75:                                     ; preds = %33, %51, %55, %42, %70
  %76 = phi i32 [ %74, %70 ], [ %34, %33 ], [ %44, %42 ], [ -1, %55 ], [ %44, %51 ]
  call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !381, metadata !800), !dbg !5400
  call void @llvm.va_end(i8* nonnull %4), !dbg !5461
  call void @llvm.lifetime.end(i64 24, i8* nonnull %4) #10, !dbg !5462
  ret i32 %76, !dbg !5463
}

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind sspstrong uwtable
define i32 @rpl_fflush(%struct._IO_FILE*) local_unnamed_addr #6 !dbg !5464 {
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !5509, metadata !800), !dbg !5510
  %2 = icmp eq %struct._IO_FILE* %0, null, !dbg !5511
  br i1 %2, label %6, label %3, !dbg !5513

; <label>:3:                                      ; preds = %1
  %4 = tail call i32 @__freading(%struct._IO_FILE* nonnull %0) #10, !dbg !5514
  %5 = icmp eq i32 %4, 0, !dbg !5514
  br i1 %5, label %6, label %8, !dbg !5516

; <label>:6:                                      ; preds = %3, %1
  %7 = tail call i32 @fflush(%struct._IO_FILE* %0), !dbg !5518
  br label %17, !dbg !5519

; <label>:8:                                      ; preds = %3
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !5520, metadata !800) #10, !dbg !5525
  %9 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 0, !dbg !5527
  %10 = load i32, i32* %9, align 8, !dbg !5527, !tbaa !1497
  %11 = and i32 %10, 256, !dbg !5529
  %12 = icmp eq i32 %11, 0, !dbg !5529
  br i1 %12, label %15, label %13, !dbg !5530

; <label>:13:                                     ; preds = %8
  %14 = tail call i32 @rpl_fseeko(%struct._IO_FILE* nonnull %0, i64 0, i32 1) #10, !dbg !5531
  br label %15, !dbg !5531

; <label>:15:                                     ; preds = %8, %13
  %16 = tail call i32 @fflush(%struct._IO_FILE* nonnull %0), !dbg !5532
  br label %17, !dbg !5533

; <label>:17:                                     ; preds = %15, %6
  %18 = phi i32 [ %7, %6 ], [ %16, %15 ]
  ret i32 %18, !dbg !5534
}

; Function Attrs: nounwind
declare i32 @fflush(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define i32 @rpl_fseeko(%struct._IO_FILE* nocapture nonnull, i64, i32) local_unnamed_addr #6 !dbg !5535 {
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !5580, metadata !800), !dbg !5586
  tail call void @llvm.dbg.value(metadata i64 %1, i64 0, metadata !5581, metadata !800), !dbg !5587
  tail call void @llvm.dbg.value(metadata i32 %2, i64 0, metadata !5582, metadata !800), !dbg !5588
  %4 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !5589
  %5 = load i8*, i8** %4, align 8, !dbg !5589, !tbaa !5590
  %6 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !5591
  %7 = load i8*, i8** %6, align 8, !dbg !5591, !tbaa !5592
  %8 = icmp eq i8* %5, %7, !dbg !5593
  br i1 %8, label %9, label %28, !dbg !5594

; <label>:9:                                      ; preds = %3
  %10 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !5595
  %11 = load i8*, i8** %10, align 8, !dbg !5595, !tbaa !1412
  %12 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 4, !dbg !5597
  %13 = load i8*, i8** %12, align 8, !dbg !5597, !tbaa !5598
  %14 = icmp eq i8* %11, %13, !dbg !5599
  br i1 %14, label %15, label %28, !dbg !5600

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 9, !dbg !5601
  %17 = load i8*, i8** %16, align 8, !dbg !5601, !tbaa !5602
  %18 = icmp eq i8* %17, null, !dbg !5603
  br i1 %18, label %19, label %28, !dbg !5604

; <label>:19:                                     ; preds = %15
  %20 = tail call i32 @fileno(%struct._IO_FILE* nonnull %0) #10, !dbg !5606
  %21 = tail call i64 @lseek(i32 %20, i64 %1, i32 %2) #10, !dbg !5607
  tail call void @llvm.dbg.value(metadata i64 %21, i64 0, metadata !5583, metadata !800), !dbg !5609
  %22 = icmp eq i64 %21, -1, !dbg !5610
  br i1 %22, label %30, label %23, !dbg !5612

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 0, !dbg !5613
  %25 = load i32, i32* %24, align 8, !dbg !5614, !tbaa !1497
  %26 = and i32 %25, -17, !dbg !5614
  store i32 %26, i32* %24, align 8, !dbg !5614, !tbaa !1497
  %27 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 21, !dbg !5615
  store i64 %21, i64* %27, align 8, !dbg !5616, !tbaa !5617
  br label %30, !dbg !5618

; <label>:28:                                     ; preds = %15, %9, %3
  %29 = tail call i32 @fseeko(%struct._IO_FILE* nonnull %0, i64 %1, i32 %2), !dbg !5619
  br label %30, !dbg !5620

; <label>:30:                                     ; preds = %23, %19, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %23 ], [ -1, %19 ]
  ret i32 %31, !dbg !5621
}

; Function Attrs: nounwind
declare i32 @fseeko(%struct._IO_FILE* nocapture, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define i64 @rpl_mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) local_unnamed_addr #6 !dbg !5622 {
  %5 = alloca i32, align 4
  tail call void @llvm.dbg.value(metadata i32* %0, i64 0, metadata !5639, metadata !800), !dbg !5648
  tail call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !5640, metadata !800), !dbg !5649
  tail call void @llvm.dbg.value(metadata i64 %2, i64 0, metadata !5641, metadata !800), !dbg !5650
  tail call void @llvm.dbg.value(metadata %struct.__mbstate_t* %3, i64 0, metadata !5642, metadata !800), !dbg !5651
  %6 = bitcast i32* %5 to i8*, !dbg !5652
  call void @llvm.lifetime.start(i64 4, i8* nonnull %6) #10, !dbg !5652
  %7 = icmp eq i32* %0, null, !dbg !5653
  tail call void @llvm.dbg.value(metadata i32* %5, i64 0, metadata !5639, metadata !800), !dbg !5648
  %8 = select i1 %7, i32* %5, i32* %0, !dbg !5655
  tail call void @llvm.dbg.value(metadata i32* %8, i64 0, metadata !5639, metadata !800), !dbg !5648
  %9 = call i64 @mbrtowc(i32* %8, i8* %1, i64 %2, %struct.__mbstate_t* %3) #10, !dbg !5656
  call void @llvm.dbg.value(metadata i64 %9, i64 0, metadata !5643, metadata !800), !dbg !5657
  %10 = icmp ugt i64 %9, -3, !dbg !5658
  %11 = icmp ne i64 %2, 0, !dbg !5659
  %12 = and i1 %11, %10, !dbg !5661
  br i1 %12, label %13, label %18, !dbg !5661

; <label>:13:                                     ; preds = %4
  %14 = call zeroext i1 @hard_locale(i32 0) #10, !dbg !5662
  br i1 %14, label %18, label %15, !dbg !5664

; <label>:15:                                     ; preds = %13
  %16 = load i8, i8* %1, align 1, !dbg !5666, !tbaa !1055
  call void @llvm.dbg.value(metadata i8 %16, i64 0, metadata !5645, metadata !800), !dbg !5667
  %17 = zext i8 %16 to i32, !dbg !5668
  store i32 %17, i32* %8, align 4, !dbg !5669, !tbaa !1019
  br label %18

; <label>:18:                                     ; preds = %4, %13, %15
  %19 = phi i64 [ 1, %15 ], [ %9, %13 ], [ %9, %4 ]
  call void @llvm.lifetime.end(i64 4, i8* nonnull %6) #10, !dbg !5670
  ret i64 %19, !dbg !5670
}

; Function Attrs: nounwind
declare i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define i32 @close_stream(%struct._IO_FILE*) local_unnamed_addr #6 !dbg !5671 {
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !5716, metadata !800), !dbg !5721
  %2 = tail call i64 @__fpending(%struct._IO_FILE* %0) #10, !dbg !5722
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %0, i64 0, metadata !5723, metadata !800), !dbg !5726
  %3 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 0, !dbg !5728
  %4 = load i32, i32* %3, align 8, !dbg !5728, !tbaa !1497
  %5 = and i32 %4, 32, !dbg !5728
  %6 = icmp eq i32 %5, 0, !dbg !5729
  %7 = tail call i32 @rpl_fclose(%struct._IO_FILE* %0) #10, !dbg !5730
  %8 = icmp ne i32 %7, 0, !dbg !5731
  br i1 %6, label %9, label %19, !dbg !5732

; <label>:9:                                      ; preds = %1
  %10 = xor i1 %8, true, !dbg !5734
  %11 = icmp ne i64 %2, 0, !dbg !5734
  %12 = or i1 %11, %10, !dbg !5734
  %13 = sext i1 %8 to i32, !dbg !5734
  br i1 %12, label %22, label %14, !dbg !5734

; <label>:14:                                     ; preds = %9
  %15 = tail call i32* @__errno_location() #1, !dbg !5736
  %16 = load i32, i32* %15, align 4, !dbg !5736, !tbaa !1019
  %17 = icmp ne i32 %16, 9, !dbg !5738
  %18 = sext i1 %17 to i32, !dbg !5738
  br label %22, !dbg !5738

; <label>:19:                                     ; preds = %1
  br i1 %8, label %22, label %20, !dbg !5740

; <label>:20:                                     ; preds = %19
  %21 = tail call i32* @__errno_location() #1, !dbg !5742
  store i32 0, i32* %21, align 4, !dbg !5744, !tbaa !1019
  br label %22, !dbg !5742

; <label>:22:                                     ; preds = %9, %14, %19, %20
  %23 = phi i32 [ -1, %20 ], [ -1, %19 ], [ %18, %14 ], [ %13, %9 ]
  ret i32 %23, !dbg !5745
}

; Function Attrs: nounwind
declare i64 @__fpending(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind sspstrong uwtable
define zeroext i1 @hard_locale(i32) local_unnamed_addr #6 !dbg !5746 {
  tail call void @llvm.dbg.value(metadata i32 %0, i64 0, metadata !5751, metadata !800), !dbg !5771
  tail call void @llvm.dbg.value(metadata i8 1, i64 0, metadata !5752, metadata !800), !dbg !5772
  %2 = tail call i8* @setlocale(i32 %0, i8* null) #10, !dbg !5773
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !5753, metadata !800), !dbg !5774
  %3 = icmp eq i8* %2, null, !dbg !5775
  br i1 %3, label %15, label %4, !dbg !5776

; <label>:4:                                      ; preds = %1
  tail call void @llvm.dbg.value(metadata i64 1, i64 0, metadata !5761, metadata !800), !dbg !5777
  tail call void @llvm.dbg.value(metadata i8* %2, i64 0, metadata !5762, metadata !800), !dbg !5778
  %5 = load i8, i8* %2, align 1, !dbg !5779, !tbaa !1055
  %6 = icmp eq i8 %5, 67, !dbg !5781
  br i1 %6, label %7, label %11, !dbg !5784

; <label>:7:                                      ; preds = %4
  %8 = getelementptr inbounds i8, i8* %2, i64 1, !dbg !5786
  %9 = load i8, i8* %8, align 1, !dbg !5786, !tbaa !1055
  %10 = icmp eq i8 %9, 0, !dbg !5789
  br i1 %10, label %14, label %11, !dbg !5791

; <label>:11:                                     ; preds = %4, %7
  tail call void @llvm.dbg.value(metadata i64 5, i64 0, metadata !5767, metadata !800), !dbg !5793
  %12 = tail call i32 @strcmp(i8* nonnull %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.155, i64 0, i64 0)) #10, !dbg !5794
  %13 = icmp eq i32 %12, 0, !dbg !5796
  br i1 %13, label %14, label %15, !dbg !5798

; <label>:14:                                     ; preds = %11, %7
  tail call void @llvm.dbg.value(metadata i8 0, i64 0, metadata !5752, metadata !800), !dbg !5772
  br label %15, !dbg !5800

; <label>:15:                                     ; preds = %1, %11, %14
  %16 = phi i1 [ false, %14 ], [ true, %11 ], [ true, %1 ]
  ret i1 %16, !dbg !5801
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind sspstrong uwtable
define i8* @locale_charset() local_unnamed_addr #6 !dbg !5802 {
  %1 = alloca [51 x i8], align 16
  tail call void @llvm.dbg.declare(metadata [51 x i8]* %1, metadata !5814, metadata !800), !dbg !5888
  %2 = alloca [51 x i8], align 16
  tail call void @llvm.dbg.declare(metadata [51 x i8]* %2, metadata !5881, metadata !800), !dbg !5890
  %3 = tail call i8* @nl_langinfo(i32 14) #10, !dbg !5891
  tail call void @llvm.dbg.value(metadata i8* %3, i64 0, metadata !5806, metadata !800), !dbg !5892
  %4 = icmp eq i8* %3, null, !dbg !5893
  %5 = select i1 %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.158, i64 0, i64 0), i8* %3, !dbg !5895
  tail call void @llvm.dbg.value(metadata i8* %5, i64 0, metadata !5806, metadata !800), !dbg !5892
  %6 = load volatile i8*, i8** @charset_aliases, align 8, !dbg !5896, !tbaa !808
  tail call void @llvm.dbg.value(metadata i8* %6, i64 0, metadata !5828, metadata !800) #10, !dbg !5897
  %7 = icmp eq i8* %6, null, !dbg !5898
  br i1 %7, label %8, label %127, !dbg !5899

; <label>:8:                                      ; preds = %0
  %9 = tail call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.159, i64 0, i64 0)) #10, !dbg !5900
  tail call void @llvm.dbg.value(metadata i8* %9, i64 0, metadata !5829, metadata !800) #10, !dbg !5901
  %10 = icmp eq i8* %9, null, !dbg !5902
  br i1 %10, label %14, label %11, !dbg !5904

; <label>:11:                                     ; preds = %8
  %12 = load i8, i8* %9, align 1, !dbg !5905, !tbaa !1055
  %13 = icmp eq i8 %12, 0, !dbg !5907
  br i1 %13, label %14, label %15, !dbg !5908

; <label>:14:                                     ; preds = %11, %8
  br label %15, !dbg !5910

; <label>:15:                                     ; preds = %14, %11
  %16 = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4.160, i64 0, i64 0), %14 ], [ %9, %11 ]
  tail call void @llvm.dbg.value(metadata i8* %16, i64 0, metadata !5829, metadata !800) #10, !dbg !5901
  %17 = tail call i64 @strlen(i8* nonnull %16) #13, !dbg !5911
  tail call void @llvm.dbg.value(metadata i64 %17, i64 0, metadata !5832, metadata !800) #10, !dbg !5912
  tail call void @llvm.dbg.value(metadata i64 13, i64 0, metadata !5834, metadata !800) #10, !dbg !5913
  %18 = icmp eq i64 %17, 0, !dbg !5914
  br i1 %18, label %24, label %19, !dbg !5915

; <label>:19:                                     ; preds = %15
  %20 = add i64 %17, -1, !dbg !5916
  %21 = getelementptr inbounds i8, i8* %16, i64 %20, !dbg !5916
  %22 = load i8, i8* %21, align 1, !dbg !5916, !tbaa !1055
  %23 = icmp ne i8 %22, 47, !dbg !5918
  br label %24

; <label>:24:                                     ; preds = %19, %15
  %25 = phi i1 [ false, %15 ], [ %23, %19 ]
  %26 = zext i1 %25 to i64, !dbg !5919
  %27 = add i64 %17, 14, !dbg !5920
  %28 = add i64 %27, %26, !dbg !5921
  %29 = tail call noalias i8* @malloc(i64 %28) #10, !dbg !5922
  tail call void @llvm.dbg.value(metadata i8* %29, i64 0, metadata !5831, metadata !800) #10, !dbg !5923
  %30 = icmp eq i8* %29, null, !dbg !5924
  br i1 %30, label %125, label %31, !dbg !5924

; <label>:31:                                     ; preds = %24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull %29, i8* %16, i64 %17, i32 1, i1 false) #10, !dbg !5925
  %32 = getelementptr inbounds i8, i8* %29, i64 %17
  br i1 %25, label %33, label %35, !dbg !5928

; <label>:33:                                     ; preds = %31
  store i8 47, i8* %32, align 1, !dbg !5929, !tbaa !1055
  %34 = getelementptr inbounds i8, i8* %32, i64 %26, !dbg !5931
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.161, i64 0, i64 0), i64 14, i32 1, i1 false) #10, !dbg !5932
  br label %37, !dbg !5933

; <label>:35:                                     ; preds = %31
  %36 = getelementptr inbounds i8, i8* %32, i64 %26, !dbg !5931
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.161, i64 0, i64 0), i64 14, i32 1, i1 false) #10, !dbg !5932
  br label %37, !dbg !5933

; <label>:37:                                     ; preds = %35, %33
  %38 = tail call i32 (i8*, i32, ...) @open(i8* nonnull %29, i32 131072) #10, !dbg !5934
  tail call void @llvm.dbg.value(metadata i32 %38, i64 0, metadata !5836, metadata !800) #10, !dbg !5935
  %39 = icmp slt i32 %38, 0, !dbg !5936
  br i1 %39, label %123, label %40, !dbg !5937

; <label>:40:                                     ; preds = %37
  %41 = tail call %struct._IO_FILE* @fdopen(i32 %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.162, i64 0, i64 0)) #10, !dbg !5938
  tail call void @llvm.dbg.value(metadata %struct._IO_FILE* %41, i64 0, metadata !5837, metadata !800) #10, !dbg !5939
  %42 = icmp eq %struct._IO_FILE* %41, null, !dbg !5940
  br i1 %42, label %48, label %43, !dbg !5941

; <label>:43:                                     ; preds = %40
  %44 = getelementptr inbounds [51 x i8], [51 x i8]* %1, i64 0, i64 0
  %45 = getelementptr inbounds [51 x i8], [51 x i8]* %2, i64 0, i64 0
  %46 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i64 0, i32 1
  %47 = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %41, i64 0, i32 2
  br label %50, !dbg !5942

; <label>:48:                                     ; preds = %40
  %49 = tail call i32 @close(i32 %38) #10, !dbg !5943
  br label %123, !dbg !5945

; <label>:50:                                     ; preds = %111, %43
  %51 = phi i64 [ %112, %111 ], [ 0, %43 ]
  %52 = phi i8* [ %113, %111 ], [ null, %43 ]
  call void @llvm.dbg.value(metadata i8* %52, i64 0, metadata !5878, metadata !800) #10, !dbg !5942
  call void @llvm.dbg.value(metadata i64 %51, i64 0, metadata !5879, metadata !800) #10, !dbg !5946
  call void @llvm.lifetime.start(i64 51, i8* nonnull %44) #10, !dbg !5947
  call void @llvm.lifetime.start(i64 51, i8* nonnull %45) #10, !dbg !5948
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %41, i64 0, metadata !5949, metadata !800) #10, !dbg !5954
  %53 = load i8*, i8** %46, align 8, !dbg !5956, !tbaa !5592
  %54 = load i8*, i8** %47, align 8, !dbg !5956, !tbaa !5590
  %55 = icmp ult i8* %53, %54, !dbg !5956
  br i1 %55, label %58, label %56, !dbg !5956, !prof !1415

; <label>:56:                                     ; preds = %50
  %57 = call i32 @__uflow(%struct._IO_FILE* nonnull %41) #10, !dbg !5957
  br label %62, !dbg !5957

; <label>:58:                                     ; preds = %50
  %59 = getelementptr inbounds i8, i8* %53, i64 1, !dbg !5959
  store i8* %59, i8** %46, align 8, !dbg !5959, !tbaa !5592
  %60 = load i8, i8* %53, align 1, !dbg !5959, !tbaa !1055
  %61 = zext i8 %60 to i32, !dbg !5959
  br label %62, !dbg !5959

; <label>:62:                                     ; preds = %58, %56
  %63 = phi i32 [ %57, %56 ], [ %61, %58 ], !dbg !5961
  call void @llvm.dbg.value(metadata i32 %63, i64 0, metadata !5880, metadata !800) #10, !dbg !5963
  switch i32 %63, label %77 [
    i32 -1, label %115
    i32 32, label %111
    i32 10, label %111
    i32 9, label %111
    i32 35, label %64
  ], !dbg !5964

; <label>:64:                                     ; preds = %62
  br label %65, !dbg !5965

; <label>:65:                                     ; preds = %64, %75
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %41, i64 0, metadata !5949, metadata !800) #10, !dbg !5965
  %66 = load i8*, i8** %46, align 8, !dbg !5969, !tbaa !5592
  %67 = load i8*, i8** %47, align 8, !dbg !5969, !tbaa !5590
  %68 = icmp ult i8* %66, %67, !dbg !5969
  br i1 %68, label %71, label %69, !dbg !5969, !prof !1415

; <label>:69:                                     ; preds = %65
  %70 = call i32 @__uflow(%struct._IO_FILE* nonnull %41) #10, !dbg !5970
  br label %75, !dbg !5970

; <label>:71:                                     ; preds = %65
  %72 = getelementptr inbounds i8, i8* %66, i64 1, !dbg !5971
  store i8* %72, i8** %46, align 8, !dbg !5971, !tbaa !5592
  %73 = load i8, i8* %66, align 1, !dbg !5971, !tbaa !1055
  %74 = zext i8 %73 to i32, !dbg !5971
  br label %75, !dbg !5971

; <label>:75:                                     ; preds = %71, %69
  %76 = phi i32 [ %70, %69 ], [ %74, %71 ], !dbg !5972
  call void @llvm.dbg.value(metadata i32 %76, i64 0, metadata !5880, metadata !800) #10, !dbg !5963
  switch i32 %76, label %65 [
    i32 -1, label %114
    i32 10, label %110
  ], !dbg !5973, !llvm.loop !5975

; <label>:77:                                     ; preds = %62
  %78 = call i32 @ungetc(i32 %63, %struct._IO_FILE* nonnull %41) #10, !dbg !5978
  %79 = call i32 (%struct._IO_FILE*, i8*, ...) @fscanf(%struct._IO_FILE* nonnull %41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6.163, i64 0, i64 0), i8* nonnull %44, i8* nonnull %45) #10, !dbg !5979
  %80 = icmp slt i32 %79, 2, !dbg !5981
  br i1 %80, label %115, label %81, !dbg !5982

; <label>:81:                                     ; preds = %77
  %82 = call i64 @strlen(i8* nonnull %44) #13, !dbg !5983
  call void @llvm.dbg.value(metadata i64 %82, i64 0, metadata !5885, metadata !800) #10, !dbg !5984
  %83 = call i64 @strlen(i8* nonnull %45) #13, !dbg !5985
  call void @llvm.dbg.value(metadata i64 %83, i64 0, metadata !5886, metadata !800) #10, !dbg !5986
  call void @llvm.dbg.value(metadata i8* %52, i64 0, metadata !5887, metadata !800) #10, !dbg !5987
  %84 = icmp eq i64 %51, 0, !dbg !5988
  %85 = add i64 %82, 1
  %86 = add i64 %85, %83
  %87 = add i64 %86, 1
  br i1 %84, label %88, label %91, !dbg !5990

; <label>:88:                                     ; preds = %81
  call void @llvm.dbg.value(metadata i64 %87, i64 0, metadata !5879, metadata !800) #10, !dbg !5946
  %89 = add i64 %86, 2, !dbg !5991
  %90 = call noalias i8* @malloc(i64 %89) #10, !dbg !5993
  call void @llvm.dbg.value(metadata i8* %90, i64 0, metadata !5878, metadata !800) #10, !dbg !5942
  br label %95, !dbg !5994

; <label>:91:                                     ; preds = %81
  %92 = add i64 %87, %51, !dbg !5995
  call void @llvm.dbg.value(metadata i64 %92, i64 0, metadata !5879, metadata !800) #10, !dbg !5946
  %93 = add i64 %92, 1, !dbg !5997
  %94 = call i8* @realloc(i8* %52, i64 %93) #10, !dbg !5998
  call void @llvm.dbg.value(metadata i8* %94, i64 0, metadata !5878, metadata !800) #10, !dbg !5942
  br label %95

; <label>:95:                                     ; preds = %91, %88
  %96 = phi i64 [ %87, %88 ], [ %92, %91 ]
  %97 = phi i8* [ %90, %88 ], [ %94, %91 ]
  call void @llvm.dbg.value(metadata i8* %97, i64 0, metadata !5878, metadata !800) #10, !dbg !5942
  call void @llvm.dbg.value(metadata i64 %96, i64 0, metadata !5879, metadata !800) #10, !dbg !5946
  %98 = icmp eq i8* %97, null, !dbg !5999
  br i1 %98, label %99, label %100, !dbg !6001

; <label>:99:                                     ; preds = %95
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !5879, metadata !800) #10, !dbg !5946
  call void @free(i8* %52) #10, !dbg !6002
  br label %116, !dbg !6004

; <label>:100:                                    ; preds = %95
  %101 = getelementptr inbounds i8, i8* %97, i64 %96, !dbg !6005
  %102 = xor i64 %83, -1, !dbg !6006
  %103 = getelementptr inbounds i8, i8* %101, i64 %102, !dbg !6006
  %104 = xor i64 %82, -1, !dbg !6007
  %105 = getelementptr inbounds i8, i8* %103, i64 %104, !dbg !6007
  call void @llvm.dbg.value(metadata i8* %105, i64 0, metadata !6008, metadata !800) #10, !dbg !6017
  call void @llvm.dbg.value(metadata i8* %44, i64 0, metadata !6016, metadata !800) #10, !dbg !6017
  %106 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %105, i1 false) #10, !dbg !6019
  %107 = call i8* @__strcpy_chk(i8* nonnull %105, i8* nonnull %44, i64 %106) #10, !dbg !6020
  call void @llvm.dbg.value(metadata i8* %103, i64 0, metadata !6008, metadata !800) #10, !dbg !6021
  call void @llvm.dbg.value(metadata i8* %45, i64 0, metadata !6016, metadata !800) #10, !dbg !6021
  %108 = call i64 @llvm.objectsize.i64.p0i8(i8* nonnull %103, i1 false) #10, !dbg !6023
  %109 = call i8* @__strcpy_chk(i8* nonnull %103, i8* nonnull %45, i64 %108) #10, !dbg !6024
  br label %111, !dbg !6025

; <label>:110:                                    ; preds = %75
  br label %111, !dbg !5942

; <label>:111:                                    ; preds = %110, %100, %62, %62, %62
  %112 = phi i64 [ %96, %100 ], [ %51, %62 ], [ %51, %62 ], [ %51, %62 ], [ %51, %110 ]
  %113 = phi i8* [ %97, %100 ], [ %52, %62 ], [ %52, %62 ], [ %52, %62 ], [ %52, %110 ]
  call void @llvm.dbg.value(metadata i8* %113, i64 0, metadata !5878, metadata !800) #10, !dbg !5942
  call void @llvm.dbg.value(metadata i64 %112, i64 0, metadata !5879, metadata !800) #10, !dbg !5946
  call void @llvm.lifetime.end(i64 51, i8* nonnull %45) #10, !dbg !6025
  call void @llvm.lifetime.end(i64 51, i8* nonnull %44) #10, !dbg !6025
  br label %50

; <label>:114:                                    ; preds = %75
  br label %116, !dbg !5942

; <label>:115:                                    ; preds = %62, %77
  br label %116, !dbg !5942

; <label>:116:                                    ; preds = %115, %114, %99
  %117 = phi i64 [ 0, %99 ], [ %51, %114 ], [ %51, %115 ]
  %118 = phi i8* [ null, %99 ], [ %52, %114 ], [ %52, %115 ]
  call void @llvm.dbg.value(metadata i8* %113, i64 0, metadata !5878, metadata !800) #10, !dbg !5942
  call void @llvm.dbg.value(metadata i64 %112, i64 0, metadata !5879, metadata !800) #10, !dbg !5946
  call void @llvm.lifetime.end(i64 51, i8* nonnull %45) #10, !dbg !6025
  call void @llvm.lifetime.end(i64 51, i8* nonnull %44) #10, !dbg !6025
  %119 = call i32 @rpl_fclose(%struct._IO_FILE* nonnull %41) #10, !dbg !6026
  %120 = icmp eq i64 %117, 0, !dbg !6027
  br i1 %120, label %123, label %121, !dbg !6029

; <label>:121:                                    ; preds = %116
  %122 = getelementptr inbounds i8, i8* %118, i64 %117, !dbg !6030
  store i8 0, i8* %122, align 1, !dbg !6032, !tbaa !1055
  call void @llvm.dbg.value(metadata i8* %113, i64 0, metadata !5828, metadata !800) #10, !dbg !5897
  br label %123

; <label>:123:                                    ; preds = %121, %116, %48, %37
  %124 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.158, i64 0, i64 0), %37 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.158, i64 0, i64 0), %48 ], [ %118, %121 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.158, i64 0, i64 0), %116 ]
  call void @llvm.dbg.value(metadata i8* %124, i64 0, metadata !5828, metadata !800) #10, !dbg !5897
  call void @free(i8* %29) #10, !dbg !6033
  br label %125

; <label>:125:                                    ; preds = %123, %24
  %126 = phi i8* [ %124, %123 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.158, i64 0, i64 0), %24 ]
  call void @llvm.dbg.value(metadata i8* %126, i64 0, metadata !5828, metadata !800) #10, !dbg !5897
  store volatile i8* %126, i8** @charset_aliases, align 8, !dbg !6034, !tbaa !808
  br label %127, !dbg !6035

; <label>:127:                                    ; preds = %0, %125
  %128 = phi i8* [ %6, %0 ], [ %126, %125 ]
  call void @llvm.dbg.value(metadata i8* %128, i64 0, metadata !5807, metadata !800), !dbg !6036
  %129 = load i8, i8* %128, align 1, !dbg !6037, !tbaa !1055
  %130 = icmp eq i8 %129, 0, !dbg !6038
  br i1 %130, label %157, label %131, !dbg !6039

; <label>:131:                                    ; preds = %127
  br label %132, !dbg !6041

; <label>:132:                                    ; preds = %131, %147
  %133 = phi i8 [ %154, %147 ], [ %129, %131 ]
  %134 = phi i8* [ %153, %147 ], [ %128, %131 ]
  %135 = call i32 @strcmp(i8* %5, i8* %134) #10, !dbg !6041
  %136 = icmp eq i32 %135, 0, !dbg !6042
  br i1 %136, label %143, label %137, !dbg !6043

; <label>:137:                                    ; preds = %132
  %138 = icmp eq i8 %133, 42, !dbg !6044
  br i1 %138, label %139, label %147, !dbg !6046

; <label>:139:                                    ; preds = %137
  %140 = getelementptr inbounds i8, i8* %134, i64 1, !dbg !6047
  %141 = load i8, i8* %140, align 1, !dbg !6047, !tbaa !1055
  %142 = icmp eq i8 %141, 0, !dbg !6049
  br i1 %142, label %143, label %147, !dbg !6050

; <label>:143:                                    ; preds = %139, %132
  %144 = call i64 @strlen(i8* %134) #13, !dbg !6052
  %145 = getelementptr inbounds i8, i8* %134, i64 %144, !dbg !6054
  %146 = getelementptr inbounds i8, i8* %145, i64 1, !dbg !6055
  call void @llvm.dbg.value(metadata i8* %146, i64 0, metadata !5806, metadata !800), !dbg !5892
  br label %157, !dbg !6056

; <label>:147:                                    ; preds = %137, %139
  %148 = call i64 @strlen(i8* %134) #13, !dbg !6057
  %149 = add i64 %148, 1, !dbg !6058
  %150 = getelementptr inbounds i8, i8* %134, i64 %149, !dbg !6059
  call void @llvm.dbg.value(metadata i8* %150, i64 0, metadata !5807, metadata !800), !dbg !6036
  %151 = call i64 @strlen(i8* %150) #13, !dbg !6060
  %152 = add i64 %151, 1, !dbg !6061
  %153 = getelementptr inbounds i8, i8* %150, i64 %152, !dbg !6062
  call void @llvm.dbg.value(metadata i8* %153, i64 0, metadata !5807, metadata !800), !dbg !6036
  call void @llvm.dbg.value(metadata i8* %153, i64 0, metadata !5807, metadata !800), !dbg !6036
  %154 = load i8, i8* %153, align 1, !dbg !6037, !tbaa !1055
  %155 = icmp eq i8 %154, 0, !dbg !6038
  br i1 %155, label %156, label %132, !dbg !6039, !llvm.loop !6063

; <label>:156:                                    ; preds = %147
  br label %157, !dbg !5892

; <label>:157:                                    ; preds = %156, %127, %143
  %158 = phi i8* [ %146, %143 ], [ %5, %127 ], [ %5, %156 ]
  call void @llvm.dbg.value(metadata i8* %158, i64 0, metadata !5806, metadata !800), !dbg !5892
  %159 = load i8, i8* %158, align 1, !dbg !6066, !tbaa !1055
  %160 = icmp eq i8 %159, 0, !dbg !6068
  %161 = select i1 %160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.164, i64 0, i64 0), i8* %158, !dbg !6069
  call void @llvm.dbg.value(metadata i8* %161, i64 0, metadata !5806, metadata !800), !dbg !5892
  ret i8* %161, !dbg !6070
}

; Function Attrs: nounwind
declare i8* @nl_langinfo(i32) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #4

declare i32 @open(i8* nocapture readonly, i32, ...) local_unnamed_addr #3

declare i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @ungetc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @fscanf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1) #1

; Function Attrs: nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) local_unnamed_addr #2

attributes #0 = { noreturn nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn nounwind }
attributes #15 = { noreturn }
attributes #16 = { cold }

!llvm.dbg.cu = !{!2, !254, !260, !268, !284, !740, !743, !291, !298, !745, !747, !351, !755, !772, !774, !776, !364, !778, !780, !782, !785, !787, !395}
!llvm.ident = !{!790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790, !790}
!llvm.module.flags = !{!791, !792, !793, !794}

!0 = !DIGlobalVariableExpression(var: !1)
!1 = distinct !DIGlobalVariable(name: "long_options", scope: !2, file: !3, line: 203, type: !240, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !57, globals: !73)
!3 = !DIFile(filename: "src/md5sum.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!4 = !{!5, !19, !34, !48}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !6, line: 32, size: 32, elements: !7)
!6 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!7 = !{!8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18}
!8 = !DIEnumerator(name: "literal_quoting_style", value: 0)
!9 = !DIEnumerator(name: "shell_quoting_style", value: 1)
!10 = !DIEnumerator(name: "shell_always_quoting_style", value: 2)
!11 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3)
!12 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4)
!13 = !DIEnumerator(name: "c_quoting_style", value: 5)
!14 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6)
!15 = !DIEnumerator(name: "escape_quoting_style", value: 7)
!16 = !DIEnumerator(name: "locale_quoting_style", value: 8)
!17 = !DIEnumerator(name: "clocale_quoting_style", value: 9)
!18 = !DIEnumerator(name: "custom_quoting_style", value: 10)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 46, size: 32, elements: !21)
!20 = !DIFile(filename: "/usr/include/ctype.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!21 = !{!22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33}
!22 = !DIEnumerator(name: "_ISupper", value: 256)
!23 = !DIEnumerator(name: "_ISlower", value: 512)
!24 = !DIEnumerator(name: "_ISalpha", value: 1024)
!25 = !DIEnumerator(name: "_ISdigit", value: 2048)
!26 = !DIEnumerator(name: "_ISxdigit", value: 4096)
!27 = !DIEnumerator(name: "_ISspace", value: 8192)
!28 = !DIEnumerator(name: "_ISprint", value: 16384)
!29 = !DIEnumerator(name: "_ISgraph", value: 32768)
!30 = !DIEnumerator(name: "_ISblank", value: 1)
!31 = !DIEnumerator(name: "_IScntrl", value: 2)
!32 = !DIEnumerator(name: "_ISpunct", value: 4)
!33 = !DIEnumerator(name: "_ISalnum", value: 8)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !36, file: !35, line: 187, size: 32, elements: !46)
!35 = !DIFile(filename: "src/system.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!36 = distinct !DISubprogram(name: "select_plural", scope: !35, file: !35, line: 183, type: !37, isLocal: true, isDefinition: true, scopeLine: 184, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !44)
!37 = !DISubroutineType(types: !38)
!38 = !{!39, !40}
!39 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !41, line: 136, baseType: !42)
!41 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !43, line: 62, baseType: !39)
!43 = !DIFile(filename: "/usr/include/bits/types.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!44 = !{!45}
!45 = !DILocalVariable(name: "n", arg: 1, scope: !36, file: !35, line: 183, type: !40)
!46 = !{!47}
!47 = !DIEnumerator(name: "PLURAL_REDUCER", value: 1000000)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !49, line: 45, size: 32, elements: !50)
!49 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!50 = !{!51, !52, !53, !54, !55, !56}
!51 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0)
!52 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2)
!53 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5)
!54 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4)
!55 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3)
!56 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1)
!57 = !{!58, !60, !61, !63, !65, !68, !70, !71, !72, !67}
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !62, line: 62, baseType: !39)
!62 = !DIFile(filename: "/usr/bin/../lib/clang/4.0.1/include/stddef.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!63 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !64, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!67 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64)
!69 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !59)
!70 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!72 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!73 = !{!74, !77, !79, !81, !0, !110, !112, !114, !116, !118, !120, !238}
!74 = !DIGlobalVariableExpression(var: !75)
!75 = distinct !DIGlobalVariable(name: "have_read_stdin", scope: !2, file: !3, line: 131, type: !76, isLocal: true, isDefinition: true)
!76 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!77 = !DIGlobalVariableExpression(var: !78)
!78 = distinct !DIGlobalVariable(name: "min_digest_line_length", scope: !2, file: !3, line: 134, type: !61, isLocal: true, isDefinition: true)
!79 = !DIGlobalVariableExpression(var: !80)
!80 = distinct !DIGlobalVariable(name: "digest_hex_bytes", scope: !2, file: !3, line: 137, type: !61, isLocal: true, isDefinition: true)
!81 = !DIGlobalVariableExpression(var: !82)
!82 = distinct !DIGlobalVariable(name: "infomap", scope: !83, file: !35, line: 632, type: !107, isLocal: true, isDefinition: true)
!83 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !35, file: !35, line: 630, type: !84, isLocal: true, isDefinition: true, scopeLine: 631, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !86)
!84 = !DISubroutineType(types: !85)
!85 = !{null, !68}
!86 = !{!87, !88, !89, !96, !98, !99, !100, !103, !104, !106}
!87 = !DILocalVariable(name: "program", arg: 1, scope: !83, file: !35, line: 630, type: !68)
!88 = !DILocalVariable(name: "node", scope: !83, file: !35, line: 642, type: !68)
!89 = !DILocalVariable(name: "map_prog", scope: !83, file: !35, line: 643, type: !90)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !92)
!92 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !83, file: !35, line: 632, size: 128, elements: !93)
!93 = !{!94, !95}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !92, file: !35, line: 632, baseType: !68, size: 64)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !92, file: !35, line: 632, baseType: !68, size: 64, offset: 64)
!96 = !DILocalVariable(name: "__s1_len", scope: !97, file: !35, line: 645, type: !61)
!97 = distinct !DILexicalBlock(scope: !83, file: !35, line: 645, column: 33)
!98 = !DILocalVariable(name: "__s2_len", scope: !97, file: !35, line: 645, type: !61)
!99 = !DILocalVariable(name: "lc_messages", scope: !83, file: !35, line: 655, type: !68)
!100 = !DILocalVariable(name: "__s1_len", scope: !101, file: !35, line: 656, type: !61)
!101 = distinct !DILexicalBlock(scope: !102, file: !35, line: 656, column: 22)
!102 = distinct !DILexicalBlock(scope: !83, file: !35, line: 656, column: 7)
!103 = !DILocalVariable(name: "__s2_len", scope: !101, file: !35, line: 656, type: !61)
!104 = !DILocalVariable(name: "__s2", scope: !105, file: !35, line: 656, type: !65)
!105 = distinct !DILexicalBlock(scope: !101, file: !35, line: 656, column: 22)
!106 = !DILocalVariable(name: "__result", scope: !105, file: !35, line: 656, type: !70)
!107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 896, elements: !108)
!108 = !{!109}
!109 = !DISubrange(count: 7)
!110 = !DIGlobalVariableExpression(var: !111)
!111 = distinct !DIGlobalVariable(name: "status_only", scope: !2, file: !3, line: 141, type: !76, isLocal: true, isDefinition: true)
!112 = !DIGlobalVariableExpression(var: !113)
!113 = distinct !DIGlobalVariable(name: "warn", scope: !2, file: !3, line: 145, type: !76, isLocal: true, isDefinition: true)
!114 = !DIGlobalVariableExpression(var: !115)
!115 = distinct !DIGlobalVariable(name: "quiet", scope: !2, file: !3, line: 151, type: !76, isLocal: true, isDefinition: true)
!116 = !DIGlobalVariableExpression(var: !117)
!117 = distinct !DIGlobalVariable(name: "ignore_missing", scope: !2, file: !3, line: 148, type: !76, isLocal: true, isDefinition: true)
!118 = !DIGlobalVariableExpression(var: !119)
!119 = distinct !DIGlobalVariable(name: "strict", scope: !2, file: !3, line: 155, type: !76, isLocal: true, isDefinition: true)
!120 = !DIGlobalVariableExpression(var: !121)
!121 = distinct !DIGlobalVariable(name: "bin2hex", scope: !122, file: !3, line: 723, type: !235, isLocal: true, isDefinition: true)
!122 = distinct !DISubprogram(name: "digest_check", scope: !3, file: !3, line: 644, type: !123, isLocal: true, isDefinition: true, scopeLine: 645, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !125)
!123 = !DISubroutineType(types: !124)
!124 = !{!76, !68}
!125 = !{!126, !127, !182, !183, !184, !185, !186, !187, !188, !192, !193, !194, !195, !196, !197, !199, !200, !202, !203, !205, !206, !207, !211, !214, !215, !217, !218, !220, !221, !222, !226, !227, !233}
!126 = !DILocalVariable(name: "checkfile_name", arg: 1, scope: !122, file: !3, line: 644, type: !68)
!127 = !DILocalVariable(name: "checkfile_stream", scope: !122, file: !3, line: 646, type: !128)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !131)
!130 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !133)
!132 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!133 = !{!134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !154, !155, !156, !157, !160, !161, !163, !167, !170, !172, !173, !174, !175, !176, !177, !178}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !131, file: !132, line: 242, baseType: !70, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !131, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !131, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !131, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !131, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !131, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !131, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !131, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !131, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !131, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !131, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !131, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !131, file: !132, line: 260, baseType: !147, size: 64, offset: 768)
!147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !149)
!149 = !{!150, !151, !153}
!150 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !148, file: !132, line: 157, baseType: !147, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !148, file: !132, line: 158, baseType: !152, size: 64, offset: 64)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !148, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !131, file: !132, line: 262, baseType: !152, size: 64, offset: 832)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !131, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !131, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !131, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !43, line: 140, baseType: !159)
!159 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !131, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !131, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!162 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !131, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 8, elements: !165)
!165 = !{!166}
!166 = !DISubrange(count: 1)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !131, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !132, line: 150, baseType: null)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !131, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !43, line: 141, baseType: !159)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !131, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !131, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !131, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !131, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !131, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !131, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !131, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 160, elements: !180)
!180 = !{!181}
!181 = !DISubrange(count: 20)
!182 = !DILocalVariable(name: "n_misformatted_lines", scope: !122, file: !3, line: 647, type: !40)
!183 = !DILocalVariable(name: "n_improperly_formatted_lines", scope: !122, file: !3, line: 648, type: !40)
!184 = !DILocalVariable(name: "n_mismatched_checksums", scope: !122, file: !3, line: 649, type: !40)
!185 = !DILocalVariable(name: "n_open_or_read_failures", scope: !122, file: !3, line: 650, type: !40)
!186 = !DILocalVariable(name: "properly_formatted_lines", scope: !122, file: !3, line: 651, type: !76)
!187 = !DILocalVariable(name: "matched_checksums", scope: !122, file: !3, line: 652, type: !76)
!188 = !DILocalVariable(name: "bin_buffer_unaligned", scope: !122, file: !3, line: 653, type: !189)
!189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 256, elements: !190)
!190 = !{!191}
!191 = !DISubrange(count: 32)
!192 = !DILocalVariable(name: "bin_buffer", scope: !122, file: !3, line: 655, type: !71)
!193 = !DILocalVariable(name: "line_number", scope: !122, file: !3, line: 656, type: !40)
!194 = !DILocalVariable(name: "line", scope: !122, file: !3, line: 657, type: !58)
!195 = !DILocalVariable(name: "line_chars_allocated", scope: !122, file: !3, line: 658, type: !61)
!196 = !DILocalVariable(name: "is_stdin", scope: !122, file: !3, line: 659, type: !76)
!197 = !DILocalVariable(name: "__s1_len", scope: !198, file: !3, line: 659, type: !61)
!198 = distinct !DILexicalBlock(scope: !122, file: !3, line: 659, column: 19)
!199 = !DILocalVariable(name: "__s2_len", scope: !198, file: !3, line: 659, type: !61)
!200 = !DILocalVariable(name: "__s2", scope: !201, file: !3, line: 659, type: !65)
!201 = distinct !DILexicalBlock(scope: !198, file: !3, line: 659, column: 19)
!202 = !DILocalVariable(name: "__result", scope: !201, file: !3, line: 659, type: !70)
!203 = !DILocalVariable(name: "filename", scope: !204, file: !3, line: 682, type: !58)
!204 = distinct !DILexicalBlock(scope: !122, file: !3, line: 681, column: 5)
!205 = !DILocalVariable(name: "binary", scope: !204, file: !3, line: 683, type: !70)
!206 = !DILocalVariable(name: "hex_digest", scope: !204, file: !3, line: 684, type: !71)
!207 = !DILocalVariable(name: "line_length", scope: !204, file: !3, line: 685, type: !208)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !209, line: 109, baseType: !210)
!209 = !DIFile(filename: "/usr/include/sys/types.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !43, line: 181, baseType: !159)
!211 = !DILocalVariable(name: "__s1_len", scope: !212, file: !3, line: 705, type: !61)
!212 = distinct !DILexicalBlock(scope: !213, file: !3, line: 705, column: 32)
!213 = distinct !DILexicalBlock(scope: !204, file: !3, line: 704, column: 11)
!214 = !DILocalVariable(name: "__s2_len", scope: !212, file: !3, line: 705, type: !61)
!215 = !DILocalVariable(name: "__s2", scope: !216, file: !3, line: 705, type: !65)
!216 = distinct !DILexicalBlock(scope: !212, file: !3, line: 705, column: 32)
!217 = !DILocalVariable(name: "__result", scope: !216, file: !3, line: 705, type: !70)
!218 = !DILocalVariable(name: "ok", scope: !219, file: !3, line: 727, type: !76)
!219 = distinct !DILexicalBlock(scope: !213, file: !3, line: 722, column: 9)
!220 = !DILocalVariable(name: "missing", scope: !219, file: !3, line: 728, type: !76)
!221 = !DILocalVariable(name: "needs_escape", scope: !219, file: !3, line: 731, type: !76)
!222 = !DILocalVariable(name: "digest_bin_bytes", scope: !223, file: !3, line: 755, type: !61)
!223 = distinct !DILexicalBlock(scope: !224, file: !3, line: 754, column: 13)
!224 = distinct !DILexicalBlock(scope: !225, file: !3, line: 748, column: 20)
!225 = distinct !DILexicalBlock(scope: !219, file: !3, line: 737, column: 15)
!226 = !DILocalVariable(name: "cnt", scope: !223, file: !3, line: 756, type: !61)
!227 = !DILocalVariable(name: "__res", scope: !228, file: !3, line: 762, type: !70)
!228 = distinct !DILexicalBlock(scope: !229, file: !3, line: 762, column: 23)
!229 = distinct !DILexicalBlock(scope: !230, file: !3, line: 762, column: 23)
!230 = distinct !DILexicalBlock(scope: !231, file: !3, line: 761, column: 17)
!231 = distinct !DILexicalBlock(scope: !232, file: !3, line: 760, column: 15)
!232 = distinct !DILexicalBlock(scope: !223, file: !3, line: 760, column: 15)
!233 = !DILocalVariable(name: "__res", scope: !234, file: !3, line: 764, type: !70)
!234 = distinct !DILexicalBlock(scope: !229, file: !3, line: 764, column: 27)
!235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 128, elements: !236)
!236 = !{!237}
!237 = !DISubrange(count: 16)
!238 = !DIGlobalVariableExpression(var: !239)
!239 = distinct !DIGlobalVariable(name: "bsd_reversed", scope: !2, file: !3, line: 158, type: !70, isLocal: true, isDefinition: true)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 3072, elements: !250)
!241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !242)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !243, line: 104, size: 256, elements: !244)
!243 = !DIFile(filename: "/usr/include/getopt.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!244 = !{!245, !246, !247, !249}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !242, file: !243, line: 106, baseType: !68, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !242, file: !243, line: 109, baseType: !70, size: 32, offset: 64)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !242, file: !243, line: 110, baseType: !248, size: 64, offset: 128)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !242, file: !243, line: 111, baseType: !70, size: 32, offset: 192)
!250 = !{!251}
!251 = !DISubrange(count: 12)
!252 = !DIGlobalVariableExpression(var: !253)
!253 = distinct !DIGlobalVariable(name: "Version", scope: !254, file: !255, line: 2, type: !68, isLocal: false, isDefinition: true)
!254 = distinct !DICompileUnit(language: DW_LANG_C99, file: !255, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, globals: !257)
!255 = !DIFile(filename: "src/version.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!256 = !{}
!257 = !{!252}
!258 = !DIGlobalVariableExpression(var: !259)
!259 = distinct !DIGlobalVariable(name: "file_name", scope: !260, file: !265, line: 36, type: !68, isLocal: true, isDefinition: true)
!260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !261, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, globals: !262)
!261 = !DIFile(filename: "./lib/closeout.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!262 = !{!258, !263}
!263 = !DIGlobalVariableExpression(var: !264)
!264 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !260, file: !265, line: 46, type: !76, isLocal: true, isDefinition: true)
!265 = !DIFile(filename: "lib/closeout.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!266 = !DIGlobalVariableExpression(var: !267)
!267 = distinct !DIGlobalVariable(name: "fillbuf", scope: !268, file: !274, line: 54, type: !281, isLocal: true, isDefinition: true)
!268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !269, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, retainedTypes: !270, globals: !271)
!269 = !DIFile(filename: "./lib/sha256.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!270 = !{!58, !68}
!271 = !{!266, !272}
!272 = !DIGlobalVariableExpression(var: !273)
!273 = distinct !DIGlobalVariable(name: "sha256_round_constants", scope: !268, file: !274, line: 421, type: !275, isLocal: true, isDefinition: true)
!274 = !DIFile(filename: "lib/sha256.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 2048, elements: !279)
!276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !277)
!277 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !41, line: 53, baseType: !278)
!278 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!279 = !{!280}
!280 = !DISubrange(count: 64)
!281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !66, size: 512, elements: !279)
!282 = !DIGlobalVariableExpression(var: !283)
!283 = distinct !DIGlobalVariable(name: "exit_failure", scope: !284, file: !287, line: 24, type: !288, isLocal: false, isDefinition: true)
!284 = distinct !DICompileUnit(language: DW_LANG_C99, file: !285, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, globals: !286)
!285 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!286 = !{!282}
!287 = !DIFile(filename: "lib/exitfail.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!288 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !70)
!289 = !DIGlobalVariableExpression(var: !290)
!290 = distinct !DIGlobalVariable(name: "program_name", scope: !291, file: !295, line: 33, type: !68, isLocal: false, isDefinition: true)
!291 = distinct !DICompileUnit(language: DW_LANG_C99, file: !292, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, retainedTypes: !293, globals: !294)
!292 = !DIFile(filename: "./lib/progname.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!293 = !{!60, !58}
!294 = !{!289}
!295 = !DIFile(filename: "lib/progname.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!296 = !DIGlobalVariableExpression(var: !297)
!297 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !298, file: !310, line: 77, type: !345, isLocal: false, isDefinition: true)
!298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !299, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !300, retainedTypes: !306, globals: !307)
!299 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!300 = !{!5, !301, !19}
!301 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_flags", file: !6, line: 242, size: 32, elements: !302)
!302 = !{!303, !304, !305}
!303 = !DIEnumerator(name: "QA_ELIDE_NULL_BYTES", value: 1)
!304 = !DIEnumerator(name: "QA_ELIDE_OUTER_QUOTES", value: 2)
!305 = !DIEnumerator(name: "QA_SPLIT_TRIGRAPHS", value: 4)
!306 = !{!70, !72, !61, !58}
!307 = !{!296, !308, !315, !327, !329, !334, !341, !343}
!308 = !DIGlobalVariableExpression(var: !309)
!309 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !298, file: !310, line: 93, type: !311, isLocal: false, isDefinition: true)
!310 = !DIFile(filename: "lib/quotearg.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 320, elements: !313)
!312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!313 = !{!314}
!314 = !DISubrange(count: 10)
!315 = !DIGlobalVariableExpression(var: !316)
!316 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !298, file: !310, line: 1043, type: !317, isLocal: false, isDefinition: true)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !310, line: 57, size: 448, elements: !318)
!318 = !{!319, !320, !321, !325, !326}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !317, file: !310, line: 60, baseType: !5, size: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !317, file: !310, line: 63, baseType: !70, size: 32, offset: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !317, file: !310, line: 67, baseType: !322, size: 256, offset: 64)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !278, size: 256, elements: !323)
!323 = !{!324}
!324 = !DISubrange(count: 8)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !317, file: !310, line: 70, baseType: !68, size: 64, offset: 320)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !317, file: !310, line: 73, baseType: !68, size: 64, offset: 384)
!327 = !DIGlobalVariableExpression(var: !328)
!328 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !298, file: !310, line: 108, type: !317, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330)
!330 = distinct !DIGlobalVariable(name: "slot0", scope: !298, file: !310, line: 834, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 2048, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 256)
!334 = !DIGlobalVariableExpression(var: !335)
!335 = distinct !DIGlobalVariable(name: "slotvec", scope: !298, file: !310, line: 837, type: !336, isLocal: true, isDefinition: true)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !310, line: 826, size: 128, elements: !338)
!338 = !{!339, !340}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !337, file: !310, line: 828, baseType: !61, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !337, file: !310, line: 829, baseType: !58, size: 64, offset: 64)
!341 = !DIGlobalVariableExpression(var: !342)
!342 = distinct !DIGlobalVariable(name: "nslots", scope: !298, file: !310, line: 835, type: !70, isLocal: true, isDefinition: true)
!343 = !DIGlobalVariableExpression(var: !344)
!344 = distinct !DIGlobalVariable(name: "slotvec0", scope: !298, file: !310, line: 836, type: !337, isLocal: true, isDefinition: true)
!345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !346, size: 704, elements: !347)
!346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!347 = !{!348}
!348 = !DISubrange(count: 11)
!349 = !DIGlobalVariableExpression(var: !350)
!350 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !351, file: !354, line: 26, type: !355, isLocal: false, isDefinition: true)
!351 = distinct !DICompileUnit(language: DW_LANG_C99, file: !352, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, globals: !353)
!352 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!353 = !{!349}
!354 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !69, size: 376, elements: !356)
!356 = !{!357}
!357 = !DISubrange(count: 47)
!358 = !DIGlobalVariableExpression(var: !359)
!359 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !360, file: !361, line: 335, type: !70, isLocal: true, isDefinition: true)
!360 = distinct !DISubprogram(name: "rpl_fcntl", scope: !361, file: !361, line: 272, type: !362, isLocal: false, isDefinition: true, scopeLine: 273, flags: DIFlagPrototyped, isOptimized: true, unit: !364, variables: !367)
!361 = !DIFile(filename: "lib/fcntl.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!362 = !DISubroutineType(types: !363)
!363 = !{!70, !70, !70, null}
!364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !365, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, globals: !366)
!365 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!366 = !{!358}
!367 = !{!368, !369, !370, !381, !382, !385, !388, !391}
!368 = !DILocalVariable(name: "fd", arg: 1, scope: !360, file: !361, line: 272, type: !70)
!369 = !DILocalVariable(name: "action", arg: 2, scope: !360, file: !361, line: 272, type: !70)
!370 = !DILocalVariable(name: "arg", scope: !360, file: !361, line: 274, type: !371)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !372, line: 30, baseType: !373)
!372 = !DIFile(filename: "/usr/bin/../lib/clang/4.0.1/include/stdarg.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !365, line: 274, baseType: !374)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 192, elements: !165)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !365, line: 274, size: 192, elements: !376)
!376 = !{!377, !378, !379, !380}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !375, file: !365, line: 274, baseType: !278, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !375, file: !365, line: 274, baseType: !278, size: 32, offset: 32)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !375, file: !365, line: 274, baseType: !60, size: 64, offset: 64)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !375, file: !365, line: 274, baseType: !60, size: 64, offset: 128)
!381 = !DILocalVariable(name: "result", scope: !360, file: !361, line: 275, type: !70)
!382 = !DILocalVariable(name: "target", scope: !383, file: !361, line: 322, type: !70)
!383 = distinct !DILexicalBlock(scope: !384, file: !361, line: 321, column: 7)
!384 = distinct !DILexicalBlock(scope: !360, file: !361, line: 278, column: 5)
!385 = !DILocalVariable(name: "flags", scope: !386, file: !361, line: 359, type: !70)
!386 = distinct !DILexicalBlock(scope: !387, file: !361, line: 358, column: 11)
!387 = distinct !DILexicalBlock(scope: !383, file: !361, line: 357, column: 13)
!388 = !DILocalVariable(name: "saved_errno", scope: !389, file: !361, line: 362, type: !70)
!389 = distinct !DILexicalBlock(scope: !390, file: !361, line: 361, column: 15)
!390 = distinct !DILexicalBlock(scope: !386, file: !361, line: 360, column: 17)
!391 = !DILocalVariable(name: "p", scope: !392, file: !361, line: 404, type: !60)
!392 = distinct !DILexicalBlock(scope: !384, file: !361, line: 402, column: 7)
!393 = !DIGlobalVariableExpression(var: !394)
!394 = distinct !DIGlobalVariable(name: "charset_aliases", scope: !395, file: !738, line: 120, type: !739, isLocal: true, isDefinition: true)
!395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !396, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !397, retainedTypes: !736, globals: !737)
!396 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!397 = !{!398}
!398 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !399, line: 41, size: 32, elements: !400)
!399 = !DIFile(filename: "/usr/include/langinfo.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!400 = !{!401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735}
!401 = !DIEnumerator(name: "ABDAY_1", value: 131072)
!402 = !DIEnumerator(name: "ABDAY_2", value: 131073)
!403 = !DIEnumerator(name: "ABDAY_3", value: 131074)
!404 = !DIEnumerator(name: "ABDAY_4", value: 131075)
!405 = !DIEnumerator(name: "ABDAY_5", value: 131076)
!406 = !DIEnumerator(name: "ABDAY_6", value: 131077)
!407 = !DIEnumerator(name: "ABDAY_7", value: 131078)
!408 = !DIEnumerator(name: "DAY_1", value: 131079)
!409 = !DIEnumerator(name: "DAY_2", value: 131080)
!410 = !DIEnumerator(name: "DAY_3", value: 131081)
!411 = !DIEnumerator(name: "DAY_4", value: 131082)
!412 = !DIEnumerator(name: "DAY_5", value: 131083)
!413 = !DIEnumerator(name: "DAY_6", value: 131084)
!414 = !DIEnumerator(name: "DAY_7", value: 131085)
!415 = !DIEnumerator(name: "ABMON_1", value: 131086)
!416 = !DIEnumerator(name: "ABMON_2", value: 131087)
!417 = !DIEnumerator(name: "ABMON_3", value: 131088)
!418 = !DIEnumerator(name: "ABMON_4", value: 131089)
!419 = !DIEnumerator(name: "ABMON_5", value: 131090)
!420 = !DIEnumerator(name: "ABMON_6", value: 131091)
!421 = !DIEnumerator(name: "ABMON_7", value: 131092)
!422 = !DIEnumerator(name: "ABMON_8", value: 131093)
!423 = !DIEnumerator(name: "ABMON_9", value: 131094)
!424 = !DIEnumerator(name: "ABMON_10", value: 131095)
!425 = !DIEnumerator(name: "ABMON_11", value: 131096)
!426 = !DIEnumerator(name: "ABMON_12", value: 131097)
!427 = !DIEnumerator(name: "MON_1", value: 131098)
!428 = !DIEnumerator(name: "MON_2", value: 131099)
!429 = !DIEnumerator(name: "MON_3", value: 131100)
!430 = !DIEnumerator(name: "MON_4", value: 131101)
!431 = !DIEnumerator(name: "MON_5", value: 131102)
!432 = !DIEnumerator(name: "MON_6", value: 131103)
!433 = !DIEnumerator(name: "MON_7", value: 131104)
!434 = !DIEnumerator(name: "MON_8", value: 131105)
!435 = !DIEnumerator(name: "MON_9", value: 131106)
!436 = !DIEnumerator(name: "MON_10", value: 131107)
!437 = !DIEnumerator(name: "MON_11", value: 131108)
!438 = !DIEnumerator(name: "MON_12", value: 131109)
!439 = !DIEnumerator(name: "AM_STR", value: 131110)
!440 = !DIEnumerator(name: "PM_STR", value: 131111)
!441 = !DIEnumerator(name: "D_T_FMT", value: 131112)
!442 = !DIEnumerator(name: "D_FMT", value: 131113)
!443 = !DIEnumerator(name: "T_FMT", value: 131114)
!444 = !DIEnumerator(name: "T_FMT_AMPM", value: 131115)
!445 = !DIEnumerator(name: "ERA", value: 131116)
!446 = !DIEnumerator(name: "__ERA_YEAR", value: 131117)
!447 = !DIEnumerator(name: "ERA_D_FMT", value: 131118)
!448 = !DIEnumerator(name: "ALT_DIGITS", value: 131119)
!449 = !DIEnumerator(name: "ERA_D_T_FMT", value: 131120)
!450 = !DIEnumerator(name: "ERA_T_FMT", value: 131121)
!451 = !DIEnumerator(name: "_NL_TIME_ERA_NUM_ENTRIES", value: 131122)
!452 = !DIEnumerator(name: "_NL_TIME_ERA_ENTRIES", value: 131123)
!453 = !DIEnumerator(name: "_NL_WABDAY_1", value: 131124)
!454 = !DIEnumerator(name: "_NL_WABDAY_2", value: 131125)
!455 = !DIEnumerator(name: "_NL_WABDAY_3", value: 131126)
!456 = !DIEnumerator(name: "_NL_WABDAY_4", value: 131127)
!457 = !DIEnumerator(name: "_NL_WABDAY_5", value: 131128)
!458 = !DIEnumerator(name: "_NL_WABDAY_6", value: 131129)
!459 = !DIEnumerator(name: "_NL_WABDAY_7", value: 131130)
!460 = !DIEnumerator(name: "_NL_WDAY_1", value: 131131)
!461 = !DIEnumerator(name: "_NL_WDAY_2", value: 131132)
!462 = !DIEnumerator(name: "_NL_WDAY_3", value: 131133)
!463 = !DIEnumerator(name: "_NL_WDAY_4", value: 131134)
!464 = !DIEnumerator(name: "_NL_WDAY_5", value: 131135)
!465 = !DIEnumerator(name: "_NL_WDAY_6", value: 131136)
!466 = !DIEnumerator(name: "_NL_WDAY_7", value: 131137)
!467 = !DIEnumerator(name: "_NL_WABMON_1", value: 131138)
!468 = !DIEnumerator(name: "_NL_WABMON_2", value: 131139)
!469 = !DIEnumerator(name: "_NL_WABMON_3", value: 131140)
!470 = !DIEnumerator(name: "_NL_WABMON_4", value: 131141)
!471 = !DIEnumerator(name: "_NL_WABMON_5", value: 131142)
!472 = !DIEnumerator(name: "_NL_WABMON_6", value: 131143)
!473 = !DIEnumerator(name: "_NL_WABMON_7", value: 131144)
!474 = !DIEnumerator(name: "_NL_WABMON_8", value: 131145)
!475 = !DIEnumerator(name: "_NL_WABMON_9", value: 131146)
!476 = !DIEnumerator(name: "_NL_WABMON_10", value: 131147)
!477 = !DIEnumerator(name: "_NL_WABMON_11", value: 131148)
!478 = !DIEnumerator(name: "_NL_WABMON_12", value: 131149)
!479 = !DIEnumerator(name: "_NL_WMON_1", value: 131150)
!480 = !DIEnumerator(name: "_NL_WMON_2", value: 131151)
!481 = !DIEnumerator(name: "_NL_WMON_3", value: 131152)
!482 = !DIEnumerator(name: "_NL_WMON_4", value: 131153)
!483 = !DIEnumerator(name: "_NL_WMON_5", value: 131154)
!484 = !DIEnumerator(name: "_NL_WMON_6", value: 131155)
!485 = !DIEnumerator(name: "_NL_WMON_7", value: 131156)
!486 = !DIEnumerator(name: "_NL_WMON_8", value: 131157)
!487 = !DIEnumerator(name: "_NL_WMON_9", value: 131158)
!488 = !DIEnumerator(name: "_NL_WMON_10", value: 131159)
!489 = !DIEnumerator(name: "_NL_WMON_11", value: 131160)
!490 = !DIEnumerator(name: "_NL_WMON_12", value: 131161)
!491 = !DIEnumerator(name: "_NL_WAM_STR", value: 131162)
!492 = !DIEnumerator(name: "_NL_WPM_STR", value: 131163)
!493 = !DIEnumerator(name: "_NL_WD_T_FMT", value: 131164)
!494 = !DIEnumerator(name: "_NL_WD_FMT", value: 131165)
!495 = !DIEnumerator(name: "_NL_WT_FMT", value: 131166)
!496 = !DIEnumerator(name: "_NL_WT_FMT_AMPM", value: 131167)
!497 = !DIEnumerator(name: "_NL_WERA_YEAR", value: 131168)
!498 = !DIEnumerator(name: "_NL_WERA_D_FMT", value: 131169)
!499 = !DIEnumerator(name: "_NL_WALT_DIGITS", value: 131170)
!500 = !DIEnumerator(name: "_NL_WERA_D_T_FMT", value: 131171)
!501 = !DIEnumerator(name: "_NL_WERA_T_FMT", value: 131172)
!502 = !DIEnumerator(name: "_NL_TIME_WEEK_NDAYS", value: 131173)
!503 = !DIEnumerator(name: "_NL_TIME_WEEK_1STDAY", value: 131174)
!504 = !DIEnumerator(name: "_NL_TIME_WEEK_1STWEEK", value: 131175)
!505 = !DIEnumerator(name: "_NL_TIME_FIRST_WEEKDAY", value: 131176)
!506 = !DIEnumerator(name: "_NL_TIME_FIRST_WORKDAY", value: 131177)
!507 = !DIEnumerator(name: "_NL_TIME_CAL_DIRECTION", value: 131178)
!508 = !DIEnumerator(name: "_NL_TIME_TIMEZONE", value: 131179)
!509 = !DIEnumerator(name: "_DATE_FMT", value: 131180)
!510 = !DIEnumerator(name: "_NL_W_DATE_FMT", value: 131181)
!511 = !DIEnumerator(name: "_NL_TIME_CODESET", value: 131182)
!512 = !DIEnumerator(name: "_NL_NUM_LC_TIME", value: 131183)
!513 = !DIEnumerator(name: "_NL_COLLATE_NRULES", value: 196608)
!514 = !DIEnumerator(name: "_NL_COLLATE_RULESETS", value: 196609)
!515 = !DIEnumerator(name: "_NL_COLLATE_TABLEMB", value: 196610)
!516 = !DIEnumerator(name: "_NL_COLLATE_WEIGHTMB", value: 196611)
!517 = !DIEnumerator(name: "_NL_COLLATE_EXTRAMB", value: 196612)
!518 = !DIEnumerator(name: "_NL_COLLATE_INDIRECTMB", value: 196613)
!519 = !DIEnumerator(name: "_NL_COLLATE_GAP1", value: 196614)
!520 = !DIEnumerator(name: "_NL_COLLATE_GAP2", value: 196615)
!521 = !DIEnumerator(name: "_NL_COLLATE_GAP3", value: 196616)
!522 = !DIEnumerator(name: "_NL_COLLATE_TABLEWC", value: 196617)
!523 = !DIEnumerator(name: "_NL_COLLATE_WEIGHTWC", value: 196618)
!524 = !DIEnumerator(name: "_NL_COLLATE_EXTRAWC", value: 196619)
!525 = !DIEnumerator(name: "_NL_COLLATE_INDIRECTWC", value: 196620)
!526 = !DIEnumerator(name: "_NL_COLLATE_SYMB_HASH_SIZEMB", value: 196621)
!527 = !DIEnumerator(name: "_NL_COLLATE_SYMB_TABLEMB", value: 196622)
!528 = !DIEnumerator(name: "_NL_COLLATE_SYMB_EXTRAMB", value: 196623)
!529 = !DIEnumerator(name: "_NL_COLLATE_COLLSEQMB", value: 196624)
!530 = !DIEnumerator(name: "_NL_COLLATE_COLLSEQWC", value: 196625)
!531 = !DIEnumerator(name: "_NL_COLLATE_CODESET", value: 196626)
!532 = !DIEnumerator(name: "_NL_NUM_LC_COLLATE", value: 196627)
!533 = !DIEnumerator(name: "_NL_CTYPE_CLASS", value: 0)
!534 = !DIEnumerator(name: "_NL_CTYPE_TOUPPER", value: 1)
!535 = !DIEnumerator(name: "_NL_CTYPE_GAP1", value: 2)
!536 = !DIEnumerator(name: "_NL_CTYPE_TOLOWER", value: 3)
!537 = !DIEnumerator(name: "_NL_CTYPE_GAP2", value: 4)
!538 = !DIEnumerator(name: "_NL_CTYPE_CLASS32", value: 5)
!539 = !DIEnumerator(name: "_NL_CTYPE_GAP3", value: 6)
!540 = !DIEnumerator(name: "_NL_CTYPE_GAP4", value: 7)
!541 = !DIEnumerator(name: "_NL_CTYPE_GAP5", value: 8)
!542 = !DIEnumerator(name: "_NL_CTYPE_GAP6", value: 9)
!543 = !DIEnumerator(name: "_NL_CTYPE_CLASS_NAMES", value: 10)
!544 = !DIEnumerator(name: "_NL_CTYPE_MAP_NAMES", value: 11)
!545 = !DIEnumerator(name: "_NL_CTYPE_WIDTH", value: 12)
!546 = !DIEnumerator(name: "_NL_CTYPE_MB_CUR_MAX", value: 13)
!547 = !DIEnumerator(name: "_NL_CTYPE_CODESET_NAME", value: 14)
!548 = !DIEnumerator(name: "CODESET", value: 14)
!549 = !DIEnumerator(name: "_NL_CTYPE_TOUPPER32", value: 15)
!550 = !DIEnumerator(name: "_NL_CTYPE_TOLOWER32", value: 16)
!551 = !DIEnumerator(name: "_NL_CTYPE_CLASS_OFFSET", value: 17)
!552 = !DIEnumerator(name: "_NL_CTYPE_MAP_OFFSET", value: 18)
!553 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS_MB_LEN", value: 19)
!554 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS0_MB", value: 20)
!555 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS1_MB", value: 21)
!556 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS2_MB", value: 22)
!557 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS3_MB", value: 23)
!558 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS4_MB", value: 24)
!559 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS5_MB", value: 25)
!560 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS6_MB", value: 26)
!561 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS7_MB", value: 27)
!562 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS8_MB", value: 28)
!563 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS9_MB", value: 29)
!564 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS_WC_LEN", value: 30)
!565 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS0_WC", value: 31)
!566 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS1_WC", value: 32)
!567 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS2_WC", value: 33)
!568 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS3_WC", value: 34)
!569 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS4_WC", value: 35)
!570 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS5_WC", value: 36)
!571 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS6_WC", value: 37)
!572 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS7_WC", value: 38)
!573 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS8_WC", value: 39)
!574 = !DIEnumerator(name: "_NL_CTYPE_INDIGITS9_WC", value: 40)
!575 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT0_MB", value: 41)
!576 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT1_MB", value: 42)
!577 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT2_MB", value: 43)
!578 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT3_MB", value: 44)
!579 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT4_MB", value: 45)
!580 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT5_MB", value: 46)
!581 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT6_MB", value: 47)
!582 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT7_MB", value: 48)
!583 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT8_MB", value: 49)
!584 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT9_MB", value: 50)
!585 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT0_WC", value: 51)
!586 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT1_WC", value: 52)
!587 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT2_WC", value: 53)
!588 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT3_WC", value: 54)
!589 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT4_WC", value: 55)
!590 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT5_WC", value: 56)
!591 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT6_WC", value: 57)
!592 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT7_WC", value: 58)
!593 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT8_WC", value: 59)
!594 = !DIEnumerator(name: "_NL_CTYPE_OUTDIGIT9_WC", value: 60)
!595 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TAB_SIZE", value: 61)
!596 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_FROM_IDX", value: 62)
!597 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_FROM_TBL", value: 63)
!598 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TO_IDX", value: 64)
!599 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_TO_TBL", value: 65)
!600 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN", value: 66)
!601 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_DEFAULT_MISSING", value: 67)
!602 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_IGNORE_LEN", value: 68)
!603 = !DIEnumerator(name: "_NL_CTYPE_TRANSLIT_IGNORE", value: 69)
!604 = !DIEnumerator(name: "_NL_CTYPE_MAP_TO_NONASCII", value: 70)
!605 = !DIEnumerator(name: "_NL_CTYPE_NONASCII_CASE", value: 71)
!606 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_1", value: 72)
!607 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_2", value: 73)
!608 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_3", value: 74)
!609 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_4", value: 75)
!610 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_5", value: 76)
!611 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_6", value: 77)
!612 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_7", value: 78)
!613 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_8", value: 79)
!614 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_9", value: 80)
!615 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_10", value: 81)
!616 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_11", value: 82)
!617 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_12", value: 83)
!618 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_13", value: 84)
!619 = !DIEnumerator(name: "_NL_CTYPE_EXTRA_MAP_14", value: 85)
!620 = !DIEnumerator(name: "_NL_NUM_LC_CTYPE", value: 86)
!621 = !DIEnumerator(name: "__INT_CURR_SYMBOL", value: 262144)
!622 = !DIEnumerator(name: "__CURRENCY_SYMBOL", value: 262145)
!623 = !DIEnumerator(name: "__MON_DECIMAL_POINT", value: 262146)
!624 = !DIEnumerator(name: "__MON_THOUSANDS_SEP", value: 262147)
!625 = !DIEnumerator(name: "__MON_GROUPING", value: 262148)
!626 = !DIEnumerator(name: "__POSITIVE_SIGN", value: 262149)
!627 = !DIEnumerator(name: "__NEGATIVE_SIGN", value: 262150)
!628 = !DIEnumerator(name: "__INT_FRAC_DIGITS", value: 262151)
!629 = !DIEnumerator(name: "__FRAC_DIGITS", value: 262152)
!630 = !DIEnumerator(name: "__P_CS_PRECEDES", value: 262153)
!631 = !DIEnumerator(name: "__P_SEP_BY_SPACE", value: 262154)
!632 = !DIEnumerator(name: "__N_CS_PRECEDES", value: 262155)
!633 = !DIEnumerator(name: "__N_SEP_BY_SPACE", value: 262156)
!634 = !DIEnumerator(name: "__P_SIGN_POSN", value: 262157)
!635 = !DIEnumerator(name: "__N_SIGN_POSN", value: 262158)
!636 = !DIEnumerator(name: "_NL_MONETARY_CRNCYSTR", value: 262159)
!637 = !DIEnumerator(name: "__INT_P_CS_PRECEDES", value: 262160)
!638 = !DIEnumerator(name: "__INT_P_SEP_BY_SPACE", value: 262161)
!639 = !DIEnumerator(name: "__INT_N_CS_PRECEDES", value: 262162)
!640 = !DIEnumerator(name: "__INT_N_SEP_BY_SPACE", value: 262163)
!641 = !DIEnumerator(name: "__INT_P_SIGN_POSN", value: 262164)
!642 = !DIEnumerator(name: "__INT_N_SIGN_POSN", value: 262165)
!643 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_CURR_SYMBOL", value: 262166)
!644 = !DIEnumerator(name: "_NL_MONETARY_DUO_CURRENCY_SYMBOL", value: 262167)
!645 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_FRAC_DIGITS", value: 262168)
!646 = !DIEnumerator(name: "_NL_MONETARY_DUO_FRAC_DIGITS", value: 262169)
!647 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_CS_PRECEDES", value: 262170)
!648 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_SEP_BY_SPACE", value: 262171)
!649 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_CS_PRECEDES", value: 262172)
!650 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_SEP_BY_SPACE", value: 262173)
!651 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_CS_PRECEDES", value: 262174)
!652 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_SEP_BY_SPACE", value: 262175)
!653 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_CS_PRECEDES", value: 262176)
!654 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_SEP_BY_SPACE", value: 262177)
!655 = !DIEnumerator(name: "_NL_MONETARY_DUO_P_SIGN_POSN", value: 262178)
!656 = !DIEnumerator(name: "_NL_MONETARY_DUO_N_SIGN_POSN", value: 262179)
!657 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_P_SIGN_POSN", value: 262180)
!658 = !DIEnumerator(name: "_NL_MONETARY_DUO_INT_N_SIGN_POSN", value: 262181)
!659 = !DIEnumerator(name: "_NL_MONETARY_UNO_VALID_FROM", value: 262182)
!660 = !DIEnumerator(name: "_NL_MONETARY_UNO_VALID_TO", value: 262183)
!661 = !DIEnumerator(name: "_NL_MONETARY_DUO_VALID_FROM", value: 262184)
!662 = !DIEnumerator(name: "_NL_MONETARY_DUO_VALID_TO", value: 262185)
!663 = !DIEnumerator(name: "_NL_MONETARY_CONVERSION_RATE", value: 262186)
!664 = !DIEnumerator(name: "_NL_MONETARY_DECIMAL_POINT_WC", value: 262187)
!665 = !DIEnumerator(name: "_NL_MONETARY_THOUSANDS_SEP_WC", value: 262188)
!666 = !DIEnumerator(name: "_NL_MONETARY_CODESET", value: 262189)
!667 = !DIEnumerator(name: "_NL_NUM_LC_MONETARY", value: 262190)
!668 = !DIEnumerator(name: "__DECIMAL_POINT", value: 65536)
!669 = !DIEnumerator(name: "RADIXCHAR", value: 65536)
!670 = !DIEnumerator(name: "__THOUSANDS_SEP", value: 65537)
!671 = !DIEnumerator(name: "THOUSEP", value: 65537)
!672 = !DIEnumerator(name: "__GROUPING", value: 65538)
!673 = !DIEnumerator(name: "_NL_NUMERIC_DECIMAL_POINT_WC", value: 65539)
!674 = !DIEnumerator(name: "_NL_NUMERIC_THOUSANDS_SEP_WC", value: 65540)
!675 = !DIEnumerator(name: "_NL_NUMERIC_CODESET", value: 65541)
!676 = !DIEnumerator(name: "_NL_NUM_LC_NUMERIC", value: 65542)
!677 = !DIEnumerator(name: "__YESEXPR", value: 327680)
!678 = !DIEnumerator(name: "__NOEXPR", value: 327681)
!679 = !DIEnumerator(name: "__YESSTR", value: 327682)
!680 = !DIEnumerator(name: "__NOSTR", value: 327683)
!681 = !DIEnumerator(name: "_NL_MESSAGES_CODESET", value: 327684)
!682 = !DIEnumerator(name: "_NL_NUM_LC_MESSAGES", value: 327685)
!683 = !DIEnumerator(name: "_NL_PAPER_HEIGHT", value: 458752)
!684 = !DIEnumerator(name: "_NL_PAPER_WIDTH", value: 458753)
!685 = !DIEnumerator(name: "_NL_PAPER_CODESET", value: 458754)
!686 = !DIEnumerator(name: "_NL_NUM_LC_PAPER", value: 458755)
!687 = !DIEnumerator(name: "_NL_NAME_NAME_FMT", value: 524288)
!688 = !DIEnumerator(name: "_NL_NAME_NAME_GEN", value: 524289)
!689 = !DIEnumerator(name: "_NL_NAME_NAME_MR", value: 524290)
!690 = !DIEnumerator(name: "_NL_NAME_NAME_MRS", value: 524291)
!691 = !DIEnumerator(name: "_NL_NAME_NAME_MISS", value: 524292)
!692 = !DIEnumerator(name: "_NL_NAME_NAME_MS", value: 524293)
!693 = !DIEnumerator(name: "_NL_NAME_CODESET", value: 524294)
!694 = !DIEnumerator(name: "_NL_NUM_LC_NAME", value: 524295)
!695 = !DIEnumerator(name: "_NL_ADDRESS_POSTAL_FMT", value: 589824)
!696 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_NAME", value: 589825)
!697 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_POST", value: 589826)
!698 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_AB2", value: 589827)
!699 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_AB3", value: 589828)
!700 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_CAR", value: 589829)
!701 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_NUM", value: 589830)
!702 = !DIEnumerator(name: "_NL_ADDRESS_COUNTRY_ISBN", value: 589831)
!703 = !DIEnumerator(name: "_NL_ADDRESS_LANG_NAME", value: 589832)
!704 = !DIEnumerator(name: "_NL_ADDRESS_LANG_AB", value: 589833)
!705 = !DIEnumerator(name: "_NL_ADDRESS_LANG_TERM", value: 589834)
!706 = !DIEnumerator(name: "_NL_ADDRESS_LANG_LIB", value: 589835)
!707 = !DIEnumerator(name: "_NL_ADDRESS_CODESET", value: 589836)
!708 = !DIEnumerator(name: "_NL_NUM_LC_ADDRESS", value: 589837)
!709 = !DIEnumerator(name: "_NL_TELEPHONE_TEL_INT_FMT", value: 655360)
!710 = !DIEnumerator(name: "_NL_TELEPHONE_TEL_DOM_FMT", value: 655361)
!711 = !DIEnumerator(name: "_NL_TELEPHONE_INT_SELECT", value: 655362)
!712 = !DIEnumerator(name: "_NL_TELEPHONE_INT_PREFIX", value: 655363)
!713 = !DIEnumerator(name: "_NL_TELEPHONE_CODESET", value: 655364)
!714 = !DIEnumerator(name: "_NL_NUM_LC_TELEPHONE", value: 655365)
!715 = !DIEnumerator(name: "_NL_MEASUREMENT_MEASUREMENT", value: 720896)
!716 = !DIEnumerator(name: "_NL_MEASUREMENT_CODESET", value: 720897)
!717 = !DIEnumerator(name: "_NL_NUM_LC_MEASUREMENT", value: 720898)
!718 = !DIEnumerator(name: "_NL_IDENTIFICATION_TITLE", value: 786432)
!719 = !DIEnumerator(name: "_NL_IDENTIFICATION_SOURCE", value: 786433)
!720 = !DIEnumerator(name: "_NL_IDENTIFICATION_ADDRESS", value: 786434)
!721 = !DIEnumerator(name: "_NL_IDENTIFICATION_CONTACT", value: 786435)
!722 = !DIEnumerator(name: "_NL_IDENTIFICATION_EMAIL", value: 786436)
!723 = !DIEnumerator(name: "_NL_IDENTIFICATION_TEL", value: 786437)
!724 = !DIEnumerator(name: "_NL_IDENTIFICATION_FAX", value: 786438)
!725 = !DIEnumerator(name: "_NL_IDENTIFICATION_LANGUAGE", value: 786439)
!726 = !DIEnumerator(name: "_NL_IDENTIFICATION_TERRITORY", value: 786440)
!727 = !DIEnumerator(name: "_NL_IDENTIFICATION_AUDIENCE", value: 786441)
!728 = !DIEnumerator(name: "_NL_IDENTIFICATION_APPLICATION", value: 786442)
!729 = !DIEnumerator(name: "_NL_IDENTIFICATION_ABBREVIATION", value: 786443)
!730 = !DIEnumerator(name: "_NL_IDENTIFICATION_REVISION", value: 786444)
!731 = !DIEnumerator(name: "_NL_IDENTIFICATION_DATE", value: 786445)
!732 = !DIEnumerator(name: "_NL_IDENTIFICATION_CATEGORY", value: 786446)
!733 = !DIEnumerator(name: "_NL_IDENTIFICATION_CODESET", value: 786447)
!734 = !DIEnumerator(name: "_NL_NUM_LC_IDENTIFICATION", value: 786448)
!735 = !DIEnumerator(name: "_NL_NUM", value: 786449)
!736 = !{!60, !58, !71}
!737 = !{!393}
!738 = !DIFile(filename: "lib/localcharset.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!739 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !68)
!740 = distinct !DICompileUnit(language: DW_LANG_C99, file: !741, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !742)
!741 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!742 = !{!48}
!743 = distinct !DICompileUnit(language: DW_LANG_C99, file: !744, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256)
!744 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !746, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256)
!746 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!747 = distinct !DICompileUnit(language: DW_LANG_C99, file: !748, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !749, retainedTypes: !754)
!748 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!749 = !{!750}
!750 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !751, line: 41, size: 32, elements: !752)
!751 = !DIFile(filename: "lib/version-etc.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!752 = !{!753}
!753 = !DIEnumerator(name: "COPYRIGHT_YEAR", value: 2017)
!754 = !{!60}
!755 = distinct !DICompileUnit(language: DW_LANG_C99, file: !756, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !757, retainedTypes: !771)
!756 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!757 = !{!758}
!758 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !760, file: !759, line: 192, size: 32, elements: !769)
!759 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!760 = distinct !DISubprogram(name: "x2nrealloc", scope: !759, file: !759, line: 180, type: !761, isLocal: false, isDefinition: true, scopeLine: 181, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !764)
!761 = !DISubroutineType(types: !762)
!762 = !{!60, !60, !763, !61}
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!764 = !{!765, !766, !767, !768}
!765 = !DILocalVariable(name: "p", arg: 1, scope: !760, file: !759, line: 180, type: !60)
!766 = !DILocalVariable(name: "pn", arg: 2, scope: !760, file: !759, line: 180, type: !763)
!767 = !DILocalVariable(name: "s", arg: 3, scope: !760, file: !759, line: 180, type: !61)
!768 = !DILocalVariable(name: "n", scope: !760, file: !759, line: 182, type: !61)
!769 = !{!770}
!770 = !DIEnumerator(name: "DEFAULT_MXFAST", value: 128)
!771 = !{!61, !58, !60}
!772 = distinct !DICompileUnit(language: DW_LANG_C99, file: !773, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256)
!773 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !775, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, retainedTypes: !754)
!775 = !DIFile(filename: "./lib/calloc.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !777, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256)
!777 = !DIFile(filename: "./lib/fclose.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!778 = distinct !DICompileUnit(language: DW_LANG_C99, file: !779, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, retainedTypes: !754)
!779 = !DIFile(filename: "./lib/fflush.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!780 = distinct !DICompileUnit(language: DW_LANG_C99, file: !781, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, retainedTypes: !754)
!781 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !783, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, retainedTypes: !784)
!783 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!784 = !{!61}
!785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !786, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256)
!786 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!787 = distinct !DICompileUnit(language: DW_LANG_C99, file: !788, producer: "clang version 4.0.1 (tags/RELEASE_401/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !256, retainedTypes: !789)
!788 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!789 = !{!61, !63, !65, !68}
!790 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!791 = !{i32 2, !"Dwarf Version", i32 4}
!792 = !{i32 2, !"Debug Info Version", i32 3}
!793 = !{i32 1, !"PIC Level", i32 2}
!794 = !{i32 1, !"PIE Level", i32 2}
!795 = distinct !DISubprogram(name: "usage", scope: !3, file: !3, line: 223, type: !796, isLocal: false, isDefinition: true, scopeLine: 224, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: true, unit: !2, variables: !798)
!796 = !DISubroutineType(types: !797)
!797 = !{null, !70}
!798 = !{!799}
!799 = !DILocalVariable(name: "status", arg: 1, scope: !795, file: !3, line: 223, type: !70)
!800 = !DIExpression()
!801 = !DILocation(line: 223, column: 12, scope: !795)
!802 = !DILocation(line: 225, column: 14, scope: !803)
!803 = distinct !DILexicalBlock(scope: !795, file: !3, line: 225, column: 7)
!804 = !DILocation(line: 225, column: 7, scope: !795)
!805 = !DILocation(line: 226, column: 5, scope: !806)
!806 = !DILexicalBlockFile(scope: !807, file: !3, discriminator: 1)
!807 = distinct !DILexicalBlock(scope: !803, file: !3, line: 226, column: 5)
!808 = !{!809, !809, i64 0}
!809 = !{!"any pointer", !810, i64 0}
!810 = !{!"omnipotent char", !811, i64 0}
!811 = !{!"Simple C/C++ TBAA"}
!812 = !DILocation(line: 226, column: 5, scope: !813)
!813 = !DILexicalBlockFile(scope: !807, file: !3, discriminator: 3)
!814 = !DILocation(line: 226, column: 5, scope: !815)
!815 = !DILexicalBlockFile(scope: !807, file: !3, discriminator: 2)
!816 = !DILocation(line: 229, column: 7, scope: !817)
!817 = distinct !DILexicalBlock(scope: !803, file: !3, line: 228, column: 5)
!818 = !DILocation(line: 229, column: 7, scope: !819)
!819 = !DILexicalBlockFile(scope: !817, file: !3, discriminator: 1)
!820 = !DILocation(line: 580, column: 3, scope: !821, inlinedAt: !824)
!821 = distinct !DISubprogram(name: "emit_stdin_note", scope: !35, file: !35, line: 578, type: !822, isLocal: true, isDefinition: true, scopeLine: 579, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !256)
!822 = !DISubroutineType(types: !823)
!823 = !{null}
!824 = distinct !DILocation(line: 237, column: 7, scope: !817)
!825 = !DILocation(line: 580, column: 3, scope: !826, inlinedAt: !824)
!826 = !DILexicalBlockFile(scope: !821, file: !35, discriminator: 1)
!827 = !DILocation(line: 244, column: 9, scope: !828)
!828 = distinct !DILexicalBlock(scope: !817, file: !3, line: 238, column: 11)
!829 = !DILocation(line: 244, column: 9, scope: !830)
!830 = !DILexicalBlockFile(scope: !828, file: !3, discriminator: 1)
!831 = !DILocation(line: 249, column: 7, scope: !817)
!832 = !DILocation(line: 249, column: 7, scope: !819)
!833 = !DILocation(line: 258, column: 7, scope: !817)
!834 = !DILocation(line: 258, column: 7, scope: !819)
!835 = !DILocation(line: 266, column: 9, scope: !836)
!836 = distinct !DILexicalBlock(scope: !817, file: !3, line: 261, column: 11)
!837 = !DILocation(line: 266, column: 9, scope: !838)
!838 = !DILexicalBlockFile(scope: !836, file: !3, discriminator: 1)
!839 = !DILocation(line: 269, column: 7, scope: !817)
!840 = !DILocation(line: 269, column: 7, scope: !819)
!841 = !DILocation(line: 279, column: 7, scope: !817)
!842 = !DILocation(line: 279, column: 7, scope: !819)
!843 = !DILocation(line: 280, column: 7, scope: !817)
!844 = !DILocation(line: 280, column: 7, scope: !819)
!845 = !DILocation(line: 281, column: 7, scope: !817)
!846 = !DILocation(line: 281, column: 7, scope: !819)
!847 = !DILocation(line: 642, column: 15, scope: !83, inlinedAt: !848)
!848 = distinct !DILocation(line: 288, column: 7, scope: !817)
!849 = !DILocation(line: 651, column: 3, scope: !83, inlinedAt: !848)
!850 = !DILocation(line: 651, column: 3, scope: !851, inlinedAt: !848)
!851 = !DILexicalBlockFile(scope: !83, file: !35, discriminator: 1)
!852 = !DILocation(line: 655, column: 29, scope: !83, inlinedAt: !848)
!853 = !DILocation(line: 655, column: 15, scope: !83, inlinedAt: !848)
!854 = !DILocation(line: 656, column: 7, scope: !102, inlinedAt: !848)
!855 = !DILocation(line: 656, column: 19, scope: !102, inlinedAt: !848)
!856 = !DILocation(line: 656, column: 22, scope: !857, inlinedAt: !848)
!857 = !DILexicalBlockFile(scope: !102, file: !35, discriminator: 16)
!858 = !DILocation(line: 656, column: 7, scope: !859, inlinedAt: !848)
!859 = !DILexicalBlockFile(scope: !83, file: !35, discriminator: 16)
!860 = !DILocation(line: 662, column: 7, scope: !861, inlinedAt: !848)
!861 = distinct !DILexicalBlock(scope: !102, file: !35, line: 657, column: 5)
!862 = !DILocation(line: 662, column: 7, scope: !863, inlinedAt: !848)
!863 = !DILexicalBlockFile(scope: !861, file: !35, discriminator: 1)
!864 = !DILocation(line: 664, column: 5, scope: !861, inlinedAt: !848)
!865 = !DILocation(line: 665, column: 3, scope: !83, inlinedAt: !848)
!866 = !DILocation(line: 665, column: 3, scope: !851, inlinedAt: !848)
!867 = !DILocation(line: 667, column: 3, scope: !83, inlinedAt: !848)
!868 = !DILocation(line: 667, column: 3, scope: !851, inlinedAt: !848)
!869 = !DILocation(line: 291, column: 3, scope: !795)
!870 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 854, type: !871, isLocal: false, isDefinition: true, scopeLine: 855, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !874)
!871 = !DISubroutineType(types: !872)
!872 = !{!70, !70, !873}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!874 = !{!875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !888, !891, !894, !895, !898}
!875 = !DILocalVariable(name: "argc", arg: 1, scope: !870, file: !3, line: 854, type: !70)
!876 = !DILocalVariable(name: "argv", arg: 2, scope: !870, file: !3, line: 854, type: !873)
!877 = !DILocalVariable(name: "bin_buffer_unaligned", scope: !870, file: !3, line: 856, type: !189)
!878 = !DILocalVariable(name: "bin_buffer", scope: !870, file: !3, line: 858, type: !71)
!879 = !DILocalVariable(name: "do_check", scope: !870, file: !3, line: 859, type: !76)
!880 = !DILocalVariable(name: "opt", scope: !870, file: !3, line: 860, type: !70)
!881 = !DILocalVariable(name: "ok", scope: !870, file: !3, line: 861, type: !76)
!882 = !DILocalVariable(name: "binary", scope: !870, file: !3, line: 862, type: !70)
!883 = !DILocalVariable(name: "prefix_tag", scope: !870, file: !3, line: 863, type: !76)
!884 = !DILocalVariable(name: "short_opts", scope: !870, file: !3, line: 882, type: !68)
!885 = !DILocalVariable(name: "operand_lim", scope: !870, file: !3, line: 1021, type: !873)
!886 = !DILocalVariable(name: "operandp", scope: !887, file: !3, line: 1025, type: !873)
!887 = distinct !DILexicalBlock(scope: !870, file: !3, line: 1025, column: 3)
!888 = !DILocalVariable(name: "file", scope: !889, file: !3, line: 1027, type: !58)
!889 = distinct !DILexicalBlock(scope: !890, file: !3, line: 1026, column: 5)
!890 = distinct !DILexicalBlock(scope: !887, file: !3, line: 1025, column: 3)
!891 = !DILocalVariable(name: "file_is_binary", scope: !892, file: !3, line: 1033, type: !70)
!892 = distinct !DILexicalBlock(scope: !893, file: !3, line: 1032, column: 9)
!893 = distinct !DILexicalBlock(scope: !889, file: !3, line: 1029, column: 11)
!894 = !DILocalVariable(name: "missing", scope: !892, file: !3, line: 1034, type: !76)
!895 = !DILocalVariable(name: "needs_escape", scope: !896, file: !3, line: 1047, type: !76)
!896 = distinct !DILexicalBlock(scope: !897, file: !3, line: 1039, column: 13)
!897 = distinct !DILexicalBlock(scope: !892, file: !3, line: 1036, column: 15)
!898 = !DILocalVariable(name: "i", scope: !896, file: !3, line: 1066, type: !61)
!899 = !DILocation(line: 653, column: 17, scope: !122, inlinedAt: !900)
!900 = distinct !DILocation(line: 1030, column: 15, scope: !893)
!901 = !DILocation(line: 854, column: 11, scope: !870)
!902 = !DILocation(line: 854, column: 24, scope: !870)
!903 = !DILocation(line: 856, column: 3, scope: !870)
!904 = !DILocation(line: 856, column: 17, scope: !870)
!905 = !DILocalVariable(name: "alignment", arg: 2, scope: !906, file: !35, line: 498, type: !61)
!906 = distinct !DISubprogram(name: "ptr_align", scope: !35, file: !35, line: 498, type: !907, isLocal: true, isDefinition: true, scopeLine: 499, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !909)
!907 = !DISubroutineType(types: !908)
!908 = !{!60, !63, !61}
!909 = !{!910, !905, !911, !912}
!910 = !DILocalVariable(name: "ptr", arg: 1, scope: !906, file: !35, line: 498, type: !63)
!911 = !DILocalVariable(name: "p0", scope: !906, file: !35, line: 500, type: !68)
!912 = !DILocalVariable(name: "p1", scope: !906, file: !35, line: 501, type: !68)
!913 = !DILocation(line: 498, column: 36, scope: !906, inlinedAt: !914)
!914 = distinct !DILocation(line: 858, column: 31, scope: !870)
!915 = !DILocation(line: 501, column: 35, scope: !906, inlinedAt: !914)
!916 = !DILocation(line: 501, column: 15, scope: !906, inlinedAt: !914)
!917 = !DILocation(line: 502, column: 25, scope: !906, inlinedAt: !914)
!918 = !DILocation(line: 502, column: 37, scope: !906, inlinedAt: !914)
!919 = !DILocation(line: 502, column: 23, scope: !906, inlinedAt: !914)
!920 = !DILocation(line: 858, column: 18, scope: !870)
!921 = !DILocation(line: 859, column: 8, scope: !870)
!922 = !DILocation(line: 861, column: 8, scope: !870)
!923 = !DILocation(line: 862, column: 7, scope: !870)
!924 = !DILocation(line: 863, column: 8, scope: !870)
!925 = !DILocation(line: 867, column: 21, scope: !870)
!926 = !DILocation(line: 867, column: 3, scope: !870)
!927 = !DILocation(line: 868, column: 3, scope: !870)
!928 = !DILocation(line: 869, column: 3, scope: !870)
!929 = !DILocation(line: 870, column: 3, scope: !870)
!930 = !DILocation(line: 872, column: 3, scope: !870)
!931 = !DILocation(line: 876, column: 12, scope: !870)
!932 = !DILocation(line: 876, column: 3, scope: !870)
!933 = !DILocation(line: 885, column: 3, scope: !870)
!934 = !DILocation(line: 885, column: 17, scope: !935)
!935 = !DILexicalBlockFile(scope: !870, file: !3, discriminator: 1)
!936 = !DILocation(line: 860, column: 7, scope: !870)
!937 = !DILocation(line: 885, column: 3, scope: !935)
!938 = !DILocation(line: 905, column: 9, scope: !939)
!939 = distinct !DILexicalBlock(scope: !870, file: !3, line: 887, column: 7)
!940 = !DILocation(line: 910, column: 9, scope: !939)
!941 = !DILocation(line: 913, column: 9, scope: !939)
!942 = !DILocation(line: 918, column: 9, scope: !939)
!943 = !DILocation(line: 921, column: 9, scope: !939)
!944 = !DILocation(line: 926, column: 9, scope: !939)
!945 = !DILocation(line: 929, column: 9, scope: !939)
!946 = !DILocation(line: 933, column: 9, scope: !939)
!947 = distinct !{!947, !933, !948}
!948 = !DILocation(line: 938, column: 7, scope: !870)
!949 = !DILocation(line: 934, column: 7, scope: !939)
!950 = !DILocation(line: 935, column: 7, scope: !939)
!951 = !DILocation(line: 935, column: 7, scope: !952)
!952 = !DILexicalBlockFile(scope: !939, file: !3, discriminator: 1)
!953 = !DILocation(line: 937, column: 9, scope: !939)
!954 = !DILocation(line: 957, column: 7, scope: !955)
!955 = distinct !DILexicalBlock(scope: !870, file: !3, line: 957, column: 7)
!956 = !DILocation(line: 957, column: 18, scope: !955)
!957 = !DILocation(line: 957, column: 22, scope: !958)
!958 = !DILexicalBlockFile(scope: !955, file: !3, discriminator: 1)
!959 = !DILocation(line: 964, column: 19, scope: !960)
!960 = distinct !DILexicalBlock(scope: !955, file: !3, line: 958, column: 4)
!961 = !DILocation(line: 964, column: 6, scope: !962)
!962 = !DILexicalBlockFile(scope: !960, file: !3, discriminator: 1)
!963 = !DILocation(line: 965, column: 6, scope: !960)
!964 = !DILocation(line: 968, column: 21, scope: !965)
!965 = !DILexicalBlockFile(scope: !966, file: !3, discriminator: 1)
!966 = distinct !DILexicalBlock(scope: !870, file: !3, line: 968, column: 7)
!967 = !DILocation(line: 968, column: 18, scope: !966)
!968 = !DILocation(line: 970, column: 20, scope: !969)
!969 = distinct !DILexicalBlock(scope: !966, file: !3, line: 969, column: 5)
!970 = !DILocation(line: 970, column: 7, scope: !971)
!971 = !DILexicalBlockFile(scope: !969, file: !3, discriminator: 1)
!972 = !DILocation(line: 972, column: 7, scope: !969)
!973 = !DILocation(line: 975, column: 9, scope: !974)
!974 = distinct !DILexicalBlock(scope: !870, file: !3, line: 975, column: 7)
!975 = !DILocation(line: 975, column: 19, scope: !974)
!976 = !DILocation(line: 977, column: 20, scope: !977)
!977 = distinct !DILexicalBlock(scope: !974, file: !3, line: 976, column: 5)
!978 = !DILocation(line: 977, column: 7, scope: !979)
!979 = !DILexicalBlockFile(scope: !977, file: !3, discriminator: 1)
!980 = !DILocation(line: 979, column: 7, scope: !977)
!981 = !DILocation(line: 982, column: 22, scope: !982)
!982 = distinct !DILexicalBlock(scope: !870, file: !3, line: 982, column: 7)
!983 = !DILocation(line: 985, column: 14, scope: !984)
!984 = distinct !DILexicalBlock(scope: !982, file: !3, line: 983, column: 5)
!985 = !DILocation(line: 984, column: 7, scope: !984)
!986 = !DILocation(line: 987, column: 7, scope: !984)
!987 = !DILocation(line: 990, column: 19, scope: !988)
!988 = distinct !DILexicalBlock(scope: !870, file: !3, line: 990, column: 7)
!989 = !DILocation(line: 993, column: 8, scope: !990)
!990 = distinct !DILexicalBlock(scope: !988, file: !3, line: 991, column: 5)
!991 = !DILocation(line: 992, column: 7, scope: !990)
!992 = !DILocation(line: 994, column: 7, scope: !990)
!993 = !DILocation(line: 997, column: 12, scope: !994)
!994 = distinct !DILexicalBlock(scope: !870, file: !3, line: 997, column: 7)
!995 = !DILocation(line: 1000, column: 8, scope: !996)
!996 = distinct !DILexicalBlock(scope: !994, file: !3, line: 998, column: 5)
!997 = !DILocation(line: 999, column: 7, scope: !996)
!998 = !DILocation(line: 1001, column: 7, scope: !996)
!999 = !DILocation(line: 1004, column: 13, scope: !1000)
!1000 = distinct !DILexicalBlock(scope: !870, file: !3, line: 1004, column: 7)
!1001 = !DILocation(line: 1007, column: 8, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !1000, file: !3, line: 1005, column: 5)
!1003 = !DILocation(line: 1006, column: 7, scope: !1002)
!1004 = !DILocation(line: 1008, column: 7, scope: !1002)
!1005 = !DILocation(line: 1011, column: 17, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !870, file: !3, line: 1011, column: 7)
!1007 = !DILocation(line: 1011, column: 16, scope: !1006)
!1008 = !DILocation(line: 1011, column: 14, scope: !1006)
!1009 = !DILocation(line: 1011, column: 7, scope: !870)
!1010 = !DILocation(line: 1014, column: 9, scope: !1011)
!1011 = distinct !DILexicalBlock(scope: !1006, file: !3, line: 1012, column: 4)
!1012 = !DILocation(line: 1013, column: 6, scope: !1011)
!1013 = !DILocation(line: 1015, column: 6, scope: !1011)
!1014 = !DILocation(line: 1018, column: 7, scope: !870)
!1015 = !DILocation(line: 1021, column: 29, scope: !870)
!1016 = !DILocation(line: 1021, column: 10, scope: !870)
!1017 = !DILocation(line: 1022, column: 7, scope: !1018)
!1018 = distinct !DILexicalBlock(scope: !870, file: !3, line: 1022, column: 7)
!1019 = !{!1020, !1020, i64 0}
!1020 = !{!"int", !810, i64 0}
!1021 = !DILocation(line: 1022, column: 14, scope: !1018)
!1022 = !DILocation(line: 1022, column: 7, scope: !870)
!1023 = !DILocation(line: 1023, column: 17, scope: !1018)
!1024 = !DILocation(line: 1023, column: 20, scope: !1018)
!1025 = !DILocation(line: 1023, column: 5, scope: !1018)
!1026 = !DILocation(line: 1025, column: 31, scope: !887)
!1027 = !DILocation(line: 1025, column: 15, scope: !887)
!1028 = !DILocation(line: 1025, column: 50, scope: !1029)
!1029 = !DILexicalBlockFile(scope: !890, file: !3, discriminator: 1)
!1030 = !DILocation(line: 1025, column: 3, scope: !1031)
!1031 = !DILexicalBlockFile(scope: !887, file: !3, discriminator: 1)
!1032 = !DILocation(line: 1090, column: 23, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !870, file: !3, line: 1090, column: 7)
!1034 = !DILocation(line: 1027, column: 20, scope: !889)
!1035 = !DILocation(line: 1027, column: 13, scope: !889)
!1036 = !DILocation(line: 1029, column: 11, scope: !889)
!1037 = !DILocation(line: 644, column: 27, scope: !122, inlinedAt: !900)
!1038 = !DILocation(line: 647, column: 13, scope: !122, inlinedAt: !900)
!1039 = !DILocation(line: 648, column: 13, scope: !122, inlinedAt: !900)
!1040 = !DILocation(line: 649, column: 13, scope: !122, inlinedAt: !900)
!1041 = !DILocation(line: 650, column: 13, scope: !122, inlinedAt: !900)
!1042 = !DILocation(line: 651, column: 8, scope: !122, inlinedAt: !900)
!1043 = !DILocation(line: 652, column: 8, scope: !122, inlinedAt: !900)
!1044 = !DILocation(line: 653, column: 3, scope: !122, inlinedAt: !900)
!1045 = !DILocation(line: 498, column: 36, scope: !906, inlinedAt: !1046)
!1046 = distinct !DILocation(line: 655, column: 31, scope: !122, inlinedAt: !900)
!1047 = !DILocation(line: 501, column: 15, scope: !906, inlinedAt: !1046)
!1048 = !DILocation(line: 655, column: 18, scope: !122, inlinedAt: !900)
!1049 = !DILocation(line: 657, column: 3, scope: !122, inlinedAt: !900)
!1050 = !DILocation(line: 658, column: 3, scope: !122, inlinedAt: !900)
!1051 = !DILocation(line: 659, column: 19, scope: !198, inlinedAt: !900)
!1052 = !DILocation(line: 659, column: 19, scope: !201, inlinedAt: !900)
!1053 = !DILocation(line: 659, column: 19, scope: !1054, inlinedAt: !900)
!1054 = !DILexicalBlockFile(scope: !201, file: !3, discriminator: 2)
!1055 = !{!810, !810, i64 0}
!1056 = !DILocation(line: 659, column: 19, scope: !1057, inlinedAt: !900)
!1057 = !DILexicalBlockFile(scope: !1058, file: !3, discriminator: 3)
!1058 = distinct !DILexicalBlock(scope: !201, file: !3, line: 659, column: 19)
!1059 = !DILocation(line: 659, column: 19, scope: !1060, inlinedAt: !900)
!1060 = !DILexicalBlockFile(scope: !1058, file: !3, discriminator: 2)
!1061 = !DILocation(line: 659, column: 19, scope: !1062, inlinedAt: !900)
!1062 = !DILexicalBlockFile(scope: !1063, file: !3, discriminator: 4)
!1063 = distinct !DILexicalBlock(scope: !1058, file: !3, line: 659, column: 19)
!1064 = !DILocation(line: 659, column: 19, scope: !1065, inlinedAt: !900)
!1065 = !DILexicalBlockFile(scope: !122, file: !3, discriminator: 13)
!1066 = !DILocation(line: 661, column: 7, scope: !122, inlinedAt: !900)
!1067 = !DILocation(line: 664, column: 24, scope: !1068, inlinedAt: !900)
!1068 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 662, column: 5)
!1069 = distinct !DILexicalBlock(scope: !122, file: !3, line: 661, column: 7)
!1070 = !DILocation(line: 665, column: 26, scope: !1068, inlinedAt: !900)
!1071 = !DILocation(line: 646, column: 9, scope: !122, inlinedAt: !900)
!1072 = !DILocation(line: 666, column: 5, scope: !1068, inlinedAt: !900)
!1073 = !DILocation(line: 669, column: 26, scope: !1074, inlinedAt: !900)
!1074 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 668, column: 5)
!1075 = !DILocation(line: 670, column: 28, scope: !1076, inlinedAt: !900)
!1076 = distinct !DILexicalBlock(scope: !1074, file: !3, line: 670, column: 11)
!1077 = !DILocation(line: 670, column: 11, scope: !1074, inlinedAt: !900)
!1078 = !DILocation(line: 672, column: 21, scope: !1079, inlinedAt: !900)
!1079 = distinct !DILexicalBlock(scope: !1076, file: !3, line: 671, column: 9)
!1080 = !DILocation(line: 672, column: 34, scope: !1081, inlinedAt: !900)
!1081 = !DILexicalBlockFile(scope: !1079, file: !3, discriminator: 1)
!1082 = !DILocation(line: 672, column: 11, scope: !1083, inlinedAt: !900)
!1083 = !DILexicalBlockFile(scope: !1079, file: !3, discriminator: 2)
!1084 = !DILocation(line: 673, column: 11, scope: !1079, inlinedAt: !900)
!1085 = !DILocation(line: 656, column: 13, scope: !122, inlinedAt: !900)
!1086 = !DILocation(line: 657, column: 9, scope: !122, inlinedAt: !900)
!1087 = !DILocation(line: 678, column: 8, scope: !122, inlinedAt: !900)
!1088 = !DILocation(line: 658, column: 10, scope: !122, inlinedAt: !900)
!1089 = !DILocation(line: 679, column: 24, scope: !122, inlinedAt: !900)
!1090 = !{!1091, !1091, i64 0}
!1091 = !{!"long", !810, i64 0}
!1092 = !DILocation(line: 680, column: 3, scope: !122, inlinedAt: !900)
!1093 = distinct !{!1093, !1094, !1095}
!1094 = !DILocation(line: 680, column: 3, scope: !122)
!1095 = !DILocation(line: 790, column: 64, scope: !122)
!1096 = !DILocation(line: 687, column: 7, scope: !204, inlinedAt: !900)
!1097 = !DILocation(line: 688, column: 23, scope: !1098, inlinedAt: !900)
!1098 = distinct !DILexicalBlock(scope: !204, file: !3, line: 688, column: 11)
!1099 = !DILocation(line: 688, column: 11, scope: !204, inlinedAt: !900)
!1100 = !DILocation(line: 689, column: 9, scope: !1098, inlinedAt: !900)
!1101 = !DILocation(line: 689, column: 9, scope: !1102, inlinedAt: !900)
!1102 = !DILexicalBlockFile(scope: !1098, file: !3, discriminator: 1)
!1103 = !DILocation(line: 689, column: 9, scope: !1104, inlinedAt: !900)
!1104 = !DILexicalBlockFile(scope: !1098, file: !3, discriminator: 2)
!1105 = !DIExpression(DW_OP_deref)
!1106 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !1107, file: !1108, line: 115, type: !873)
!1107 = distinct !DISubprogram(name: "getline", scope: !1108, file: !1108, line: 115, type: !1109, isLocal: false, isDefinition: true, scopeLine: 116, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1111)
!1108 = !DIFile(filename: "/usr/include/bits/stdio.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!210, !873, !763, !128}
!1111 = !{!1106, !1112, !1113}
!1112 = !DILocalVariable(name: "__n", arg: 2, scope: !1107, file: !1108, line: 115, type: !763)
!1113 = !DILocalVariable(name: "__stream", arg: 3, scope: !1107, file: !1108, line: 115, type: !128)
!1114 = !DILocation(line: 115, column: 17, scope: !1107, inlinedAt: !1115)
!1115 = distinct !DILocation(line: 692, column: 21, scope: !204, inlinedAt: !900)
!1116 = !DILocation(line: 115, column: 36, scope: !1107, inlinedAt: !1115)
!1117 = !DILocation(line: 115, column: 47, scope: !1107, inlinedAt: !1115)
!1118 = !DILocation(line: 117, column: 10, scope: !1107, inlinedAt: !1115)
!1119 = !DILocation(line: 685, column: 15, scope: !204, inlinedAt: !900)
!1120 = !DILocation(line: 693, column: 23, scope: !1121, inlinedAt: !900)
!1121 = distinct !DILexicalBlock(scope: !204, file: !3, line: 693, column: 11)
!1122 = !DILocation(line: 693, column: 11, scope: !204, inlinedAt: !900)
!1123 = !DILocation(line: 697, column: 11, scope: !1124, inlinedAt: !900)
!1124 = distinct !DILexicalBlock(scope: !204, file: !3, line: 697, column: 11)
!1125 = !DILocation(line: 697, column: 19, scope: !1124, inlinedAt: !900)
!1126 = !DILocation(line: 697, column: 11, scope: !204, inlinedAt: !900)
!1127 = !DILocation(line: 701, column: 28, scope: !1128, inlinedAt: !900)
!1128 = distinct !DILexicalBlock(scope: !204, file: !3, line: 701, column: 11)
!1129 = !DILocation(line: 701, column: 11, scope: !1128, inlinedAt: !900)
!1130 = !DILocation(line: 701, column: 33, scope: !1128, inlinedAt: !900)
!1131 = !DILocation(line: 701, column: 11, scope: !204, inlinedAt: !900)
!1132 = !DILocation(line: 702, column: 29, scope: !1128, inlinedAt: !900)
!1133 = !DILocation(line: 702, column: 9, scope: !1128, inlinedAt: !900)
!1134 = !DILocation(line: 704, column: 23, scope: !213, inlinedAt: !900)
!1135 = !DILocalVariable(name: "s", arg: 1, scope: !1136, file: !3, line: 397, type: !58)
!1136 = distinct !DISubprogram(name: "split_3", scope: !3, file: !3, line: 397, type: !1137, isLocal: true, isDefinition: true, scopeLine: 399, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1140)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!76, !58, !61, !1139, !248, !873}
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!1140 = !{!1135, !1141, !1142, !1143, !1144, !1145, !1146, !1147}
!1141 = !DILocalVariable(name: "s_len", arg: 2, scope: !1136, file: !3, line: 397, type: !61)
!1142 = !DILocalVariable(name: "hex_digest", arg: 3, scope: !1136, file: !3, line: 398, type: !1139)
!1143 = !DILocalVariable(name: "binary", arg: 4, scope: !1136, file: !3, line: 398, type: !248)
!1144 = !DILocalVariable(name: "file_name", arg: 5, scope: !1136, file: !3, line: 398, type: !873)
!1145 = !DILocalVariable(name: "escaped_filename", scope: !1136, file: !3, line: 400, type: !76)
!1146 = !DILocalVariable(name: "algo_name_len", scope: !1136, file: !3, line: 401, type: !61)
!1147 = !DILocalVariable(name: "i", scope: !1136, file: !3, line: 403, type: !61)
!1148 = !DILocation(line: 397, column: 16, scope: !1136, inlinedAt: !1149)
!1149 = distinct !DILocation(line: 704, column: 14, scope: !213, inlinedAt: !900)
!1150 = !DILocation(line: 397, column: 26, scope: !1136, inlinedAt: !1149)
!1151 = !DILocation(line: 400, column: 8, scope: !1136, inlinedAt: !1149)
!1152 = !DILocation(line: 403, column: 10, scope: !1136, inlinedAt: !1149)
!1153 = !DILocation(line: 404, column: 3, scope: !1136, inlinedAt: !1149)
!1154 = !DILocation(line: 404, column: 10, scope: !1155, inlinedAt: !1149)
!1155 = !DILexicalBlockFile(scope: !1136, file: !3, discriminator: 1)
!1156 = !DILocation(line: 405, column: 5, scope: !1136, inlinedAt: !1149)
!1157 = !DILocation(line: 404, column: 3, scope: !1158, inlinedAt: !1149)
!1158 = !DILexicalBlockFile(scope: !1136, file: !3, discriminator: 4)
!1159 = distinct !{!1159, !1160, !1161}
!1160 = !DILocation(line: 404, column: 3, scope: !1136)
!1161 = !DILocation(line: 405, column: 7, scope: !1136)
!1162 = !DILocation(line: 409, column: 7, scope: !1163, inlinedAt: !1149)
!1163 = distinct !DILexicalBlock(scope: !1164, file: !3, line: 408, column: 5)
!1164 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 407, column: 7)
!1165 = !DILocation(line: 411, column: 5, scope: !1163, inlinedAt: !1149)
!1166 = !DILocation(line: 401, column: 10, scope: !1136, inlinedAt: !1149)
!1167 = !DILocation(line: 416, column: 7, scope: !1168, inlinedAt: !1149)
!1168 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 416, column: 7)
!1169 = !DILocation(line: 416, column: 7, scope: !1136, inlinedAt: !1149)
!1170 = !DILocation(line: 418, column: 9, scope: !1171, inlinedAt: !1149)
!1171 = distinct !DILexicalBlock(scope: !1168, file: !3, line: 417, column: 5)
!1172 = !DILocation(line: 453, column: 11, scope: !1173, inlinedAt: !1149)
!1173 = distinct !DILexicalBlock(scope: !1171, file: !3, line: 453, column: 11)
!1174 = !DILocation(line: 453, column: 16, scope: !1173, inlinedAt: !1149)
!1175 = !DILocation(line: 454, column: 9, scope: !1173, inlinedAt: !1149)
!1176 = !DILocation(line: 453, column: 11, scope: !1171, inlinedAt: !1149)
!1177 = !DILocation(line: 455, column: 11, scope: !1178, inlinedAt: !1149)
!1178 = distinct !DILexicalBlock(scope: !1171, file: !3, line: 455, column: 11)
!1179 = !DILocation(line: 455, column: 16, scope: !1178, inlinedAt: !1149)
!1180 = !DILocation(line: 455, column: 11, scope: !1171, inlinedAt: !1149)
!1181 = !DILocation(line: 457, column: 11, scope: !1182, inlinedAt: !1149)
!1182 = distinct !DILexicalBlock(scope: !1178, file: !3, line: 456, column: 9)
!1183 = !DILocation(line: 459, column: 33, scope: !1182, inlinedAt: !1149)
!1184 = !DILocation(line: 459, column: 44, scope: !1182, inlinedAt: !1149)
!1185 = !DILocalVariable(name: "s", arg: 1, scope: !1186, file: !3, line: 354, type: !58)
!1186 = distinct !DISubprogram(name: "bsd_split_3", scope: !3, file: !3, line: 354, type: !1187, isLocal: true, isDefinition: true, scopeLine: 356, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1189)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!76, !58, !61, !1139, !873, !76}
!1189 = !{!1185, !1190, !1191, !1192, !1193, !1194}
!1190 = !DILocalVariable(name: "s_len", arg: 2, scope: !1186, file: !3, line: 354, type: !61)
!1191 = !DILocalVariable(name: "hex_digest", arg: 3, scope: !1186, file: !3, line: 354, type: !1139)
!1192 = !DILocalVariable(name: "file_name", arg: 4, scope: !1186, file: !3, line: 355, type: !873)
!1193 = !DILocalVariable(name: "escaped_filename", arg: 5, scope: !1186, file: !3, line: 355, type: !76)
!1194 = !DILocalVariable(name: "i", scope: !1186, file: !3, line: 357, type: !61)
!1195 = !DILocation(line: 354, column: 20, scope: !1186, inlinedAt: !1196)
!1196 = distinct !DILocation(line: 459, column: 18, scope: !1182, inlinedAt: !1149)
!1197 = !DILocation(line: 354, column: 30, scope: !1186, inlinedAt: !1196)
!1198 = !DIExpression(DW_OP_LLVM_fragment, 0, 1)
!1199 = !DILocation(line: 355, column: 37, scope: !1186, inlinedAt: !1196)
!1200 = !DILocation(line: 359, column: 13, scope: !1201, inlinedAt: !1196)
!1201 = distinct !DILexicalBlock(scope: !1186, file: !3, line: 359, column: 7)
!1202 = !DILocation(line: 359, column: 7, scope: !1186, inlinedAt: !1196)
!1203 = !DILocation(line: 357, column: 10, scope: !1186, inlinedAt: !1196)
!1204 = !DILocation(line: 364, column: 10, scope: !1205, inlinedAt: !1196)
!1205 = !DILexicalBlockFile(scope: !1186, file: !3, discriminator: 1)
!1206 = !DILocation(line: 364, column: 12, scope: !1205, inlinedAt: !1196)
!1207 = !DILocation(line: 364, column: 15, scope: !1208, inlinedAt: !1196)
!1208 = !DILexicalBlockFile(scope: !1186, file: !3, discriminator: 2)
!1209 = !DILocation(line: 364, column: 20, scope: !1208, inlinedAt: !1196)
!1210 = !DILocation(line: 364, column: 3, scope: !1211, inlinedAt: !1196)
!1211 = !DILexicalBlockFile(scope: !1186, file: !3, discriminator: 3)
!1212 = distinct !{!1212, !1213, !1214}
!1213 = !DILocation(line: 364, column: 3, scope: !1186)
!1214 = !DILocation(line: 365, column: 6, scope: !1186)
!1215 = !DILocation(line: 367, column: 7, scope: !1186, inlinedAt: !1196)
!1216 = !DILocation(line: 372, column: 24, scope: !1217, inlinedAt: !1196)
!1217 = distinct !DILexicalBlock(scope: !1186, file: !3, line: 372, column: 7)
!1218 = !DILocalVariable(name: "s", arg: 1, scope: !1219, file: !3, line: 305, type: !58)
!1219 = distinct !DISubprogram(name: "filename_unescape", scope: !3, file: !3, line: 305, type: !1220, isLocal: true, isDefinition: true, scopeLine: 306, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1222)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!58, !58, !61}
!1222 = !{!1218, !1223, !1224, !1225}
!1223 = !DILocalVariable(name: "s_len", arg: 2, scope: !1219, file: !3, line: 305, type: !61)
!1224 = !DILocalVariable(name: "dst", scope: !1219, file: !3, line: 307, type: !58)
!1225 = !DILocalVariable(name: "i", scope: !1226, file: !3, line: 309, type: !61)
!1226 = distinct !DILexicalBlock(scope: !1219, file: !3, line: 309, column: 3)
!1227 = !DILocation(line: 305, column: 26, scope: !1219, inlinedAt: !1228)
!1228 = distinct !DILocation(line: 372, column: 27, scope: !1229, inlinedAt: !1196)
!1229 = !DILexicalBlockFile(scope: !1217, file: !3, discriminator: 1)
!1230 = !DILocation(line: 305, column: 36, scope: !1219, inlinedAt: !1228)
!1231 = !DILocation(line: 307, column: 9, scope: !1219, inlinedAt: !1228)
!1232 = !DILocation(line: 309, column: 15, scope: !1226, inlinedAt: !1228)
!1233 = !DILocation(line: 309, column: 3, scope: !1234, inlinedAt: !1228)
!1234 = !DILexicalBlockFile(scope: !1226, file: !3, discriminator: 1)
!1235 = !DILocation(line: 311, column: 15, scope: !1236, inlinedAt: !1228)
!1236 = distinct !DILexicalBlock(scope: !1237, file: !3, line: 310, column: 5)
!1237 = distinct !DILexicalBlock(scope: !1226, file: !3, line: 309, column: 3)
!1238 = !DILocation(line: 311, column: 7, scope: !1236, inlinedAt: !1228)
!1239 = !DILocation(line: 314, column: 17, scope: !1240, inlinedAt: !1228)
!1240 = distinct !DILexicalBlock(scope: !1241, file: !3, line: 314, column: 15)
!1241 = distinct !DILexicalBlock(scope: !1236, file: !3, line: 312, column: 9)
!1242 = !DILocation(line: 314, column: 15, scope: !1241, inlinedAt: !1228)
!1243 = !DILocation(line: 319, column: 11, scope: !1241, inlinedAt: !1228)
!1244 = !DILocation(line: 320, column: 19, scope: !1241, inlinedAt: !1228)
!1245 = !DILocation(line: 320, column: 11, scope: !1241, inlinedAt: !1228)
!1246 = !DILocation(line: 324, column: 15, scope: !1247, inlinedAt: !1228)
!1247 = distinct !DILexicalBlock(scope: !1241, file: !3, line: 321, column: 13)
!1248 = !DILocation(line: 309, column: 34, scope: !1249, inlinedAt: !1228)
!1249 = !DILexicalBlockFile(scope: !1237, file: !3, discriminator: 3)
!1250 = !DILocation(line: 309, column: 24, scope: !1251, inlinedAt: !1228)
!1251 = !DILexicalBlockFile(scope: !1237, file: !3, discriminator: 1)
!1252 = distinct !{!1252, !1253, !1254}
!1253 = !DILocation(line: 309, column: 3, scope: !1226)
!1254 = !DILocation(line: 342, column: 5, scope: !1226)
!1255 = !DILocation(line: 343, column: 11, scope: !1256, inlinedAt: !1228)
!1256 = distinct !DILexicalBlock(scope: !1219, file: !3, line: 343, column: 7)
!1257 = !DILocation(line: 343, column: 7, scope: !1219, inlinedAt: !1228)
!1258 = !DILocation(line: 344, column: 10, scope: !1256, inlinedAt: !1228)
!1259 = !DILocation(line: 344, column: 5, scope: !1256, inlinedAt: !1228)
!1260 = !DILocation(line: 375, column: 10, scope: !1186, inlinedAt: !1196)
!1261 = !DILocation(line: 377, column: 3, scope: !1186, inlinedAt: !1196)
!1262 = !DILocation(line: 377, column: 10, scope: !1205, inlinedAt: !1196)
!1263 = !DILocation(line: 378, column: 6, scope: !1186, inlinedAt: !1196)
!1264 = !DILocation(line: 377, column: 3, scope: !1265, inlinedAt: !1196)
!1265 = !DILexicalBlockFile(scope: !1186, file: !3, discriminator: 4)
!1266 = distinct !{!1266, !1267, !1268}
!1267 = !DILocation(line: 377, column: 3, scope: !1186)
!1268 = !DILocation(line: 378, column: 6, scope: !1186)
!1269 = !DILocation(line: 385, column: 10, scope: !1205, inlinedAt: !1196)
!1270 = distinct !{!1270, !1271, !1272}
!1271 = !DILocation(line: 385, column: 3, scope: !1186)
!1272 = !DILocation(line: 386, column: 6, scope: !1186)
!1273 = !DILocation(line: 469, column: 13, scope: !1274, inlinedAt: !1149)
!1274 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 469, column: 7)
!1275 = !DILocation(line: 469, column: 45, scope: !1274, inlinedAt: !1149)
!1276 = !DILocation(line: 469, column: 50, scope: !1274, inlinedAt: !1149)
!1277 = !DILocation(line: 469, column: 44, scope: !1274, inlinedAt: !1149)
!1278 = !DILocation(line: 469, column: 42, scope: !1274, inlinedAt: !1149)
!1279 = !DILocation(line: 469, column: 17, scope: !1274, inlinedAt: !1149)
!1280 = !DILocation(line: 469, column: 7, scope: !1136, inlinedAt: !1149)
!1281 = !DILocation(line: 489, column: 5, scope: !1136, inlinedAt: !1149)
!1282 = !DILocation(line: 490, column: 8, scope: !1283, inlinedAt: !1149)
!1283 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 490, column: 7)
!1284 = !DILocation(line: 493, column: 6, scope: !1136, inlinedAt: !1149)
!1285 = !DILocation(line: 493, column: 10, scope: !1136, inlinedAt: !1149)
!1286 = !DILocation(line: 496, column: 14, scope: !1287, inlinedAt: !1149)
!1287 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 496, column: 7)
!1288 = !DILocation(line: 496, column: 18, scope: !1287, inlinedAt: !1149)
!1289 = !DILocation(line: 496, column: 24, scope: !1287, inlinedAt: !1149)
!1290 = !DILocation(line: 496, column: 28, scope: !1291, inlinedAt: !1149)
!1291 = !DILexicalBlockFile(scope: !1287, file: !3, discriminator: 1)
!1292 = !DILocation(line: 496, column: 40, scope: !1291, inlinedAt: !1149)
!1293 = !DILocation(line: 504, column: 11, scope: !1294, inlinedAt: !1149)
!1294 = distinct !DILexicalBlock(scope: !1295, file: !3, line: 504, column: 11)
!1295 = distinct !DILexicalBlock(scope: !1287, file: !3, line: 497, column: 5)
!1296 = !DILocation(line: 504, column: 24, scope: !1294, inlinedAt: !1149)
!1297 = !DILocation(line: 504, column: 11, scope: !1295, inlinedAt: !1149)
!1298 = !DILocation(line: 506, column: 20, scope: !1295, inlinedAt: !1149)
!1299 = !DILocation(line: 507, column: 5, scope: !1295, inlinedAt: !1149)
!1300 = !DILocation(line: 508, column: 12, scope: !1301, inlinedAt: !1149)
!1301 = distinct !DILexicalBlock(scope: !1287, file: !3, line: 508, column: 12)
!1302 = !DILocation(line: 508, column: 25, scope: !1301, inlinedAt: !1149)
!1303 = !DILocation(line: 508, column: 12, scope: !1287, inlinedAt: !1149)
!1304 = !DILocation(line: 510, column: 20, scope: !1305, inlinedAt: !1149)
!1305 = distinct !DILexicalBlock(scope: !1301, file: !3, line: 509, column: 5)
!1306 = !DILocation(line: 511, column: 21, scope: !1305, inlinedAt: !1149)
!1307 = !DILocation(line: 512, column: 5, scope: !1305, inlinedAt: !1149)
!1308 = !DILocation(line: 516, column: 17, scope: !1136, inlinedAt: !1149)
!1309 = !DILocation(line: 518, column: 7, scope: !1136, inlinedAt: !1149)
!1310 = !DILocation(line: 519, column: 44, scope: !1311, inlinedAt: !1149)
!1311 = distinct !DILexicalBlock(scope: !1136, file: !3, line: 518, column: 7)
!1312 = !DILocation(line: 305, column: 26, scope: !1219, inlinedAt: !1313)
!1313 = distinct !DILocation(line: 519, column: 12, scope: !1311, inlinedAt: !1149)
!1314 = !DILocation(line: 305, column: 36, scope: !1219, inlinedAt: !1313)
!1315 = !DILocation(line: 307, column: 9, scope: !1219, inlinedAt: !1313)
!1316 = !DILocation(line: 309, column: 15, scope: !1226, inlinedAt: !1313)
!1317 = !DILocation(line: 309, column: 24, scope: !1251, inlinedAt: !1313)
!1318 = !DILocation(line: 309, column: 3, scope: !1234, inlinedAt: !1313)
!1319 = !DILocation(line: 311, column: 15, scope: !1236, inlinedAt: !1313)
!1320 = !DILocation(line: 311, column: 7, scope: !1236, inlinedAt: !1313)
!1321 = !DILocation(line: 314, column: 17, scope: !1240, inlinedAt: !1313)
!1322 = !DILocation(line: 314, column: 15, scope: !1241, inlinedAt: !1313)
!1323 = !DILocation(line: 319, column: 11, scope: !1241, inlinedAt: !1313)
!1324 = !DILocation(line: 320, column: 19, scope: !1241, inlinedAt: !1313)
!1325 = !DILocation(line: 320, column: 11, scope: !1241, inlinedAt: !1313)
!1326 = !DILocation(line: 324, column: 15, scope: !1247, inlinedAt: !1313)
!1327 = !DILocation(line: 309, column: 34, scope: !1249, inlinedAt: !1313)
!1328 = !DILocation(line: 343, column: 15, scope: !1256, inlinedAt: !1313)
!1329 = !DILocation(line: 343, column: 11, scope: !1256, inlinedAt: !1313)
!1330 = !DILocation(line: 343, column: 7, scope: !1219, inlinedAt: !1313)
!1331 = !DILocation(line: 344, column: 10, scope: !1256, inlinedAt: !1313)
!1332 = !DILocation(line: 344, column: 5, scope: !1256, inlinedAt: !1313)
!1333 = !DILocation(line: 519, column: 49, scope: !1311, inlinedAt: !1149)
!1334 = !DILocation(line: 705, column: 14, scope: !213, inlinedAt: !900)
!1335 = !DILocation(line: 705, column: 29, scope: !1336, inlinedAt: !900)
!1336 = !DILexicalBlockFile(scope: !213, file: !3, discriminator: 1)
!1337 = !DILocation(line: 705, column: 32, scope: !212, inlinedAt: !900)
!1338 = !DILocation(line: 682, column: 13, scope: !204, inlinedAt: !900)
!1339 = !DILocation(line: 705, column: 32, scope: !216, inlinedAt: !900)
!1340 = !DILocation(line: 705, column: 32, scope: !1341, inlinedAt: !900)
!1341 = !DILexicalBlockFile(scope: !216, file: !3, discriminator: 4)
!1342 = !DILocation(line: 705, column: 32, scope: !1343, inlinedAt: !900)
!1343 = !DILexicalBlockFile(scope: !1344, file: !3, discriminator: 5)
!1344 = distinct !DILexicalBlock(scope: !216, file: !3, line: 705, column: 32)
!1345 = !DILocation(line: 705, column: 32, scope: !1346, inlinedAt: !900)
!1346 = !DILexicalBlockFile(scope: !1344, file: !3, discriminator: 4)
!1347 = !DILocation(line: 705, column: 32, scope: !1348, inlinedAt: !900)
!1348 = !DILexicalBlockFile(scope: !1349, file: !3, discriminator: 6)
!1349 = distinct !DILexicalBlock(scope: !1344, file: !3, line: 705, column: 32)
!1350 = !DILocation(line: 705, column: 32, scope: !1351, inlinedAt: !900)
!1351 = !DILexicalBlockFile(scope: !213, file: !3, discriminator: 15)
!1352 = !DILocation(line: 706, column: 14, scope: !213, inlinedAt: !900)
!1353 = !DILocation(line: 684, column: 22, scope: !204, inlinedAt: !900)
!1354 = !DILocalVariable(name: "s", arg: 1, scope: !1355, file: !3, line: 527, type: !65)
!1355 = distinct !DISubprogram(name: "hex_digits", scope: !3, file: !3, line: 527, type: !1356, isLocal: true, isDefinition: true, scopeLine: 528, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1358)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!76, !65}
!1358 = !{!1354, !1359}
!1359 = !DILocalVariable(name: "i", scope: !1355, file: !3, line: 529, type: !278)
!1360 = !DILocation(line: 527, column: 34, scope: !1355, inlinedAt: !1361)
!1361 = distinct !DILocation(line: 706, column: 17, scope: !1336, inlinedAt: !900)
!1362 = !DILocation(line: 529, column: 16, scope: !1355, inlinedAt: !1361)
!1363 = !DILocation(line: 530, column: 3, scope: !1364, inlinedAt: !1361)
!1364 = !DILexicalBlockFile(scope: !1365, file: !3, discriminator: 1)
!1365 = distinct !DILexicalBlock(scope: !1355, file: !3, line: 530, column: 3)
!1366 = !DILocation(line: 532, column: 12, scope: !1367, inlinedAt: !1361)
!1367 = distinct !DILexicalBlock(scope: !1368, file: !3, line: 532, column: 11)
!1368 = distinct !DILexicalBlock(scope: !1369, file: !3, line: 531, column: 5)
!1369 = distinct !DILexicalBlock(scope: !1365, file: !3, line: 530, column: 3)
!1370 = !{!1371, !1371, i64 0}
!1371 = !{!"short", !810, i64 0}
!1372 = !DILocation(line: 532, column: 11, scope: !1368, inlinedAt: !1361)
!1373 = !DILocation(line: 534, column: 7, scope: !1368, inlinedAt: !1361)
!1374 = !DILocation(line: 536, column: 10, scope: !1355, inlinedAt: !1361)
!1375 = !DILocation(line: 536, column: 13, scope: !1355, inlinedAt: !1361)
!1376 = !DILocation(line: 704, column: 11, scope: !1377, inlinedAt: !900)
!1377 = !DILexicalBlockFile(scope: !204, file: !3, discriminator: 1)
!1378 = !DILocation(line: 708, column: 11, scope: !1379, inlinedAt: !900)
!1379 = distinct !DILexicalBlock(scope: !213, file: !3, line: 707, column: 9)
!1380 = !DILocation(line: 710, column: 15, scope: !1379, inlinedAt: !900)
!1381 = !DILocation(line: 713, column: 22, scope: !1382, inlinedAt: !900)
!1382 = distinct !DILexicalBlock(scope: !1383, file: !3, line: 711, column: 13)
!1383 = distinct !DILexicalBlock(scope: !1379, file: !3, line: 710, column: 15)
!1384 = !DILocation(line: 715, column: 22, scope: !1382, inlinedAt: !900)
!1385 = !DILocation(line: 712, column: 15, scope: !1382, inlinedAt: !900)
!1386 = !DILocation(line: 717, column: 13, scope: !1382, inlinedAt: !900)
!1387 = !DILocation(line: 719, column: 11, scope: !1379, inlinedAt: !900)
!1388 = !DILocation(line: 720, column: 9, scope: !1379, inlinedAt: !900)
!1389 = !DILocation(line: 728, column: 16, scope: !219, inlinedAt: !900)
!1390 = !DILocation(line: 728, column: 11, scope: !219, inlinedAt: !900)
!1391 = !DILocation(line: 731, column: 45, scope: !219, inlinedAt: !900)
!1392 = !DILocation(line: 731, column: 48, scope: !1393, inlinedAt: !900)
!1393 = !DILexicalBlockFile(scope: !219, file: !3, discriminator: 1)
!1394 = !DILocation(line: 731, column: 45, scope: !1393, inlinedAt: !900)
!1395 = !DILocation(line: 735, column: 16, scope: !219, inlinedAt: !900)
!1396 = !DILocation(line: 737, column: 15, scope: !219, inlinedAt: !900)
!1397 = !DILocation(line: 739, column: 15, scope: !1398, inlinedAt: !900)
!1398 = distinct !DILexicalBlock(scope: !225, file: !3, line: 738, column: 13)
!1399 = !DILocation(line: 740, column: 19, scope: !1398, inlinedAt: !900)
!1400 = !DILocation(line: 742, column: 23, scope: !1401, inlinedAt: !900)
!1401 = distinct !DILexicalBlock(scope: !1402, file: !3, line: 741, column: 17)
!1402 = distinct !DILexicalBlock(scope: !1398, file: !3, line: 740, column: 19)
!1403 = !DILocalVariable(name: "__c", arg: 1, scope: !1404, file: !1108, line: 105, type: !70)
!1404 = distinct !DISubprogram(name: "putchar_unlocked", scope: !1108, file: !1108, line: 105, type: !1405, isLocal: false, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1407)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!70, !70}
!1407 = !{!1403}
!1408 = !DILocation(line: 105, column: 23, scope: !1404, inlinedAt: !1409)
!1409 = distinct !DILocation(line: 743, column: 21, scope: !1410, inlinedAt: !900)
!1410 = distinct !DILexicalBlock(scope: !1401, file: !3, line: 742, column: 23)
!1411 = !DILocation(line: 107, column: 10, scope: !1404, inlinedAt: !1409)
!1412 = !{!1413, !809, i64 40}
!1413 = !{!"_IO_FILE", !1020, i64 0, !809, i64 8, !809, i64 16, !809, i64 24, !809, i64 32, !809, i64 40, !809, i64 48, !809, i64 56, !809, i64 64, !809, i64 72, !809, i64 80, !809, i64 88, !809, i64 96, !809, i64 104, !1020, i64 112, !1020, i64 116, !1091, i64 120, !1371, i64 128, !810, i64 130, !810, i64 131, !809, i64 136, !1091, i64 144, !809, i64 152, !809, i64 160, !809, i64 168, !809, i64 176, !1091, i64 184, !1020, i64 192, !810, i64 196}
!1414 = !{!1413, !809, i64 48}
!1415 = !{!"branch_weights", i32 2000, i32 1}
!1416 = !DILocation(line: 107, column: 10, scope: !1417, inlinedAt: !1409)
!1417 = !DILexicalBlockFile(scope: !1404, file: !1108, discriminator: 1)
!1418 = !DILocation(line: 107, column: 10, scope: !1419, inlinedAt: !1409)
!1419 = !DILexicalBlockFile(scope: !1404, file: !1108, discriminator: 2)
!1420 = !DILocation(line: 744, column: 19, scope: !1401, inlinedAt: !900)
!1421 = !DILocation(line: 745, column: 19, scope: !1401, inlinedAt: !900)
!1422 = !DILocation(line: 745, column: 19, scope: !1423, inlinedAt: !900)
!1423 = !DILexicalBlockFile(scope: !1401, file: !3, discriminator: 1)
!1424 = !DILocation(line: 746, column: 17, scope: !1401, inlinedAt: !900)
!1425 = !DILocation(line: 748, column: 35, scope: !224, inlinedAt: !900)
!1426 = !DILocation(line: 748, column: 38, scope: !1427, inlinedAt: !900)
!1427 = !DILexicalBlockFile(scope: !224, file: !3, discriminator: 1)
!1428 = !DILocation(line: 755, column: 58, scope: !223, inlinedAt: !900)
!1429 = !DILocation(line: 755, column: 22, scope: !223, inlinedAt: !900)
!1430 = !DILocation(line: 756, column: 22, scope: !223, inlinedAt: !900)
!1431 = !DILocation(line: 760, column: 15, scope: !1432, inlinedAt: !900)
!1432 = !DILexicalBlockFile(scope: !232, file: !3, discriminator: 1)
!1433 = !DILocation(line: 762, column: 23, scope: !1434, inlinedAt: !900)
!1434 = distinct !DILexicalBlock(scope: !228, file: !3, line: 762, column: 23)
!1435 = !DILocation(line: 762, column: 23, scope: !228, inlinedAt: !900)
!1436 = !DILocation(line: 763, column: 34, scope: !229, inlinedAt: !900)
!1437 = !DILocation(line: 763, column: 50, scope: !229, inlinedAt: !900)
!1438 = !DILocation(line: 763, column: 26, scope: !229, inlinedAt: !900)
!1439 = !DILocation(line: 763, column: 23, scope: !229, inlinedAt: !900)
!1440 = !DILocation(line: 764, column: 23, scope: !229, inlinedAt: !900)
!1441 = !DILocation(line: 764, column: 27, scope: !1442, inlinedAt: !900)
!1442 = !DILexicalBlockFile(scope: !1443, file: !3, discriminator: 1)
!1443 = distinct !DILexicalBlock(scope: !234, file: !3, line: 764, column: 27)
!1444 = !DILocation(line: 764, column: 27, scope: !234, inlinedAt: !900)
!1445 = !DILocation(line: 765, column: 55, scope: !229, inlinedAt: !900)
!1446 = !DILocation(line: 765, column: 31, scope: !229, inlinedAt: !900)
!1447 = !DILocation(line: 765, column: 30, scope: !229, inlinedAt: !900)
!1448 = !DILocation(line: 765, column: 27, scope: !229, inlinedAt: !900)
!1449 = !DILocation(line: 762, column: 23, scope: !1450, inlinedAt: !900)
!1450 = !DILexicalBlockFile(scope: !230, file: !3, discriminator: 1)
!1451 = !DILocation(line: 760, column: 53, scope: !1452, inlinedAt: !900)
!1452 = !DILexicalBlockFile(scope: !231, file: !3, discriminator: 2)
!1453 = !DILocation(line: 760, column: 33, scope: !1454, inlinedAt: !900)
!1454 = !DILexicalBlockFile(scope: !231, file: !3, discriminator: 1)
!1455 = distinct !{!1455, !1456, !1457}
!1456 = !DILocation(line: 760, column: 15, scope: !232)
!1457 = !DILocation(line: 767, column: 17, scope: !232)
!1458 = !DILocation(line: 768, column: 23, scope: !1459, inlinedAt: !900)
!1459 = distinct !DILexicalBlock(scope: !223, file: !3, line: 768, column: 19)
!1460 = !DILocation(line: 769, column: 17, scope: !1459, inlinedAt: !900)
!1461 = !DILocation(line: 768, column: 19, scope: !223, inlinedAt: !900)
!1462 = !DILocation(line: 773, column: 19, scope: !223, inlinedAt: !900)
!1463 = !DILocation(line: 775, column: 47, scope: !1464, inlinedAt: !900)
!1464 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 775, column: 23)
!1465 = distinct !DILexicalBlock(scope: !1466, file: !3, line: 774, column: 17)
!1466 = distinct !DILexicalBlock(scope: !223, file: !3, line: 773, column: 19)
!1467 = !DILocation(line: 775, column: 23, scope: !1468, inlinedAt: !900)
!1468 = !DILexicalBlockFile(scope: !1465, file: !3, discriminator: 1)
!1469 = !DILocation(line: 777, column: 27, scope: !1470, inlinedAt: !900)
!1470 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 776, column: 21)
!1471 = !DILocation(line: 105, column: 23, scope: !1404, inlinedAt: !1472)
!1472 = distinct !DILocation(line: 778, column: 25, scope: !1473, inlinedAt: !900)
!1473 = distinct !DILexicalBlock(scope: !1470, file: !3, line: 777, column: 27)
!1474 = !DILocation(line: 107, column: 10, scope: !1404, inlinedAt: !1472)
!1475 = !DILocation(line: 107, column: 10, scope: !1417, inlinedAt: !1472)
!1476 = !DILocation(line: 107, column: 10, scope: !1419, inlinedAt: !1472)
!1477 = !DILocation(line: 779, column: 23, scope: !1470, inlinedAt: !900)
!1478 = !DILocation(line: 782, column: 23, scope: !1465, inlinedAt: !900)
!1479 = !DILocation(line: 783, column: 21, scope: !1480, inlinedAt: !900)
!1480 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 782, column: 23)
!1481 = !DILocation(line: 783, column: 21, scope: !1482, inlinedAt: !900)
!1482 = !DILexicalBlockFile(scope: !1480, file: !3, discriminator: 1)
!1483 = !DILocation(line: 784, column: 28, scope: !1480, inlinedAt: !900)
!1484 = !DILocation(line: 785, column: 21, scope: !1485, inlinedAt: !900)
!1485 = distinct !DILexicalBlock(scope: !1480, file: !3, line: 784, column: 28)
!1486 = !DILocation(line: 785, column: 21, scope: !1487, inlinedAt: !900)
!1487 = !DILexicalBlockFile(scope: !1485, file: !3, discriminator: 1)
!1488 = !DILocation(line: 788, column: 9, scope: !213, inlinedAt: !900)
!1489 = !DILocalVariable(name: "__stream", arg: 1, scope: !1490, file: !1108, line: 125, type: !128)
!1490 = distinct !DISubprogram(name: "feof_unlocked", scope: !1108, file: !1108, line: 125, type: !1491, isLocal: false, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1493)
!1491 = !DISubroutineType(types: !1492)
!1492 = !{!70, !128}
!1493 = !{!1489}
!1494 = !DILocation(line: 125, column: 1, scope: !1490, inlinedAt: !1495)
!1495 = distinct !DILocation(line: 790, column: 11, scope: !122, inlinedAt: !900)
!1496 = !DILocation(line: 127, column: 10, scope: !1490, inlinedAt: !1495)
!1497 = !{!1413, !1020, i64 0}
!1498 = !DILocation(line: 790, column: 35, scope: !122, inlinedAt: !900)
!1499 = !DILocalVariable(name: "__stream", arg: 1, scope: !1500, file: !1108, line: 132, type: !128)
!1500 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1108, file: !1108, line: 132, type: !1491, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1501)
!1501 = !{!1499}
!1502 = !DILocation(line: 132, column: 1, scope: !1500, inlinedAt: !1503)
!1503 = distinct !DILocation(line: 790, column: 39, scope: !1504, inlinedAt: !900)
!1504 = !DILexicalBlockFile(scope: !122, file: !3, discriminator: 1)
!1505 = !DILocation(line: 792, column: 9, scope: !122, inlinedAt: !900)
!1506 = !DILocation(line: 792, column: 3, scope: !122, inlinedAt: !900)
!1507 = !DILocation(line: 132, column: 1, scope: !1500, inlinedAt: !1508)
!1508 = distinct !DILocation(line: 794, column: 7, scope: !1509, inlinedAt: !900)
!1509 = distinct !DILexicalBlock(scope: !122, file: !3, line: 794, column: 7)
!1510 = !DILocation(line: 134, column: 10, scope: !1500, inlinedAt: !1508)
!1511 = !DILocation(line: 794, column: 7, scope: !1509, inlinedAt: !900)
!1512 = !DILocation(line: 794, column: 7, scope: !122, inlinedAt: !900)
!1513 = !DILocation(line: 796, column: 20, scope: !1514, inlinedAt: !900)
!1514 = distinct !DILexicalBlock(scope: !1509, file: !3, line: 795, column: 5)
!1515 = !DILocation(line: 796, column: 41, scope: !1516, inlinedAt: !900)
!1516 = !DILexicalBlockFile(scope: !1514, file: !3, discriminator: 1)
!1517 = !DILocation(line: 796, column: 7, scope: !1518, inlinedAt: !900)
!1518 = !DILexicalBlockFile(scope: !1514, file: !3, discriminator: 2)
!1519 = !DILocation(line: 797, column: 7, scope: !1514, inlinedAt: !900)
!1520 = !DILocation(line: 800, column: 17, scope: !1521, inlinedAt: !900)
!1521 = distinct !DILexicalBlock(scope: !122, file: !3, line: 800, column: 7)
!1522 = !DILocation(line: 800, column: 20, scope: !1523, inlinedAt: !900)
!1523 = !DILexicalBlockFile(scope: !1521, file: !3, discriminator: 1)
!1524 = !DILocation(line: 800, column: 46, scope: !1523, inlinedAt: !900)
!1525 = !DILocation(line: 800, column: 7, scope: !1504, inlinedAt: !900)
!1526 = !DILocation(line: 802, column: 17, scope: !1527, inlinedAt: !900)
!1527 = distinct !DILexicalBlock(scope: !1521, file: !3, line: 801, column: 5)
!1528 = !DILocation(line: 802, column: 30, scope: !1529, inlinedAt: !900)
!1529 = !DILexicalBlockFile(scope: !1527, file: !3, discriminator: 1)
!1530 = !DILocation(line: 802, column: 7, scope: !1531, inlinedAt: !900)
!1531 = !DILexicalBlockFile(scope: !1527, file: !3, discriminator: 2)
!1532 = !DILocation(line: 803, column: 7, scope: !1527, inlinedAt: !900)
!1533 = !DILocation(line: 806, column: 9, scope: !1534, inlinedAt: !900)
!1534 = distinct !DILexicalBlock(scope: !122, file: !3, line: 806, column: 7)
!1535 = !DILocation(line: 806, column: 7, scope: !122, inlinedAt: !900)
!1536 = !DILocation(line: 809, column: 20, scope: !1537, inlinedAt: !900)
!1537 = distinct !DILexicalBlock(scope: !1534, file: !3, line: 807, column: 5)
!1538 = !DILocation(line: 810, column: 14, scope: !1537, inlinedAt: !900)
!1539 = !DILocation(line: 809, column: 7, scope: !1540, inlinedAt: !900)
!1540 = !DILexicalBlockFile(scope: !1537, file: !3, discriminator: 1)
!1541 = !DILocation(line: 847, column: 11, scope: !122, inlinedAt: !900)
!1542 = !DILocation(line: 814, column: 11, scope: !1543, inlinedAt: !900)
!1543 = distinct !DILexicalBlock(scope: !1534, file: !3, line: 813, column: 5)
!1544 = !DILocation(line: 847, column: 14, scope: !1504, inlinedAt: !900)
!1545 = !DILocation(line: 816, column: 36, scope: !1546, inlinedAt: !900)
!1546 = distinct !DILexicalBlock(scope: !1547, file: !3, line: 816, column: 15)
!1547 = distinct !DILexicalBlock(scope: !1548, file: !3, line: 815, column: 9)
!1548 = distinct !DILexicalBlock(scope: !1543, file: !3, line: 814, column: 11)
!1549 = !DILocation(line: 816, column: 15, scope: !1547, inlinedAt: !900)
!1550 = !DILocation(line: 818, column: 21, scope: !1551, inlinedAt: !900)
!1551 = !DILexicalBlockFile(scope: !1546, file: !3, discriminator: 1)
!1552 = !DILocation(line: 817, column: 13, scope: !1546, inlinedAt: !900)
!1553 = !DILocation(line: 824, column: 39, scope: !1554, inlinedAt: !900)
!1554 = distinct !DILexicalBlock(scope: !1547, file: !3, line: 824, column: 15)
!1555 = !DILocation(line: 824, column: 15, scope: !1547, inlinedAt: !900)
!1556 = !DILocation(line: 826, column: 21, scope: !1557, inlinedAt: !900)
!1557 = !DILexicalBlockFile(scope: !1554, file: !3, discriminator: 1)
!1558 = !DILocation(line: 825, column: 13, scope: !1554, inlinedAt: !900)
!1559 = !DILocation(line: 832, column: 38, scope: !1560, inlinedAt: !900)
!1560 = distinct !DILexicalBlock(scope: !1547, file: !3, line: 832, column: 15)
!1561 = !DILocation(line: 832, column: 15, scope: !1547, inlinedAt: !900)
!1562 = !DILocation(line: 834, column: 21, scope: !1563, inlinedAt: !900)
!1563 = !DILexicalBlockFile(scope: !1560, file: !3, discriminator: 1)
!1564 = !DILocation(line: 833, column: 13, scope: !1560, inlinedAt: !900)
!1565 = !DILocation(line: 840, column: 35, scope: !1566, inlinedAt: !900)
!1566 = !DILexicalBlockFile(scope: !1567, file: !3, discriminator: 1)
!1567 = distinct !DILexicalBlock(scope: !1547, file: !3, line: 840, column: 15)
!1568 = !DILocation(line: 840, column: 30, scope: !1567, inlinedAt: !900)
!1569 = !DILocation(line: 841, column: 26, scope: !1567, inlinedAt: !900)
!1570 = !DILocation(line: 842, column: 20, scope: !1567, inlinedAt: !900)
!1571 = !DILocation(line: 841, column: 13, scope: !1566, inlinedAt: !900)
!1572 = !DILocation(line: 848, column: 11, scope: !122, inlinedAt: !900)
!1573 = !DILocation(line: 850, column: 55, scope: !1574, inlinedAt: !900)
!1574 = !DILexicalBlockFile(scope: !122, file: !3, discriminator: 2)
!1575 = !DILocation(line: 850, column: 23, scope: !1504, inlinedAt: !900)
!1576 = !DILocation(line: 851, column: 1, scope: !122, inlinedAt: !900)
!1577 = !DILocation(line: 1030, column: 15, scope: !893)
!1578 = !DILocation(line: 1030, column: 12, scope: !893)
!1579 = !DILocation(line: 1030, column: 9, scope: !893)
!1580 = !DILocation(line: 1034, column: 16, scope: !892)
!1581 = !DILocation(line: 1034, column: 11, scope: !892)
!1582 = !DILocation(line: 1036, column: 17, scope: !897)
!1583 = !DILocation(line: 1036, column: 15, scope: !892)
!1584 = !DILocation(line: 1047, column: 35, scope: !1585)
!1585 = !DILexicalBlockFile(scope: !896, file: !3, discriminator: 2)
!1586 = !DILocation(line: 1047, column: 55, scope: !1585)
!1587 = !DILocation(line: 1047, column: 58, scope: !1588)
!1588 = !DILexicalBlockFile(scope: !896, file: !3, discriminator: 3)
!1589 = !DILocation(line: 1047, column: 55, scope: !1588)
!1590 = !DILocation(line: 1049, column: 19, scope: !896)
!1591 = !DILocation(line: 1051, column: 23, scope: !1592)
!1592 = distinct !DILexicalBlock(scope: !1593, file: !3, line: 1050, column: 17)
!1593 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1049, column: 19)
!1594 = !DILocation(line: 105, column: 23, scope: !1404, inlinedAt: !1595)
!1595 = distinct !DILocation(line: 1052, column: 21, scope: !1596)
!1596 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 1051, column: 23)
!1597 = !DILocation(line: 107, column: 10, scope: !1404, inlinedAt: !1595)
!1598 = !DILocation(line: 107, column: 10, scope: !1417, inlinedAt: !1595)
!1599 = !DILocation(line: 107, column: 10, scope: !1419, inlinedAt: !1595)
!1600 = !DILocation(line: 1059, column: 19, scope: !1592)
!1601 = !DILocation(line: 1061, column: 19, scope: !1592)
!1602 = !DILocation(line: 1062, column: 19, scope: !1592)
!1603 = !DILocation(line: 1063, column: 19, scope: !1592)
!1604 = !DILocation(line: 1070, column: 31, scope: !1605)
!1605 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1070, column: 19)
!1606 = !DILocation(line: 1070, column: 19, scope: !1607)
!1607 = !DILexicalBlockFile(scope: !896, file: !3, discriminator: 1)
!1608 = !DILocation(line: 105, column: 23, scope: !1404, inlinedAt: !1609)
!1609 = distinct !DILocation(line: 1071, column: 17, scope: !1605)
!1610 = !DILocation(line: 107, column: 10, scope: !1404, inlinedAt: !1609)
!1611 = !DILocation(line: 107, column: 10, scope: !1417, inlinedAt: !1609)
!1612 = !DILocation(line: 107, column: 10, scope: !1419, inlinedAt: !1609)
!1613 = !DILocation(line: 1066, column: 22, scope: !896)
!1614 = !DILocation(line: 1073, column: 15, scope: !1615)
!1615 = !DILexicalBlockFile(scope: !1616, file: !3, discriminator: 1)
!1616 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1073, column: 15)
!1617 = !DILocation(line: 1074, column: 17, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1616, file: !3, line: 1073, column: 15)
!1619 = !DILocation(line: 1073, column: 55, scope: !1620)
!1620 = !DILexicalBlockFile(scope: !1618, file: !3, discriminator: 2)
!1621 = !DILocation(line: 1073, column: 49, scope: !1622)
!1622 = !DILexicalBlockFile(scope: !1618, file: !3, discriminator: 1)
!1623 = !DILocation(line: 1073, column: 29, scope: !1622)
!1624 = distinct !{!1624, !1625, !1626}
!1625 = !DILocation(line: 1073, column: 15, scope: !1616)
!1626 = !DILocation(line: 1074, column: 17, scope: !1616)
!1627 = !DILocation(line: 1076, column: 19, scope: !896)
!1628 = !DILocation(line: 105, column: 23, scope: !1404, inlinedAt: !1629)
!1629 = distinct !DILocation(line: 1078, column: 19, scope: !1630)
!1630 = distinct !DILexicalBlock(scope: !1631, file: !3, line: 1077, column: 17)
!1631 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1076, column: 19)
!1632 = !DILocation(line: 107, column: 10, scope: !1404, inlinedAt: !1629)
!1633 = !DILocation(line: 107, column: 10, scope: !1417, inlinedAt: !1629)
!1634 = !DILocation(line: 107, column: 10, scope: !1419, inlinedAt: !1629)
!1635 = !DILocation(line: 105, column: 23, scope: !1404, inlinedAt: !1636)
!1636 = distinct !DILocation(line: 1080, column: 19, scope: !1630)
!1637 = !DILocation(line: 107, column: 10, scope: !1404, inlinedAt: !1636)
!1638 = !DILocation(line: 107, column: 10, scope: !1417, inlinedAt: !1636)
!1639 = !DILocation(line: 107, column: 10, scope: !1419, inlinedAt: !1636)
!1640 = !DILocation(line: 1082, column: 19, scope: !1630)
!1641 = !DILocation(line: 1083, column: 17, scope: !1630)
!1642 = !DILocation(line: 105, column: 23, scope: !1404, inlinedAt: !1643)
!1643 = distinct !DILocation(line: 1085, column: 15, scope: !896)
!1644 = !DILocation(line: 107, column: 10, scope: !1404, inlinedAt: !1643)
!1645 = !DILocation(line: 107, column: 10, scope: !1417, inlinedAt: !1643)
!1646 = !DILocation(line: 107, column: 10, scope: !1419, inlinedAt: !1643)
!1647 = !DILocation(line: 1087, column: 9, scope: !893)
!1648 = !DILocation(line: 1025, column: 73, scope: !1649)
!1649 = !DILexicalBlockFile(scope: !890, file: !3, discriminator: 3)
!1650 = distinct !{!1650, !1651, !1652}
!1651 = !DILocation(line: 1025, column: 3, scope: !887)
!1652 = !DILocation(line: 1088, column: 5, scope: !887)
!1653 = !DILocation(line: 1090, column: 34, scope: !1654)
!1654 = !DILexicalBlockFile(scope: !1033, file: !3, discriminator: 1)
!1655 = !DILocation(line: 1090, column: 26, scope: !1654)
!1656 = !DILocation(line: 1090, column: 41, scope: !1654)
!1657 = !DILocation(line: 1090, column: 7, scope: !935)
!1658 = !DILocation(line: 1091, column: 5, scope: !1033)
!1659 = !DILocation(line: 1091, column: 5, scope: !1654)
!1660 = !DILocation(line: 1091, column: 5, scope: !1661)
!1661 = !DILexicalBlockFile(scope: !1033, file: !3, discriminator: 2)
!1662 = !DILocation(line: 1093, column: 10, scope: !870)
!1663 = !DILocation(line: 1094, column: 1, scope: !870)
!1664 = !DILocation(line: 530, column: 38, scope: !1665, inlinedAt: !1361)
!1665 = !DILexicalBlockFile(scope: !1369, file: !3, discriminator: 2)
!1666 = !DILocation(line: 530, column: 17, scope: !1667, inlinedAt: !1361)
!1667 = !DILexicalBlockFile(scope: !1369, file: !3, discriminator: 1)
!1668 = distinct !{!1668, !1669, !1670}
!1669 = !DILocation(line: 530, column: 3, scope: !1365)
!1670 = !DILocation(line: 535, column: 5, scope: !1365)
!1671 = distinct !DISubprogram(name: "digest_file", scope: !3, file: !3, line: 583, type: !1672, isLocal: true, isDefinition: true, scopeLine: 585, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1675)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!76, !68, !248, !71, !1674}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1685, !1686, !1688}
!1676 = !DILocalVariable(name: "filename", arg: 1, scope: !1671, file: !3, line: 583, type: !68)
!1677 = !DILocalVariable(name: "binary", arg: 2, scope: !1671, file: !3, line: 583, type: !248)
!1678 = !DILocalVariable(name: "bin_result", arg: 3, scope: !1671, file: !3, line: 583, type: !71)
!1679 = !DILocalVariable(name: "missing", arg: 4, scope: !1671, file: !3, line: 584, type: !1674)
!1680 = !DILocalVariable(name: "fp", scope: !1671, file: !3, line: 586, type: !128)
!1681 = !DILocalVariable(name: "err", scope: !1671, file: !3, line: 587, type: !70)
!1682 = !DILocalVariable(name: "is_stdin", scope: !1671, file: !3, line: 588, type: !76)
!1683 = !DILocalVariable(name: "__s1_len", scope: !1684, file: !3, line: 588, type: !61)
!1684 = distinct !DILexicalBlock(scope: !1671, file: !3, line: 588, column: 19)
!1685 = !DILocalVariable(name: "__s2_len", scope: !1684, file: !3, line: 588, type: !61)
!1686 = !DILocalVariable(name: "__s2", scope: !1687, file: !3, line: 588, type: !65)
!1687 = distinct !DILexicalBlock(scope: !1684, file: !3, line: 588, column: 19)
!1688 = !DILocalVariable(name: "__result", scope: !1687, file: !3, line: 588, type: !70)
!1689 = !DILocation(line: 583, column: 41, scope: !1671)
!1690 = !DILocation(line: 588, column: 19, scope: !1684)
!1691 = !DILocation(line: 588, column: 19, scope: !1692)
!1692 = !DILexicalBlockFile(scope: !1687, file: !3, discriminator: 2)
!1693 = !DILocation(line: 588, column: 19, scope: !1694)
!1694 = !DILexicalBlockFile(scope: !1695, file: !3, discriminator: 3)
!1695 = distinct !DILexicalBlock(scope: !1687, file: !3, line: 588, column: 19)
!1696 = !DILocation(line: 588, column: 19, scope: !1697)
!1697 = !DILexicalBlockFile(scope: !1695, file: !3, discriminator: 2)
!1698 = !DILocation(line: 590, column: 12, scope: !1671)
!1699 = !{!1700, !1700, i64 0}
!1700 = !{!"_Bool", !810, i64 0}
!1701 = !DILocation(line: 592, column: 7, scope: !1671)
!1702 = !DILocation(line: 588, column: 19, scope: !1703)
!1703 = !DILexicalBlockFile(scope: !1704, file: !3, discriminator: 4)
!1704 = distinct !DILexicalBlock(scope: !1695, file: !3, line: 588, column: 19)
!1705 = !DILocation(line: 588, column: 19, scope: !1706)
!1706 = !DILexicalBlockFile(scope: !1684, file: !3, discriminator: 11)
!1707 = !DILocation(line: 595, column: 12, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1709, file: !3, line: 593, column: 5)
!1709 = distinct !DILexicalBlock(scope: !1671, file: !3, line: 592, column: 7)
!1710 = !DILocation(line: 586, column: 9, scope: !1671)
!1711 = !DILocation(line: 603, column: 5, scope: !1708)
!1712 = !DILocation(line: 606, column: 12, scope: !1713)
!1713 = distinct !DILexicalBlock(scope: !1709, file: !3, line: 605, column: 5)
!1714 = !DILocation(line: 607, column: 14, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1713, file: !3, line: 607, column: 11)
!1716 = !DILocation(line: 607, column: 11, scope: !1713)
!1717 = !DILocation(line: 609, column: 33, scope: !1718)
!1718 = !DILexicalBlockFile(scope: !1719, file: !3, discriminator: 1)
!1719 = distinct !DILexicalBlock(scope: !1720, file: !3, line: 609, column: 15)
!1720 = distinct !DILexicalBlock(scope: !1715, file: !3, line: 608, column: 9)
!1721 = !DILocation(line: 609, column: 30, scope: !1719)
!1722 = !DILocation(line: 609, column: 39, scope: !1718)
!1723 = !DILocation(line: 609, column: 15, scope: !1724)
!1724 = !DILexicalBlockFile(scope: !1720, file: !3, discriminator: 1)
!1725 = !DILocation(line: 611, column: 24, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1719, file: !3, line: 610, column: 13)
!1727 = !DILocation(line: 612, column: 15, scope: !1726)
!1728 = !DILocation(line: 614, column: 21, scope: !1720)
!1729 = !DILocation(line: 614, column: 34, scope: !1724)
!1730 = !DILocation(line: 614, column: 11, scope: !1731)
!1731 = !DILexicalBlockFile(scope: !1720, file: !3, discriminator: 2)
!1732 = !DILocation(line: 615, column: 11, scope: !1720)
!1733 = !DILocation(line: 619, column: 3, scope: !1671)
!1734 = !DILocation(line: 624, column: 9, scope: !1671)
!1735 = !DILocation(line: 587, column: 7, scope: !1671)
!1736 = !DILocation(line: 626, column: 7, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1671, file: !3, line: 626, column: 7)
!1738 = !DILocation(line: 626, column: 7, scope: !1671)
!1739 = !DILocation(line: 628, column: 17, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1737, file: !3, line: 627, column: 5)
!1741 = !DILocation(line: 628, column: 30, scope: !1742)
!1742 = !DILexicalBlockFile(scope: !1740, file: !3, discriminator: 1)
!1743 = !DILocation(line: 628, column: 7, scope: !1744)
!1744 = !DILexicalBlockFile(scope: !1740, file: !3, discriminator: 2)
!1745 = !DILocation(line: 629, column: 17, scope: !1746)
!1746 = distinct !DILexicalBlock(scope: !1740, file: !3, line: 629, column: 11)
!1747 = !DILocation(line: 629, column: 14, scope: !1746)
!1748 = !DILocation(line: 629, column: 11, scope: !1740)
!1749 = !DILocation(line: 630, column: 9, scope: !1746)
!1750 = !DILocation(line: 634, column: 17, scope: !1751)
!1751 = distinct !DILexicalBlock(scope: !1671, file: !3, line: 634, column: 7)
!1752 = !DILocation(line: 634, column: 20, scope: !1753)
!1753 = !DILexicalBlockFile(scope: !1751, file: !3, discriminator: 1)
!1754 = !DILocation(line: 634, column: 32, scope: !1753)
!1755 = !DILocation(line: 634, column: 7, scope: !1756)
!1756 = !DILexicalBlockFile(scope: !1671, file: !3, discriminator: 1)
!1757 = !DILocation(line: 636, column: 17, scope: !1758)
!1758 = distinct !DILexicalBlock(scope: !1751, file: !3, line: 635, column: 5)
!1759 = !DILocation(line: 636, column: 30, scope: !1760)
!1760 = !DILexicalBlockFile(scope: !1758, file: !3, discriminator: 1)
!1761 = !DILocation(line: 636, column: 7, scope: !1762)
!1762 = !DILexicalBlockFile(scope: !1758, file: !3, discriminator: 2)
!1763 = !DILocation(line: 637, column: 7, scope: !1758)
!1764 = !DILocation(line: 641, column: 1, scope: !1671)
!1765 = distinct !DISubprogram(name: "print_filename", scope: !3, file: !3, line: 542, type: !1766, isLocal: true, isDefinition: true, scopeLine: 543, flags: DIFlagPrototyped, isOptimized: true, unit: !2, variables: !1768)
!1766 = !DISubroutineType(types: !1767)
!1767 = !{null, !68, !76}
!1768 = !{!1769, !1770}
!1769 = !DILocalVariable(name: "file", arg: 1, scope: !1765, file: !3, line: 542, type: !68)
!1770 = !DILocalVariable(name: "escape", arg: 2, scope: !1765, file: !3, line: 542, type: !76)
!1771 = !DILocation(line: 542, column: 29, scope: !1765)
!1772 = !DILocation(line: 542, column: 40, scope: !1765)
!1773 = !DILocation(line: 544, column: 7, scope: !1765)
!1774 = !DILocation(line: 550, column: 10, scope: !1775)
!1775 = !DILexicalBlockFile(scope: !1765, file: !3, discriminator: 1)
!1776 = !DILocation(line: 550, column: 3, scope: !1775)
!1777 = !DILocation(line: 552, column: 15, scope: !1778)
!1778 = distinct !DILexicalBlock(scope: !1765, file: !3, line: 551, column: 5)
!1779 = !DILocation(line: 546, column: 7, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !1781, file: !3, line: 545, column: 5)
!1781 = distinct !DILexicalBlock(scope: !1765, file: !3, line: 544, column: 7)
!1782 = !DILocation(line: 547, column: 7, scope: !1780)
!1783 = !DILocation(line: 552, column: 7, scope: !1778)
!1784 = !DILocation(line: 555, column: 11, scope: !1785)
!1785 = distinct !DILexicalBlock(scope: !1778, file: !3, line: 553, column: 9)
!1786 = !DILocation(line: 556, column: 11, scope: !1785)
!1787 = !DILocation(line: 559, column: 11, scope: !1785)
!1788 = !DILocation(line: 560, column: 11, scope: !1785)
!1789 = !DILocation(line: 105, column: 23, scope: !1404, inlinedAt: !1790)
!1790 = distinct !DILocation(line: 563, column: 11, scope: !1785)
!1791 = !DILocation(line: 107, column: 10, scope: !1404, inlinedAt: !1790)
!1792 = !DILocation(line: 107, column: 10, scope: !1417, inlinedAt: !1790)
!1793 = !DILocation(line: 107, column: 10, scope: !1419, inlinedAt: !1790)
!1794 = !DILocation(line: 566, column: 11, scope: !1778)
!1795 = distinct !{!1795, !1796, !1797}
!1796 = !DILocation(line: 550, column: 3, scope: !1765)
!1797 = !DILocation(line: 567, column: 5, scope: !1765)
!1798 = !DILocation(line: 568, column: 1, scope: !1765)
!1799 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !265, file: !265, line: 41, type: !84, isLocal: false, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: true, unit: !260, variables: !1800)
!1800 = !{!1801}
!1801 = !DILocalVariable(name: "file", arg: 1, scope: !1799, file: !265, line: 41, type: !68)
!1802 = !DILocation(line: 41, column: 41, scope: !1799)
!1803 = !DILocation(line: 43, column: 13, scope: !1799)
!1804 = !DILocation(line: 44, column: 1, scope: !1799)
!1805 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !265, file: !265, line: 78, type: !1806, isLocal: false, isDefinition: true, scopeLine: 79, flags: DIFlagPrototyped, isOptimized: true, unit: !260, variables: !1808)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{null, !76}
!1808 = !{!1809}
!1809 = !DILocalVariable(name: "ignore", arg: 1, scope: !1805, file: !265, line: 78, type: !76)
!1810 = !DILocation(line: 78, column: 37, scope: !1805)
!1811 = !DILocation(line: 80, column: 16, scope: !1805)
!1812 = !DILocation(line: 81, column: 1, scope: !1805)
!1813 = distinct !DISubprogram(name: "close_stdout", scope: !265, file: !265, line: 107, type: !822, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: true, unit: !260, variables: !1814)
!1814 = !{!1815}
!1815 = !DILocalVariable(name: "write_error", scope: !1816, file: !265, line: 112, type: !68)
!1816 = distinct !DILexicalBlock(scope: !1817, file: !265, line: 111, column: 5)
!1817 = distinct !DILexicalBlock(scope: !1813, file: !265, line: 109, column: 7)
!1818 = !DILocation(line: 109, column: 21, scope: !1817)
!1819 = !DILocation(line: 109, column: 7, scope: !1817)
!1820 = !DILocation(line: 109, column: 29, scope: !1817)
!1821 = !DILocation(line: 110, column: 7, scope: !1817)
!1822 = !DILocation(line: 110, column: 12, scope: !1823)
!1823 = !DILexicalBlockFile(scope: !1817, file: !265, discriminator: 1)
!1824 = !{i8 0, i8 2}
!1825 = !DILocation(line: 114, column: 19, scope: !1826)
!1826 = distinct !DILexicalBlock(scope: !1816, file: !265, line: 113, column: 11)
!1827 = !DILocation(line: 110, column: 25, scope: !1823)
!1828 = !DILocation(line: 110, column: 28, scope: !1829)
!1829 = !DILexicalBlockFile(scope: !1817, file: !265, discriminator: 2)
!1830 = !DILocation(line: 110, column: 34, scope: !1829)
!1831 = !DILocation(line: 109, column: 7, scope: !1832)
!1832 = !DILexicalBlockFile(scope: !1813, file: !265, discriminator: 1)
!1833 = !DILocation(line: 112, column: 33, scope: !1816)
!1834 = !DILocation(line: 112, column: 19, scope: !1816)
!1835 = !DILocation(line: 113, column: 11, scope: !1826)
!1836 = !DILocation(line: 113, column: 11, scope: !1816)
!1837 = !DILocation(line: 114, column: 36, scope: !1838)
!1838 = !DILexicalBlockFile(scope: !1826, file: !265, discriminator: 1)
!1839 = !DILocation(line: 114, column: 9, scope: !1840)
!1840 = !DILexicalBlockFile(scope: !1826, file: !265, discriminator: 2)
!1841 = !DILocation(line: 114, column: 9, scope: !1826)
!1842 = !DILocation(line: 117, column: 9, scope: !1838)
!1843 = !DILocation(line: 119, column: 14, scope: !1816)
!1844 = !DILocation(line: 119, column: 7, scope: !1816)
!1845 = !DILocation(line: 122, column: 22, scope: !1846)
!1846 = distinct !DILexicalBlock(scope: !1813, file: !265, line: 122, column: 8)
!1847 = !DILocation(line: 122, column: 8, scope: !1846)
!1848 = !DILocation(line: 122, column: 30, scope: !1846)
!1849 = !DILocation(line: 122, column: 8, scope: !1813)
!1850 = !DILocation(line: 123, column: 13, scope: !1846)
!1851 = !DILocation(line: 123, column: 6, scope: !1846)
!1852 = !DILocation(line: 124, column: 1, scope: !1813)
!1853 = distinct !DISubprogram(name: "sha256_init_ctx", scope: !274, file: !274, line: 63, type: !1854, isLocal: false, isDefinition: true, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !1869)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{null, !1856}
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sha256_ctx", file: !1858, line: 42, size: 1408, elements: !1859)
!1858 = !DIFile(filename: "./lib/sha256.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!1859 = !{!1860, !1862, !1866, !1867}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1857, file: !1858, line: 44, baseType: !1861, size: 256)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 256, elements: !323)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !1857, file: !1858, line: 46, baseType: !1863, size: 64, offset: 256)
!1863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 64, elements: !1864)
!1864 = !{!1865}
!1865 = !DISubrange(count: 2)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1857, file: !1858, line: 47, baseType: !61, size: 64, offset: 320)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !1857, file: !1858, line: 48, baseType: !1868, size: 1024, offset: 384)
!1868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 1024, elements: !190)
!1869 = !{!1870}
!1870 = !DILocalVariable(name: "ctx", arg: 1, scope: !1853, file: !274, line: 63, type: !1856)
!1871 = !DILocation(line: 63, column: 37, scope: !1853)
!1872 = !DILocation(line: 65, column: 17, scope: !1853)
!1873 = !DILocation(line: 69, column: 3, scope: !1853)
!1874 = !DILocation(line: 69, column: 17, scope: !1853)
!1875 = !DILocation(line: 74, column: 3, scope: !1853)
!1876 = !DILocation(line: 76, column: 1, scope: !1853)
!1877 = !DILocation(line: 74, column: 17, scope: !1853)
!1878 = distinct !DISubprogram(name: "sha224_init_ctx", scope: !274, file: !274, line: 79, type: !1854, isLocal: false, isDefinition: true, scopeLine: 80, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !1879)
!1879 = !{!1880}
!1880 = !DILocalVariable(name: "ctx", arg: 1, scope: !1878, file: !274, line: 79, type: !1856)
!1881 = !DILocation(line: 79, column: 37, scope: !1878)
!1882 = !DILocation(line: 81, column: 17, scope: !1878)
!1883 = !DILocation(line: 85, column: 3, scope: !1878)
!1884 = !DILocation(line: 85, column: 17, scope: !1878)
!1885 = !DILocation(line: 90, column: 3, scope: !1878)
!1886 = !DILocation(line: 92, column: 1, scope: !1878)
!1887 = !DILocation(line: 90, column: 17, scope: !1878)
!1888 = distinct !DISubprogram(name: "sha256_read_ctx", scope: !274, file: !274, line: 106, type: !1889, isLocal: false, isDefinition: true, scopeLine: 107, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !1893)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!60, !1891, !60}
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1857)
!1893 = !{!1894, !1895, !1896, !1897}
!1894 = !DILocalVariable(name: "ctx", arg: 1, scope: !1888, file: !274, line: 106, type: !1891)
!1895 = !DILocalVariable(name: "resbuf", arg: 2, scope: !1888, file: !274, line: 106, type: !60)
!1896 = !DILocalVariable(name: "i", scope: !1888, file: !274, line: 108, type: !70)
!1897 = !DILocalVariable(name: "r", scope: !1888, file: !274, line: 109, type: !58)
!1898 = !DILocation(line: 106, column: 43, scope: !1888)
!1899 = !DILocation(line: 106, column: 54, scope: !1888)
!1900 = !DILocation(line: 109, column: 9, scope: !1888)
!1901 = !DILocation(line: 108, column: 7, scope: !1888)
!1902 = !DILocation(line: 112, column: 47, scope: !1903)
!1903 = distinct !DILexicalBlock(scope: !1904, file: !274, line: 111, column: 3)
!1904 = distinct !DILexicalBlock(scope: !1888, file: !274, line: 111, column: 3)
!1905 = !DILocalVariable(name: "cp", arg: 1, scope: !1906, file: !274, line: 98, type: !58)
!1906 = distinct !DISubprogram(name: "set_uint32", scope: !274, file: !274, line: 98, type: !1907, isLocal: true, isDefinition: true, scopeLine: 99, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !1909)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{null, !58, !277}
!1909 = !{!1905, !1910}
!1910 = !DILocalVariable(name: "v", arg: 2, scope: !1906, file: !274, line: 98, type: !277)
!1911 = !DILocation(line: 98, column: 19, scope: !1906, inlinedAt: !1912)
!1912 = distinct !DILocation(line: 112, column: 5, scope: !1903)
!1913 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !1912)
!1914 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !1912)
!1915 = !DILocation(line: 112, column: 19, scope: !1903)
!1916 = !DILocation(line: 114, column: 3, scope: !1888)
!1917 = distinct !DISubprogram(name: "sha224_read_ctx", scope: !274, file: !274, line: 118, type: !1889, isLocal: false, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !1918)
!1918 = !{!1919, !1920, !1921, !1922}
!1919 = !DILocalVariable(name: "ctx", arg: 1, scope: !1917, file: !274, line: 118, type: !1891)
!1920 = !DILocalVariable(name: "resbuf", arg: 2, scope: !1917, file: !274, line: 118, type: !60)
!1921 = !DILocalVariable(name: "i", scope: !1917, file: !274, line: 120, type: !70)
!1922 = !DILocalVariable(name: "r", scope: !1917, file: !274, line: 121, type: !58)
!1923 = !DILocation(line: 118, column: 43, scope: !1917)
!1924 = !DILocation(line: 118, column: 54, scope: !1917)
!1925 = !DILocation(line: 121, column: 9, scope: !1917)
!1926 = !DILocation(line: 120, column: 7, scope: !1917)
!1927 = !DILocation(line: 124, column: 47, scope: !1928)
!1928 = distinct !DILexicalBlock(scope: !1929, file: !274, line: 123, column: 3)
!1929 = distinct !DILexicalBlock(scope: !1917, file: !274, line: 123, column: 3)
!1930 = !DILocation(line: 98, column: 19, scope: !1906, inlinedAt: !1931)
!1931 = distinct !DILocation(line: 124, column: 5, scope: !1928)
!1932 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !1931)
!1933 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !1931)
!1934 = !DILocation(line: 124, column: 19, scope: !1928)
!1935 = !DILocation(line: 126, column: 3, scope: !1917)
!1936 = distinct !DISubprogram(name: "sha256_finish_ctx", scope: !274, file: !274, line: 158, type: !1937, isLocal: false, isDefinition: true, scopeLine: 159, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !1939)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{!60, !1856, !60}
!1939 = !{!1940, !1941}
!1940 = !DILocalVariable(name: "ctx", arg: 1, scope: !1936, file: !274, line: 158, type: !1856)
!1941 = !DILocalVariable(name: "resbuf", arg: 2, scope: !1936, file: !274, line: 158, type: !60)
!1942 = !DILocation(line: 158, column: 39, scope: !1936)
!1943 = !DILocation(line: 158, column: 50, scope: !1936)
!1944 = !DILocation(line: 160, column: 3, scope: !1936)
!1945 = !DILocation(line: 106, column: 43, scope: !1888, inlinedAt: !1946)
!1946 = distinct !DILocation(line: 161, column: 10, scope: !1936)
!1947 = !DILocation(line: 106, column: 54, scope: !1888, inlinedAt: !1946)
!1948 = !DILocation(line: 109, column: 9, scope: !1888, inlinedAt: !1946)
!1949 = !DILocation(line: 108, column: 7, scope: !1888, inlinedAt: !1946)
!1950 = !DILocation(line: 112, column: 47, scope: !1903, inlinedAt: !1946)
!1951 = !DILocation(line: 98, column: 19, scope: !1906, inlinedAt: !1952)
!1952 = distinct !DILocation(line: 112, column: 5, scope: !1903, inlinedAt: !1946)
!1953 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !1952)
!1954 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !1952)
!1955 = !DILocation(line: 112, column: 19, scope: !1903, inlinedAt: !1946)
!1956 = !DILocation(line: 161, column: 3, scope: !1936)
!1957 = distinct !DISubprogram(name: "sha256_conclude_ctx", scope: !274, file: !274, line: 132, type: !1854, isLocal: true, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !1958)
!1958 = !{!1959, !1960, !1961}
!1959 = !DILocalVariable(name: "ctx", arg: 1, scope: !1957, file: !274, line: 132, type: !1856)
!1960 = !DILocalVariable(name: "bytes", scope: !1957, file: !274, line: 135, type: !61)
!1961 = !DILocalVariable(name: "size", scope: !1957, file: !274, line: 136, type: !61)
!1962 = !DILocation(line: 132, column: 41, scope: !1957)
!1963 = !DILocation(line: 135, column: 23, scope: !1957)
!1964 = !{!1965, !1091, i64 40}
!1965 = !{!"sha256_ctx", !810, i64 0, !810, i64 32, !1091, i64 40, !810, i64 48}
!1966 = !DILocation(line: 135, column: 10, scope: !1957)
!1967 = !DILocation(line: 136, column: 24, scope: !1957)
!1968 = !DILocation(line: 136, column: 17, scope: !1957)
!1969 = !DILocation(line: 136, column: 10, scope: !1957)
!1970 = !DILocation(line: 139, column: 3, scope: !1957)
!1971 = !DILocation(line: 139, column: 17, scope: !1957)
!1972 = !DILocation(line: 140, column: 7, scope: !1973)
!1973 = distinct !DILexicalBlock(scope: !1957, file: !274, line: 140, column: 7)
!1974 = !DILocation(line: 140, column: 21, scope: !1973)
!1975 = !DILocation(line: 140, column: 7, scope: !1957)
!1976 = !DILocation(line: 141, column: 5, scope: !1973)
!1977 = !DILocation(line: 147, column: 15, scope: !1957)
!1978 = !DILocation(line: 146, column: 42, scope: !1957)
!1979 = !DILocation(line: 146, column: 25, scope: !1957)
!1980 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !1981)
!1981 = distinct !DILocation(line: 146, column: 3, scope: !1957)
!1982 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !1981)
!1983 = !DILocation(line: 148, column: 42, scope: !1957)
!1984 = !DILocation(line: 148, column: 25, scope: !1957)
!1985 = !DILocation(line: 149, column: 15, scope: !1957)
!1986 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !1987)
!1987 = distinct !DILocation(line: 148, column: 3, scope: !1957)
!1988 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !1987)
!1989 = !DILocation(line: 151, column: 12, scope: !1957)
!1990 = !DILocation(line: 151, column: 63, scope: !1957)
!1991 = !DILocation(line: 151, column: 67, scope: !1957)
!1992 = !DILocation(line: 151, column: 3, scope: !1957)
!1993 = !DILocation(line: 154, column: 43, scope: !1957)
!1994 = !DILocation(line: 154, column: 3, scope: !1957)
!1995 = !DILocation(line: 155, column: 1, scope: !1957)
!1996 = distinct !DISubprogram(name: "sha256_process_block", scope: !274, file: !274, line: 449, type: !1997, isLocal: false, isDefinition: true, scopeLine: 450, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !1999)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{null, !63, !61, !1856}
!1999 = !{!2000, !2001, !2002, !2003, !2005, !2006, !2007, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2020, !2021, !2022}
!2000 = !DILocalVariable(name: "buffer", arg: 1, scope: !1996, file: !274, line: 449, type: !63)
!2001 = !DILocalVariable(name: "len", arg: 2, scope: !1996, file: !274, line: 449, type: !61)
!2002 = !DILocalVariable(name: "ctx", arg: 3, scope: !1996, file: !274, line: 449, type: !1856)
!2003 = !DILocalVariable(name: "words", scope: !1996, file: !274, line: 451, type: !2004)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!2005 = !DILocalVariable(name: "nwords", scope: !1996, file: !274, line: 452, type: !61)
!2006 = !DILocalVariable(name: "endp", scope: !1996, file: !274, line: 453, type: !2004)
!2007 = !DILocalVariable(name: "x", scope: !1996, file: !274, line: 454, type: !2008)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 512, elements: !236)
!2009 = !DILocalVariable(name: "a", scope: !1996, file: !274, line: 455, type: !277)
!2010 = !DILocalVariable(name: "b", scope: !1996, file: !274, line: 456, type: !277)
!2011 = !DILocalVariable(name: "c", scope: !1996, file: !274, line: 457, type: !277)
!2012 = !DILocalVariable(name: "d", scope: !1996, file: !274, line: 458, type: !277)
!2013 = !DILocalVariable(name: "e", scope: !1996, file: !274, line: 459, type: !277)
!2014 = !DILocalVariable(name: "f", scope: !1996, file: !274, line: 460, type: !277)
!2015 = !DILocalVariable(name: "g", scope: !1996, file: !274, line: 461, type: !277)
!2016 = !DILocalVariable(name: "h", scope: !1996, file: !274, line: 462, type: !277)
!2017 = !DILocalVariable(name: "lolen", scope: !1996, file: !274, line: 463, type: !277)
!2018 = !DILocalVariable(name: "tm", scope: !2019, file: !274, line: 491, type: !277)
!2019 = distinct !DILexicalBlock(scope: !1996, file: !274, line: 490, column: 5)
!2020 = !DILocalVariable(name: "t0", scope: !2019, file: !274, line: 492, type: !277)
!2021 = !DILocalVariable(name: "t1", scope: !2019, file: !274, line: 492, type: !277)
!2022 = !DILocalVariable(name: "t", scope: !2019, file: !274, line: 493, type: !70)
!2023 = !DILocation(line: 449, column: 35, scope: !1996)
!2024 = !DILocation(line: 449, column: 50, scope: !1996)
!2025 = !DILocation(line: 449, column: 74, scope: !1996)
!2026 = !DILocation(line: 451, column: 27, scope: !1996)
!2027 = !DILocation(line: 451, column: 19, scope: !1996)
!2028 = !DILocation(line: 452, column: 23, scope: !1996)
!2029 = !DILocation(line: 452, column: 10, scope: !1996)
!2030 = !DILocation(line: 453, column: 32, scope: !1996)
!2031 = !DILocation(line: 453, column: 19, scope: !1996)
!2032 = !DILocation(line: 454, column: 3, scope: !1996)
!2033 = !DILocation(line: 454, column: 12, scope: !1996)
!2034 = !DILocation(line: 455, column: 16, scope: !1996)
!2035 = !DILocation(line: 455, column: 12, scope: !1996)
!2036 = !DILocation(line: 456, column: 16, scope: !1996)
!2037 = !DILocation(line: 456, column: 12, scope: !1996)
!2038 = !DILocation(line: 457, column: 16, scope: !1996)
!2039 = !DILocation(line: 457, column: 12, scope: !1996)
!2040 = !DILocation(line: 458, column: 16, scope: !1996)
!2041 = !DILocation(line: 458, column: 12, scope: !1996)
!2042 = !DILocation(line: 459, column: 16, scope: !1996)
!2043 = !DILocation(line: 459, column: 12, scope: !1996)
!2044 = !DILocation(line: 460, column: 16, scope: !1996)
!2045 = !DILocation(line: 460, column: 12, scope: !1996)
!2046 = !DILocation(line: 461, column: 16, scope: !1996)
!2047 = !DILocation(line: 461, column: 12, scope: !1996)
!2048 = !DILocation(line: 462, column: 16, scope: !1996)
!2049 = !DILocation(line: 462, column: 12, scope: !1996)
!2050 = !DILocation(line: 463, column: 20, scope: !1996)
!2051 = !DILocation(line: 463, column: 12, scope: !1996)
!2052 = !DILocation(line: 468, column: 3, scope: !1996)
!2053 = !DILocation(line: 468, column: 17, scope: !1996)
!2054 = !DILocation(line: 469, column: 25, scope: !1996)
!2055 = !DILocation(line: 469, column: 54, scope: !1996)
!2056 = !DILocation(line: 469, column: 39, scope: !1996)
!2057 = !DILocation(line: 469, column: 37, scope: !1996)
!2058 = !DILocation(line: 469, column: 3, scope: !1996)
!2059 = !DILocation(line: 469, column: 17, scope: !1996)
!2060 = !DILocation(line: 489, column: 16, scope: !2061)
!2061 = !DILexicalBlockFile(scope: !1996, file: !274, discriminator: 1)
!2062 = !DILocation(line: 489, column: 3, scope: !2061)
!2063 = !DILocation(line: 493, column: 11, scope: !2019)
!2064 = !DILocation(line: 497, column: 18, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !2066, file: !274, line: 496, column: 9)
!2066 = distinct !DILexicalBlock(scope: !2067, file: !274, line: 495, column: 7)
!2067 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 495, column: 7)
!2068 = !DILocation(line: 497, column: 16, scope: !2065)
!2069 = !DILocation(line: 498, column: 16, scope: !2065)
!2070 = !DILocation(line: 495, column: 7, scope: !2071)
!2071 = !DILexicalBlockFile(scope: !2067, file: !274, discriminator: 1)
!2072 = !DILocation(line: 501, column: 7, scope: !2073)
!2073 = !DILexicalBlockFile(scope: !2074, file: !274, discriminator: 1)
!2074 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 501, column: 7)
!2075 = !DILocation(line: 492, column: 16, scope: !2019)
!2076 = !DILocation(line: 492, column: 20, scope: !2019)
!2077 = !DILocation(line: 502, column: 7, scope: !2078)
!2078 = !DILexicalBlockFile(scope: !2079, file: !274, discriminator: 1)
!2079 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 502, column: 7)
!2080 = !DILocation(line: 503, column: 7, scope: !2081)
!2081 = !DILexicalBlockFile(scope: !2082, file: !274, discriminator: 1)
!2082 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 503, column: 7)
!2083 = !DILocation(line: 504, column: 7, scope: !2084)
!2084 = !DILexicalBlockFile(scope: !2085, file: !274, discriminator: 1)
!2085 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 504, column: 7)
!2086 = !DILocation(line: 505, column: 7, scope: !2087)
!2087 = !DILexicalBlockFile(scope: !2088, file: !274, discriminator: 1)
!2088 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 505, column: 7)
!2089 = !DILocation(line: 506, column: 7, scope: !2090)
!2090 = !DILexicalBlockFile(scope: !2091, file: !274, discriminator: 1)
!2091 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 506, column: 7)
!2092 = !DILocation(line: 507, column: 7, scope: !2093)
!2093 = !DILexicalBlockFile(scope: !2094, file: !274, discriminator: 1)
!2094 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 507, column: 7)
!2095 = !DILocation(line: 508, column: 7, scope: !2096)
!2096 = !DILexicalBlockFile(scope: !2097, file: !274, discriminator: 1)
!2097 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 508, column: 7)
!2098 = !DILocation(line: 509, column: 7, scope: !2099)
!2099 = !DILexicalBlockFile(scope: !2100, file: !274, discriminator: 1)
!2100 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 509, column: 7)
!2101 = !DILocation(line: 510, column: 7, scope: !2102)
!2102 = !DILexicalBlockFile(scope: !2103, file: !274, discriminator: 1)
!2103 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 510, column: 7)
!2104 = !DILocation(line: 511, column: 7, scope: !2105)
!2105 = !DILexicalBlockFile(scope: !2106, file: !274, discriminator: 1)
!2106 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 511, column: 7)
!2107 = !DILocation(line: 512, column: 7, scope: !2108)
!2108 = !DILexicalBlockFile(scope: !2109, file: !274, discriminator: 1)
!2109 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 512, column: 7)
!2110 = !DILocation(line: 513, column: 7, scope: !2111)
!2111 = !DILexicalBlockFile(scope: !2112, file: !274, discriminator: 1)
!2112 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 513, column: 7)
!2113 = !DILocation(line: 514, column: 7, scope: !2114)
!2114 = !DILexicalBlockFile(scope: !2115, file: !274, discriminator: 1)
!2115 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 514, column: 7)
!2116 = !DILocation(line: 515, column: 7, scope: !2117)
!2117 = !DILexicalBlockFile(scope: !2118, file: !274, discriminator: 1)
!2118 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 515, column: 7)
!2119 = !DILocation(line: 516, column: 7, scope: !2120)
!2120 = !DILexicalBlockFile(scope: !2121, file: !274, discriminator: 1)
!2121 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 516, column: 7)
!2122 = !DILocation(line: 517, column: 7, scope: !2123)
!2123 = !DILexicalBlockFile(scope: !2124, file: !274, discriminator: 1)
!2124 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 517, column: 7)
!2125 = !DILocation(line: 491, column: 16, scope: !2019)
!2126 = !DILocation(line: 518, column: 7, scope: !2127)
!2127 = !DILexicalBlockFile(scope: !2128, file: !274, discriminator: 1)
!2128 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 518, column: 7)
!2129 = !DILocation(line: 519, column: 7, scope: !2130)
!2130 = !DILexicalBlockFile(scope: !2131, file: !274, discriminator: 1)
!2131 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 519, column: 7)
!2132 = !DILocation(line: 520, column: 7, scope: !2133)
!2133 = !DILexicalBlockFile(scope: !2134, file: !274, discriminator: 1)
!2134 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 520, column: 7)
!2135 = !DILocation(line: 521, column: 7, scope: !2136)
!2136 = !DILexicalBlockFile(scope: !2137, file: !274, discriminator: 1)
!2137 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 521, column: 7)
!2138 = !DILocation(line: 522, column: 7, scope: !2139)
!2139 = !DILexicalBlockFile(scope: !2140, file: !274, discriminator: 1)
!2140 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 522, column: 7)
!2141 = !DILocation(line: 523, column: 7, scope: !2142)
!2142 = !DILexicalBlockFile(scope: !2143, file: !274, discriminator: 1)
!2143 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 523, column: 7)
!2144 = !DILocation(line: 524, column: 7, scope: !2145)
!2145 = !DILexicalBlockFile(scope: !2146, file: !274, discriminator: 1)
!2146 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 524, column: 7)
!2147 = !DILocation(line: 525, column: 7, scope: !2148)
!2148 = !DILexicalBlockFile(scope: !2149, file: !274, discriminator: 1)
!2149 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 525, column: 7)
!2150 = !DILocation(line: 526, column: 7, scope: !2151)
!2151 = !DILexicalBlockFile(scope: !2152, file: !274, discriminator: 1)
!2152 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 526, column: 7)
!2153 = !DILocation(line: 527, column: 7, scope: !2154)
!2154 = !DILexicalBlockFile(scope: !2155, file: !274, discriminator: 1)
!2155 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 527, column: 7)
!2156 = !DILocation(line: 528, column: 7, scope: !2157)
!2157 = !DILexicalBlockFile(scope: !2158, file: !274, discriminator: 1)
!2158 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 528, column: 7)
!2159 = !DILocation(line: 529, column: 7, scope: !2160)
!2160 = !DILexicalBlockFile(scope: !2161, file: !274, discriminator: 1)
!2161 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 529, column: 7)
!2162 = !DILocation(line: 530, column: 7, scope: !2163)
!2163 = !DILexicalBlockFile(scope: !2164, file: !274, discriminator: 1)
!2164 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 530, column: 7)
!2165 = !DILocation(line: 531, column: 7, scope: !2166)
!2166 = !DILexicalBlockFile(scope: !2167, file: !274, discriminator: 1)
!2167 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 531, column: 7)
!2168 = !DILocation(line: 532, column: 7, scope: !2169)
!2169 = !DILexicalBlockFile(scope: !2170, file: !274, discriminator: 1)
!2170 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 532, column: 7)
!2171 = !DILocation(line: 533, column: 7, scope: !2172)
!2172 = !DILexicalBlockFile(scope: !2173, file: !274, discriminator: 1)
!2173 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 533, column: 7)
!2174 = !DILocation(line: 534, column: 7, scope: !2175)
!2175 = !DILexicalBlockFile(scope: !2176, file: !274, discriminator: 1)
!2176 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 534, column: 7)
!2177 = !DILocation(line: 535, column: 7, scope: !2178)
!2178 = !DILexicalBlockFile(scope: !2179, file: !274, discriminator: 1)
!2179 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 535, column: 7)
!2180 = !DILocation(line: 536, column: 7, scope: !2181)
!2181 = !DILexicalBlockFile(scope: !2182, file: !274, discriminator: 1)
!2182 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 536, column: 7)
!2183 = !DILocation(line: 537, column: 7, scope: !2184)
!2184 = !DILexicalBlockFile(scope: !2185, file: !274, discriminator: 1)
!2185 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 537, column: 7)
!2186 = !DILocation(line: 538, column: 7, scope: !2187)
!2187 = !DILexicalBlockFile(scope: !2188, file: !274, discriminator: 1)
!2188 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 538, column: 7)
!2189 = !DILocation(line: 539, column: 7, scope: !2190)
!2190 = !DILexicalBlockFile(scope: !2191, file: !274, discriminator: 1)
!2191 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 539, column: 7)
!2192 = !DILocation(line: 540, column: 7, scope: !2193)
!2193 = !DILexicalBlockFile(scope: !2194, file: !274, discriminator: 1)
!2194 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 540, column: 7)
!2195 = !DILocation(line: 541, column: 7, scope: !2196)
!2196 = !DILexicalBlockFile(scope: !2197, file: !274, discriminator: 1)
!2197 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 541, column: 7)
!2198 = !DILocation(line: 542, column: 7, scope: !2199)
!2199 = !DILexicalBlockFile(scope: !2200, file: !274, discriminator: 1)
!2200 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 542, column: 7)
!2201 = !DILocation(line: 543, column: 7, scope: !2202)
!2202 = !DILexicalBlockFile(scope: !2203, file: !274, discriminator: 1)
!2203 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 543, column: 7)
!2204 = !DILocation(line: 544, column: 7, scope: !2205)
!2205 = !DILexicalBlockFile(scope: !2206, file: !274, discriminator: 1)
!2206 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 544, column: 7)
!2207 = !DILocation(line: 545, column: 7, scope: !2208)
!2208 = !DILexicalBlockFile(scope: !2209, file: !274, discriminator: 1)
!2209 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 545, column: 7)
!2210 = !DILocation(line: 546, column: 7, scope: !2211)
!2211 = !DILexicalBlockFile(scope: !2212, file: !274, discriminator: 1)
!2212 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 546, column: 7)
!2213 = !DILocation(line: 547, column: 7, scope: !2214)
!2214 = !DILexicalBlockFile(scope: !2215, file: !274, discriminator: 1)
!2215 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 547, column: 7)
!2216 = !DILocation(line: 548, column: 7, scope: !2217)
!2217 = !DILexicalBlockFile(scope: !2218, file: !274, discriminator: 1)
!2218 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 548, column: 7)
!2219 = !DILocation(line: 549, column: 7, scope: !2220)
!2220 = !DILexicalBlockFile(scope: !2221, file: !274, discriminator: 1)
!2221 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 549, column: 7)
!2222 = !DILocation(line: 550, column: 7, scope: !2223)
!2223 = !DILexicalBlockFile(scope: !2224, file: !274, discriminator: 1)
!2224 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 550, column: 7)
!2225 = !DILocation(line: 551, column: 7, scope: !2226)
!2226 = !DILexicalBlockFile(scope: !2227, file: !274, discriminator: 1)
!2227 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 551, column: 7)
!2228 = !DILocation(line: 552, column: 7, scope: !2229)
!2229 = !DILexicalBlockFile(scope: !2230, file: !274, discriminator: 1)
!2230 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 552, column: 7)
!2231 = !DILocation(line: 553, column: 7, scope: !2232)
!2232 = !DILexicalBlockFile(scope: !2233, file: !274, discriminator: 1)
!2233 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 553, column: 7)
!2234 = !DILocation(line: 554, column: 7, scope: !2235)
!2235 = !DILexicalBlockFile(scope: !2236, file: !274, discriminator: 1)
!2236 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 554, column: 7)
!2237 = !DILocation(line: 555, column: 7, scope: !2238)
!2238 = !DILexicalBlockFile(scope: !2239, file: !274, discriminator: 1)
!2239 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 555, column: 7)
!2240 = !DILocation(line: 556, column: 7, scope: !2241)
!2241 = !DILexicalBlockFile(scope: !2242, file: !274, discriminator: 1)
!2242 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 556, column: 7)
!2243 = !DILocation(line: 557, column: 7, scope: !2244)
!2244 = !DILexicalBlockFile(scope: !2245, file: !274, discriminator: 1)
!2245 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 557, column: 7)
!2246 = !DILocation(line: 558, column: 7, scope: !2247)
!2247 = !DILexicalBlockFile(scope: !2248, file: !274, discriminator: 1)
!2248 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 558, column: 7)
!2249 = !DILocation(line: 559, column: 7, scope: !2250)
!2250 = !DILexicalBlockFile(scope: !2251, file: !274, discriminator: 1)
!2251 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 559, column: 7)
!2252 = !DILocation(line: 560, column: 7, scope: !2253)
!2253 = !DILexicalBlockFile(scope: !2254, file: !274, discriminator: 1)
!2254 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 560, column: 7)
!2255 = !DILocation(line: 561, column: 7, scope: !2256)
!2256 = !DILexicalBlockFile(scope: !2257, file: !274, discriminator: 1)
!2257 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 561, column: 7)
!2258 = !DILocation(line: 562, column: 7, scope: !2259)
!2259 = !DILexicalBlockFile(scope: !2260, file: !274, discriminator: 1)
!2260 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 562, column: 7)
!2261 = !DILocation(line: 563, column: 7, scope: !2262)
!2262 = !DILexicalBlockFile(scope: !2263, file: !274, discriminator: 1)
!2263 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 563, column: 7)
!2264 = !DILocation(line: 564, column: 7, scope: !2265)
!2265 = !DILexicalBlockFile(scope: !2266, file: !274, discriminator: 1)
!2266 = distinct !DILexicalBlock(scope: !2019, file: !274, line: 564, column: 7)
!2267 = !DILocation(line: 566, column: 25, scope: !2019)
!2268 = !DILocation(line: 567, column: 25, scope: !2019)
!2269 = !DILocation(line: 568, column: 25, scope: !2019)
!2270 = !DILocation(line: 569, column: 25, scope: !2019)
!2271 = !DILocation(line: 570, column: 25, scope: !2019)
!2272 = !DILocation(line: 571, column: 25, scope: !2019)
!2273 = !DILocation(line: 572, column: 25, scope: !2019)
!2274 = !DILocation(line: 573, column: 25, scope: !2019)
!2275 = distinct !{!2275, !2276, !2277}
!2276 = !DILocation(line: 489, column: 3, scope: !1996)
!2277 = !DILocation(line: 574, column: 5, scope: !1996)
!2278 = !DILocation(line: 575, column: 1, scope: !1996)
!2279 = distinct !DISubprogram(name: "sha224_finish_ctx", scope: !274, file: !274, line: 165, type: !1937, isLocal: false, isDefinition: true, scopeLine: 166, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !2280)
!2280 = !{!2281, !2282}
!2281 = !DILocalVariable(name: "ctx", arg: 1, scope: !2279, file: !274, line: 165, type: !1856)
!2282 = !DILocalVariable(name: "resbuf", arg: 2, scope: !2279, file: !274, line: 165, type: !60)
!2283 = !DILocation(line: 165, column: 39, scope: !2279)
!2284 = !DILocation(line: 165, column: 50, scope: !2279)
!2285 = !DILocation(line: 167, column: 3, scope: !2279)
!2286 = !DILocation(line: 118, column: 43, scope: !1917, inlinedAt: !2287)
!2287 = distinct !DILocation(line: 168, column: 10, scope: !2279)
!2288 = !DILocation(line: 118, column: 54, scope: !1917, inlinedAt: !2287)
!2289 = !DILocation(line: 121, column: 9, scope: !1917, inlinedAt: !2287)
!2290 = !DILocation(line: 120, column: 7, scope: !1917, inlinedAt: !2287)
!2291 = !DILocation(line: 124, column: 47, scope: !1928, inlinedAt: !2287)
!2292 = !DILocation(line: 98, column: 19, scope: !1906, inlinedAt: !2293)
!2293 = distinct !DILocation(line: 124, column: 5, scope: !1928, inlinedAt: !2287)
!2294 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !2293)
!2295 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !2293)
!2296 = !DILocation(line: 124, column: 19, scope: !1928, inlinedAt: !2287)
!2297 = !DILocation(line: 168, column: 3, scope: !2279)
!2298 = distinct !DISubprogram(name: "sha256_stream", scope: !274, file: !274, line: 176, type: !2299, isLocal: false, isDefinition: true, scopeLine: 177, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !2341)
!2299 = !DISubroutineType(types: !2300)
!2300 = !{!70, !2301, !60}
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !2303)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2303, file: !132, line: 242, baseType: !70, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2303, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2303, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2303, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2303, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2303, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2303, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2303, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2303, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2303, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2303, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2303, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2303, file: !132, line: 260, baseType: !2318, size: 64, offset: 768)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !2320)
!2320 = !{!2321, !2322, !2324}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2319, file: !132, line: 157, baseType: !2318, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2319, file: !132, line: 158, baseType: !2323, size: 64, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2319, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2303, file: !132, line: 262, baseType: !2323, size: 64, offset: 832)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2303, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2303, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2303, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2303, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2303, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2303, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2303, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2303, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2303, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2303, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2303, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2303, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2303, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2303, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2303, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347}
!2342 = !DILocalVariable(name: "stream", arg: 1, scope: !2298, file: !274, line: 176, type: !2301)
!2343 = !DILocalVariable(name: "resblock", arg: 2, scope: !2298, file: !274, line: 176, type: !60)
!2344 = !DILocalVariable(name: "ctx", scope: !2298, file: !274, line: 178, type: !1857)
!2345 = !DILocalVariable(name: "sum", scope: !2298, file: !274, line: 179, type: !61)
!2346 = !DILocalVariable(name: "buffer", scope: !2298, file: !274, line: 181, type: !58)
!2347 = !DILocalVariable(name: "n", scope: !2348, file: !274, line: 194, type: !61)
!2348 = distinct !DILexicalBlock(scope: !2298, file: !274, line: 190, column: 5)
!2349 = !DILocation(line: 176, column: 22, scope: !2298)
!2350 = !DILocation(line: 176, column: 36, scope: !2298)
!2351 = !DILocation(line: 178, column: 3, scope: !2298)
!2352 = !DILocation(line: 181, column: 18, scope: !2298)
!2353 = !DILocation(line: 181, column: 9, scope: !2298)
!2354 = !DILocation(line: 182, column: 8, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2298, file: !274, line: 182, column: 7)
!2356 = !DILocation(line: 182, column: 7, scope: !2298)
!2357 = !DILocation(line: 178, column: 21, scope: !2298)
!2358 = !DILocation(line: 63, column: 37, scope: !1853, inlinedAt: !2359)
!2359 = distinct !DILocation(line: 186, column: 3, scope: !2298)
!2360 = !DILocation(line: 65, column: 17, scope: !1853, inlinedAt: !2359)
!2361 = !DILocation(line: 69, column: 3, scope: !1853, inlinedAt: !2359)
!2362 = !DILocation(line: 69, column: 17, scope: !1853, inlinedAt: !2359)
!2363 = !DILocation(line: 74, column: 3, scope: !1853, inlinedAt: !2359)
!2364 = !DILocation(line: 76, column: 1, scope: !1853, inlinedAt: !2359)
!2365 = !DILocation(line: 74, column: 17, scope: !1853, inlinedAt: !2359)
!2366 = !DILocation(line: 189, column: 3, scope: !2298)
!2367 = !DILocation(line: 179, column: 10, scope: !2298)
!2368 = !DILocation(line: 198, column: 7, scope: !2348)
!2369 = !DILocation(line: 200, column: 15, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2348, file: !274, line: 199, column: 9)
!2371 = !DILocation(line: 194, column: 14, scope: !2348)
!2372 = !DILocation(line: 202, column: 15, scope: !2370)
!2373 = !DILocation(line: 204, column: 19, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2370, file: !274, line: 204, column: 15)
!2375 = !DILocation(line: 204, column: 15, scope: !2370)
!2376 = !DILocation(line: 207, column: 17, scope: !2377)
!2377 = distinct !DILexicalBlock(scope: !2370, file: !274, line: 207, column: 15)
!2378 = !DILocation(line: 207, column: 15, scope: !2370)
!2379 = !DILocalVariable(name: "__stream", arg: 1, scope: !2380, file: !1108, line: 132, type: !2301)
!2380 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1108, file: !1108, line: 132, type: !2381, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !2383)
!2381 = !DISubroutineType(types: !2382)
!2382 = !{!70, !2301}
!2383 = !{!2379}
!2384 = !DILocation(line: 132, column: 1, scope: !2380, inlinedAt: !2385)
!2385 = distinct !DILocation(line: 212, column: 19, scope: !2386)
!2386 = distinct !DILexicalBlock(scope: !2387, file: !274, line: 212, column: 19)
!2387 = distinct !DILexicalBlock(scope: !2377, file: !274, line: 208, column: 13)
!2388 = !DILocation(line: 134, column: 10, scope: !2380, inlinedAt: !2385)
!2389 = !DILocation(line: 212, column: 19, scope: !2386)
!2390 = !DILocation(line: 212, column: 19, scope: !2387)
!2391 = !DILocation(line: 214, column: 19, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2386, file: !274, line: 213, column: 17)
!2393 = !DILocalVariable(name: "__stream", arg: 1, scope: !2394, file: !1108, line: 125, type: !2301)
!2394 = distinct !DISubprogram(name: "feof_unlocked", scope: !1108, file: !1108, line: 125, type: !2381, isLocal: false, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !2395)
!2395 = !{!2393}
!2396 = !DILocation(line: 125, column: 1, scope: !2394, inlinedAt: !2397)
!2397 = distinct !DILocation(line: 223, column: 15, scope: !2398)
!2398 = distinct !DILexicalBlock(scope: !2370, file: !274, line: 223, column: 15)
!2399 = !DILocation(line: 127, column: 10, scope: !2394, inlinedAt: !2397)
!2400 = !DILocation(line: 223, column: 15, scope: !2398)
!2401 = !DILocation(line: 223, column: 15, scope: !2370)
!2402 = distinct !{!2402, !2368, !2403}
!2403 = !DILocation(line: 225, column: 9, scope: !2348)
!2404 = !DILocation(line: 230, column: 7, scope: !2348)
!2405 = !DILocation(line: 236, column: 11, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2298, file: !274, line: 236, column: 7)
!2407 = !DILocation(line: 236, column: 7, scope: !2298)
!2408 = !DILocation(line: 237, column: 5, scope: !2406)
!2409 = !DILocation(line: 158, column: 39, scope: !1936, inlinedAt: !2410)
!2410 = distinct !DILocation(line: 240, column: 3, scope: !2298)
!2411 = !DILocation(line: 158, column: 50, scope: !1936, inlinedAt: !2410)
!2412 = !DILocation(line: 160, column: 3, scope: !1936, inlinedAt: !2410)
!2413 = !DILocation(line: 106, column: 43, scope: !1888, inlinedAt: !2414)
!2414 = distinct !DILocation(line: 161, column: 10, scope: !1936, inlinedAt: !2410)
!2415 = !DILocation(line: 106, column: 54, scope: !1888, inlinedAt: !2414)
!2416 = !DILocation(line: 109, column: 9, scope: !1888, inlinedAt: !2414)
!2417 = !DILocation(line: 108, column: 7, scope: !1888, inlinedAt: !2414)
!2418 = !DILocation(line: 98, column: 19, scope: !1906, inlinedAt: !2419)
!2419 = distinct !DILocation(line: 112, column: 5, scope: !1903, inlinedAt: !2414)
!2420 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !2419)
!2421 = !DILocation(line: 112, column: 47, scope: !1903, inlinedAt: !2414)
!2422 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !2419)
!2423 = !DILocation(line: 112, column: 19, scope: !1903, inlinedAt: !2414)
!2424 = !DILocation(line: 241, column: 3, scope: !2298)
!2425 = !DILocation(line: 242, column: 3, scope: !2298)
!2426 = !DILocation(line: 243, column: 1, scope: !2298)
!2427 = distinct !DISubprogram(name: "sha256_process_bytes", scope: !274, file: !274, line: 352, type: !1997, isLocal: false, isDefinition: true, scopeLine: 353, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2435, !2436}
!2429 = !DILocalVariable(name: "buffer", arg: 1, scope: !2427, file: !274, line: 352, type: !63)
!2430 = !DILocalVariable(name: "len", arg: 2, scope: !2427, file: !274, line: 352, type: !61)
!2431 = !DILocalVariable(name: "ctx", arg: 3, scope: !2427, file: !274, line: 352, type: !1856)
!2432 = !DILocalVariable(name: "left_over", scope: !2433, file: !274, line: 358, type: !61)
!2433 = distinct !DILexicalBlock(scope: !2434, file: !274, line: 357, column: 5)
!2434 = distinct !DILexicalBlock(scope: !2427, file: !274, line: 356, column: 7)
!2435 = !DILocalVariable(name: "add", scope: !2433, file: !274, line: 359, type: !61)
!2436 = !DILocalVariable(name: "left_over", scope: !2437, file: !274, line: 403, type: !61)
!2437 = distinct !DILexicalBlock(scope: !2438, file: !274, line: 402, column: 5)
!2438 = distinct !DILexicalBlock(scope: !2427, file: !274, line: 401, column: 7)
!2439 = !DILocation(line: 352, column: 35, scope: !2427)
!2440 = !DILocation(line: 352, column: 50, scope: !2427)
!2441 = !DILocation(line: 352, column: 74, scope: !2427)
!2442 = !DILocation(line: 356, column: 12, scope: !2434)
!2443 = !DILocation(line: 356, column: 19, scope: !2434)
!2444 = !DILocation(line: 356, column: 7, scope: !2427)
!2445 = !DILocation(line: 358, column: 14, scope: !2433)
!2446 = !DILocation(line: 359, column: 24, scope: !2433)
!2447 = !DILocation(line: 359, column: 36, scope: !2433)
!2448 = !DILocation(line: 359, column: 20, scope: !2433)
!2449 = !DILocation(line: 359, column: 14, scope: !2433)
!2450 = !DILocation(line: 361, column: 16, scope: !2433)
!2451 = !DILocation(line: 361, column: 7, scope: !2433)
!2452 = !DILocation(line: 362, column: 19, scope: !2433)
!2453 = !DILocation(line: 364, column: 23, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2433, file: !274, line: 364, column: 11)
!2455 = !DILocation(line: 364, column: 11, scope: !2433)
!2456 = !DILocation(line: 366, column: 58, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2454, file: !274, line: 365, column: 9)
!2458 = !DILocation(line: 366, column: 11, scope: !2457)
!2459 = !DILocation(line: 368, column: 23, scope: !2457)
!2460 = !DILocation(line: 371, column: 54, scope: !2457)
!2461 = !DILocation(line: 371, column: 61, scope: !2457)
!2462 = !DILocation(line: 371, column: 20, scope: !2457)
!2463 = !DILocation(line: 370, column: 11, scope: !2457)
!2464 = !DILocation(line: 373, column: 9, scope: !2457)
!2465 = !DILocation(line: 375, column: 38, scope: !2433)
!2466 = !DILocation(line: 376, column: 11, scope: !2433)
!2467 = !DILocation(line: 377, column: 5, scope: !2433)
!2468 = !DILocation(line: 380, column: 11, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2427, file: !274, line: 380, column: 7)
!2470 = !DILocation(line: 380, column: 7, scope: !2427)
!2471 = !DILocation(line: 394, column: 45, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2473, file: !274, line: 393, column: 9)
!2473 = distinct !DILexicalBlock(scope: !2469, file: !274, line: 381, column: 5)
!2474 = !DILocation(line: 394, column: 11, scope: !2472)
!2475 = !DILocation(line: 395, column: 42, scope: !2472)
!2476 = !DILocation(line: 396, column: 15, scope: !2472)
!2477 = !DILocation(line: 398, column: 5, scope: !2473)
!2478 = !DILocation(line: 401, column: 11, scope: !2438)
!2479 = !DILocation(line: 401, column: 7, scope: !2427)
!2480 = !DILocation(line: 403, column: 31, scope: !2437)
!2481 = !DILocation(line: 403, column: 14, scope: !2437)
!2482 = !DILocation(line: 405, column: 31, scope: !2437)
!2483 = !DILocation(line: 405, column: 16, scope: !2437)
!2484 = !DILocation(line: 405, column: 7, scope: !2437)
!2485 = !DILocation(line: 406, column: 17, scope: !2437)
!2486 = !DILocation(line: 407, column: 21, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2437, file: !274, line: 407, column: 11)
!2488 = !DILocation(line: 407, column: 11, scope: !2437)
!2489 = !DILocation(line: 409, column: 11, scope: !2490)
!2490 = distinct !DILexicalBlock(scope: !2487, file: !274, line: 408, column: 9)
!2491 = !DILocation(line: 410, column: 21, scope: !2490)
!2492 = !DILocation(line: 411, column: 33, scope: !2490)
!2493 = !DILocation(line: 411, column: 11, scope: !2490)
!2494 = !DILocation(line: 412, column: 9, scope: !2490)
!2495 = !DILocation(line: 413, column: 19, scope: !2437)
!2496 = !DILocation(line: 414, column: 5, scope: !2437)
!2497 = !DILocation(line: 415, column: 1, scope: !2427)
!2498 = distinct !DISubprogram(name: "sha224_stream", scope: !274, file: !274, line: 247, type: !2299, isLocal: false, isDefinition: true, scopeLine: 248, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !2499)
!2499 = !{!2500, !2501, !2502, !2503, !2504, !2505}
!2500 = !DILocalVariable(name: "stream", arg: 1, scope: !2498, file: !274, line: 247, type: !2301)
!2501 = !DILocalVariable(name: "resblock", arg: 2, scope: !2498, file: !274, line: 247, type: !60)
!2502 = !DILocalVariable(name: "ctx", scope: !2498, file: !274, line: 249, type: !1857)
!2503 = !DILocalVariable(name: "sum", scope: !2498, file: !274, line: 250, type: !61)
!2504 = !DILocalVariable(name: "buffer", scope: !2498, file: !274, line: 252, type: !58)
!2505 = !DILocalVariable(name: "n", scope: !2506, file: !274, line: 265, type: !61)
!2506 = distinct !DILexicalBlock(scope: !2498, file: !274, line: 261, column: 5)
!2507 = !DILocation(line: 247, column: 22, scope: !2498)
!2508 = !DILocation(line: 247, column: 36, scope: !2498)
!2509 = !DILocation(line: 249, column: 3, scope: !2498)
!2510 = !DILocation(line: 252, column: 18, scope: !2498)
!2511 = !DILocation(line: 252, column: 9, scope: !2498)
!2512 = !DILocation(line: 253, column: 8, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2498, file: !274, line: 253, column: 7)
!2514 = !DILocation(line: 253, column: 7, scope: !2498)
!2515 = !DILocation(line: 249, column: 21, scope: !2498)
!2516 = !DILocation(line: 79, column: 37, scope: !1878, inlinedAt: !2517)
!2517 = distinct !DILocation(line: 257, column: 3, scope: !2498)
!2518 = !DILocation(line: 81, column: 17, scope: !1878, inlinedAt: !2517)
!2519 = !DILocation(line: 85, column: 3, scope: !1878, inlinedAt: !2517)
!2520 = !DILocation(line: 86, column: 3, scope: !1878, inlinedAt: !2517)
!2521 = !DILocation(line: 87, column: 3, scope: !1878, inlinedAt: !2517)
!2522 = !DILocation(line: 85, column: 17, scope: !1878, inlinedAt: !2517)
!2523 = !DILocation(line: 90, column: 3, scope: !1878, inlinedAt: !2517)
!2524 = !DILocation(line: 92, column: 1, scope: !1878, inlinedAt: !2517)
!2525 = !DILocation(line: 90, column: 17, scope: !1878, inlinedAt: !2517)
!2526 = !DILocation(line: 260, column: 3, scope: !2498)
!2527 = !DILocation(line: 250, column: 10, scope: !2498)
!2528 = !DILocation(line: 269, column: 7, scope: !2506)
!2529 = !DILocation(line: 271, column: 15, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2506, file: !274, line: 270, column: 9)
!2531 = !DILocation(line: 265, column: 14, scope: !2506)
!2532 = !DILocation(line: 273, column: 15, scope: !2530)
!2533 = !DILocation(line: 275, column: 19, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2530, file: !274, line: 275, column: 15)
!2535 = !DILocation(line: 275, column: 15, scope: !2530)
!2536 = !DILocation(line: 278, column: 17, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2530, file: !274, line: 278, column: 15)
!2538 = !DILocation(line: 278, column: 15, scope: !2530)
!2539 = !DILocation(line: 132, column: 1, scope: !2380, inlinedAt: !2540)
!2540 = distinct !DILocation(line: 283, column: 19, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2542, file: !274, line: 283, column: 19)
!2542 = distinct !DILexicalBlock(scope: !2537, file: !274, line: 279, column: 13)
!2543 = !DILocation(line: 134, column: 10, scope: !2380, inlinedAt: !2540)
!2544 = !DILocation(line: 283, column: 19, scope: !2541)
!2545 = !DILocation(line: 283, column: 19, scope: !2542)
!2546 = !DILocation(line: 285, column: 19, scope: !2547)
!2547 = distinct !DILexicalBlock(scope: !2541, file: !274, line: 284, column: 17)
!2548 = !DILocation(line: 125, column: 1, scope: !2394, inlinedAt: !2549)
!2549 = distinct !DILocation(line: 294, column: 15, scope: !2550)
!2550 = distinct !DILexicalBlock(scope: !2530, file: !274, line: 294, column: 15)
!2551 = !DILocation(line: 127, column: 10, scope: !2394, inlinedAt: !2549)
!2552 = !DILocation(line: 294, column: 15, scope: !2550)
!2553 = !DILocation(line: 294, column: 15, scope: !2530)
!2554 = distinct !{!2554, !2528, !2555}
!2555 = !DILocation(line: 296, column: 9, scope: !2506)
!2556 = !DILocation(line: 301, column: 7, scope: !2506)
!2557 = !DILocation(line: 307, column: 11, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2498, file: !274, line: 307, column: 7)
!2559 = !DILocation(line: 307, column: 7, scope: !2498)
!2560 = !DILocation(line: 308, column: 5, scope: !2558)
!2561 = !DILocation(line: 165, column: 39, scope: !2279, inlinedAt: !2562)
!2562 = distinct !DILocation(line: 311, column: 3, scope: !2498)
!2563 = !DILocation(line: 165, column: 50, scope: !2279, inlinedAt: !2562)
!2564 = !DILocation(line: 167, column: 3, scope: !2279, inlinedAt: !2562)
!2565 = !DILocation(line: 118, column: 43, scope: !1917, inlinedAt: !2566)
!2566 = distinct !DILocation(line: 168, column: 10, scope: !2279, inlinedAt: !2562)
!2567 = !DILocation(line: 118, column: 54, scope: !1917, inlinedAt: !2566)
!2568 = !DILocation(line: 121, column: 9, scope: !1917, inlinedAt: !2566)
!2569 = !DILocation(line: 120, column: 7, scope: !1917, inlinedAt: !2566)
!2570 = !DILocation(line: 98, column: 19, scope: !1906, inlinedAt: !2571)
!2571 = distinct !DILocation(line: 124, column: 5, scope: !1928, inlinedAt: !2566)
!2572 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !2571)
!2573 = !DILocation(line: 124, column: 47, scope: !1928, inlinedAt: !2566)
!2574 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !2571)
!2575 = !DILocation(line: 124, column: 19, scope: !1928, inlinedAt: !2566)
!2576 = !DILocation(line: 312, column: 3, scope: !2498)
!2577 = !DILocation(line: 313, column: 3, scope: !2498)
!2578 = !DILocation(line: 314, column: 1, scope: !2498)
!2579 = distinct !DISubprogram(name: "sha256_buffer", scope: !274, file: !274, line: 322, type: !2580, isLocal: false, isDefinition: true, scopeLine: 323, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !2582)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!60, !68, !61, !60}
!2582 = !{!2583, !2584, !2585, !2586}
!2583 = !DILocalVariable(name: "buffer", arg: 1, scope: !2579, file: !274, line: 322, type: !68)
!2584 = !DILocalVariable(name: "len", arg: 2, scope: !2579, file: !274, line: 322, type: !61)
!2585 = !DILocalVariable(name: "resblock", arg: 3, scope: !2579, file: !274, line: 322, type: !60)
!2586 = !DILocalVariable(name: "ctx", scope: !2579, file: !274, line: 324, type: !1857)
!2587 = !DILocation(line: 322, column: 28, scope: !2579)
!2588 = !DILocation(line: 322, column: 43, scope: !2579)
!2589 = !DILocation(line: 322, column: 54, scope: !2579)
!2590 = !DILocation(line: 324, column: 3, scope: !2579)
!2591 = !DILocation(line: 324, column: 21, scope: !2579)
!2592 = !DILocation(line: 63, column: 37, scope: !1853, inlinedAt: !2593)
!2593 = distinct !DILocation(line: 327, column: 3, scope: !2579)
!2594 = !DILocation(line: 65, column: 17, scope: !1853, inlinedAt: !2593)
!2595 = !DILocation(line: 69, column: 3, scope: !1853, inlinedAt: !2593)
!2596 = !DILocation(line: 69, column: 17, scope: !1853, inlinedAt: !2593)
!2597 = !DILocation(line: 74, column: 3, scope: !1853, inlinedAt: !2593)
!2598 = !DILocation(line: 76, column: 1, scope: !1853, inlinedAt: !2593)
!2599 = !DILocation(line: 74, column: 17, scope: !1853, inlinedAt: !2593)
!2600 = !DILocation(line: 330, column: 3, scope: !2579)
!2601 = !DILocation(line: 158, column: 39, scope: !1936, inlinedAt: !2602)
!2602 = distinct !DILocation(line: 333, column: 10, scope: !2579)
!2603 = !DILocation(line: 158, column: 50, scope: !1936, inlinedAt: !2602)
!2604 = !DILocation(line: 160, column: 3, scope: !1936, inlinedAt: !2602)
!2605 = !DILocation(line: 106, column: 43, scope: !1888, inlinedAt: !2606)
!2606 = distinct !DILocation(line: 161, column: 10, scope: !1936, inlinedAt: !2602)
!2607 = !DILocation(line: 106, column: 54, scope: !1888, inlinedAt: !2606)
!2608 = !DILocation(line: 109, column: 9, scope: !1888, inlinedAt: !2606)
!2609 = !DILocation(line: 108, column: 7, scope: !1888, inlinedAt: !2606)
!2610 = !DILocation(line: 98, column: 19, scope: !1906, inlinedAt: !2611)
!2611 = distinct !DILocation(line: 112, column: 5, scope: !1903, inlinedAt: !2606)
!2612 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !2611)
!2613 = !DILocation(line: 112, column: 47, scope: !1903, inlinedAt: !2606)
!2614 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !2611)
!2615 = !DILocation(line: 112, column: 19, scope: !1903, inlinedAt: !2606)
!2616 = !DILocation(line: 334, column: 1, scope: !2579)
!2617 = !DILocation(line: 333, column: 3, scope: !2579)
!2618 = distinct !DISubprogram(name: "sha224_buffer", scope: !274, file: !274, line: 337, type: !2580, isLocal: false, isDefinition: true, scopeLine: 338, flags: DIFlagPrototyped, isOptimized: true, unit: !268, variables: !2619)
!2619 = !{!2620, !2621, !2622, !2623}
!2620 = !DILocalVariable(name: "buffer", arg: 1, scope: !2618, file: !274, line: 337, type: !68)
!2621 = !DILocalVariable(name: "len", arg: 2, scope: !2618, file: !274, line: 337, type: !61)
!2622 = !DILocalVariable(name: "resblock", arg: 3, scope: !2618, file: !274, line: 337, type: !60)
!2623 = !DILocalVariable(name: "ctx", scope: !2618, file: !274, line: 339, type: !1857)
!2624 = !DILocation(line: 337, column: 28, scope: !2618)
!2625 = !DILocation(line: 337, column: 43, scope: !2618)
!2626 = !DILocation(line: 337, column: 54, scope: !2618)
!2627 = !DILocation(line: 339, column: 3, scope: !2618)
!2628 = !DILocation(line: 339, column: 21, scope: !2618)
!2629 = !DILocation(line: 79, column: 37, scope: !1878, inlinedAt: !2630)
!2630 = distinct !DILocation(line: 342, column: 3, scope: !2618)
!2631 = !DILocation(line: 81, column: 17, scope: !1878, inlinedAt: !2630)
!2632 = !DILocation(line: 85, column: 3, scope: !1878, inlinedAt: !2630)
!2633 = !DILocation(line: 86, column: 3, scope: !1878, inlinedAt: !2630)
!2634 = !DILocation(line: 87, column: 3, scope: !1878, inlinedAt: !2630)
!2635 = !DILocation(line: 85, column: 17, scope: !1878, inlinedAt: !2630)
!2636 = !DILocation(line: 90, column: 3, scope: !1878, inlinedAt: !2630)
!2637 = !DILocation(line: 92, column: 1, scope: !1878, inlinedAt: !2630)
!2638 = !DILocation(line: 90, column: 17, scope: !1878, inlinedAt: !2630)
!2639 = !DILocation(line: 345, column: 3, scope: !2618)
!2640 = !DILocation(line: 165, column: 39, scope: !2279, inlinedAt: !2641)
!2641 = distinct !DILocation(line: 348, column: 10, scope: !2618)
!2642 = !DILocation(line: 165, column: 50, scope: !2279, inlinedAt: !2641)
!2643 = !DILocation(line: 167, column: 3, scope: !2279, inlinedAt: !2641)
!2644 = !DILocation(line: 118, column: 43, scope: !1917, inlinedAt: !2645)
!2645 = distinct !DILocation(line: 168, column: 10, scope: !2279, inlinedAt: !2641)
!2646 = !DILocation(line: 118, column: 54, scope: !1917, inlinedAt: !2645)
!2647 = !DILocation(line: 121, column: 9, scope: !1917, inlinedAt: !2645)
!2648 = !DILocation(line: 120, column: 7, scope: !1917, inlinedAt: !2645)
!2649 = !DILocation(line: 98, column: 19, scope: !1906, inlinedAt: !2650)
!2650 = distinct !DILocation(line: 124, column: 5, scope: !1928, inlinedAt: !2645)
!2651 = !DILocation(line: 98, column: 32, scope: !1906, inlinedAt: !2650)
!2652 = !DILocation(line: 124, column: 47, scope: !1928, inlinedAt: !2645)
!2653 = !DILocation(line: 100, column: 3, scope: !1906, inlinedAt: !2650)
!2654 = !DILocation(line: 124, column: 19, scope: !1928, inlinedAt: !2645)
!2655 = !DILocation(line: 349, column: 1, scope: !2618)
!2656 = !DILocation(line: 348, column: 3, scope: !2618)
!2657 = distinct !DISubprogram(name: "fdadvise", scope: !2658, file: !2658, line: 31, type: !2659, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: true, unit: !740, variables: !2663)
!2658 = !DIFile(filename: "lib/fadvise.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!2659 = !DISubroutineType(types: !2660)
!2660 = !{null, !70, !2661, !2661, !2662}
!2661 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !130, line: 91, baseType: !158)
!2662 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !49, line: 52, baseType: !48)
!2663 = !{!2664, !2665, !2666, !2667, !2668}
!2664 = !DILocalVariable(name: "fd", arg: 1, scope: !2657, file: !2658, line: 31, type: !70)
!2665 = !DILocalVariable(name: "offset", arg: 2, scope: !2657, file: !2658, line: 31, type: !2661)
!2666 = !DILocalVariable(name: "len", arg: 3, scope: !2657, file: !2658, line: 31, type: !2661)
!2667 = !DILocalVariable(name: "advice", arg: 4, scope: !2657, file: !2658, line: 31, type: !2662)
!2668 = !DILocalVariable(name: "__x", scope: !2669, file: !2658, line: 34, type: !70)
!2669 = distinct !DILexicalBlock(scope: !2657, file: !2658, line: 34, column: 3)
!2670 = !DILocation(line: 31, column: 15, scope: !2657)
!2671 = !DILocation(line: 31, column: 25, scope: !2657)
!2672 = !DILocation(line: 31, column: 39, scope: !2657)
!2673 = !DILocation(line: 31, column: 54, scope: !2657)
!2674 = !DILocation(line: 34, column: 3, scope: !2669)
!2675 = !DILocation(line: 36, column: 1, scope: !2657)
!2676 = distinct !DISubprogram(name: "fadvise", scope: !2658, file: !2658, line: 39, type: !2677, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: true, unit: !740, variables: !2719)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{null, !2679, !2662}
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !2681)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !2682)
!2682 = !{!2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2681, file: !132, line: 242, baseType: !70, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2681, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2681, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2681, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2681, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2681, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2681, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2681, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2681, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2681, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2681, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2681, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2681, file: !132, line: 260, baseType: !2696, size: 64, offset: 768)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !2698)
!2698 = !{!2699, !2700, !2702}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2697, file: !132, line: 157, baseType: !2696, size: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2697, file: !132, line: 158, baseType: !2701, size: 64, offset: 64)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2697, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2681, file: !132, line: 262, baseType: !2701, size: 64, offset: 832)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2681, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2681, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2681, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2681, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2681, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2681, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2681, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2681, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2681, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2681, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2681, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2681, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2681, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2681, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2681, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!2719 = !{!2720, !2721}
!2720 = !DILocalVariable(name: "fp", arg: 1, scope: !2676, file: !2658, line: 39, type: !2679)
!2721 = !DILocalVariable(name: "advice", arg: 2, scope: !2676, file: !2658, line: 39, type: !2662)
!2722 = !DILocation(line: 39, column: 16, scope: !2676)
!2723 = !DILocation(line: 39, column: 30, scope: !2676)
!2724 = !DILocation(line: 41, column: 7, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2676, file: !2658, line: 41, column: 7)
!2726 = !DILocation(line: 41, column: 7, scope: !2676)
!2727 = !DILocation(line: 42, column: 15, scope: !2725)
!2728 = !DILocation(line: 31, column: 15, scope: !2657, inlinedAt: !2729)
!2729 = distinct !DILocation(line: 42, column: 5, scope: !2730)
!2730 = !DILexicalBlockFile(scope: !2725, file: !2658, discriminator: 1)
!2731 = !DILocation(line: 31, column: 25, scope: !2657, inlinedAt: !2729)
!2732 = !DILocation(line: 31, column: 39, scope: !2657, inlinedAt: !2729)
!2733 = !DILocation(line: 31, column: 54, scope: !2657, inlinedAt: !2729)
!2734 = !DILocation(line: 34, column: 3, scope: !2669, inlinedAt: !2729)
!2735 = !DILocation(line: 42, column: 5, scope: !2725)
!2736 = !DILocation(line: 43, column: 1, scope: !2676)
!2737 = distinct !DISubprogram(name: "fopen_safer", scope: !2738, file: !2738, line: 31, type: !2739, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: true, unit: !743, variables: !2781)
!2738 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!2739 = !DISubroutineType(types: !2740)
!2740 = !{!2741, !68, !68}
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !2743)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !2744)
!2744 = !{!2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2743, file: !132, line: 242, baseType: !70, size: 32)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2743, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2743, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2743, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2743, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2743, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2743, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2743, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2743, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2743, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2743, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2743, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2743, file: !132, line: 260, baseType: !2758, size: 64, offset: 768)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !2760)
!2760 = !{!2761, !2762, !2764}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2759, file: !132, line: 157, baseType: !2758, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2759, file: !132, line: 158, baseType: !2763, size: 64, offset: 64)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2759, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2743, file: !132, line: 262, baseType: !2763, size: 64, offset: 832)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2743, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2743, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2743, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2743, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2743, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2743, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2743, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2743, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2743, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2743, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2743, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2743, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2743, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2743, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2743, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!2781 = !{!2782, !2783, !2784, !2785, !2788, !2791, !2794}
!2782 = !DILocalVariable(name: "file", arg: 1, scope: !2737, file: !2738, line: 31, type: !68)
!2783 = !DILocalVariable(name: "mode", arg: 2, scope: !2737, file: !2738, line: 31, type: !68)
!2784 = !DILocalVariable(name: "fp", scope: !2737, file: !2738, line: 33, type: !2741)
!2785 = !DILocalVariable(name: "fd", scope: !2786, file: !2738, line: 37, type: !70)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !2738, line: 36, column: 5)
!2787 = distinct !DILexicalBlock(scope: !2737, file: !2738, line: 35, column: 7)
!2788 = !DILocalVariable(name: "f", scope: !2789, file: !2738, line: 41, type: !70)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !2738, line: 40, column: 9)
!2790 = distinct !DILexicalBlock(scope: !2786, file: !2738, line: 39, column: 11)
!2791 = !DILocalVariable(name: "e", scope: !2792, file: !2738, line: 45, type: !70)
!2792 = distinct !DILexicalBlock(scope: !2793, file: !2738, line: 44, column: 13)
!2793 = distinct !DILexicalBlock(scope: !2789, file: !2738, line: 43, column: 15)
!2794 = !DILocalVariable(name: "e", scope: !2795, file: !2738, line: 54, type: !70)
!2795 = distinct !DILexicalBlock(scope: !2796, file: !2738, line: 53, column: 13)
!2796 = distinct !DILexicalBlock(scope: !2789, file: !2738, line: 51, column: 15)
!2797 = !DILocation(line: 31, column: 26, scope: !2737)
!2798 = !DILocation(line: 31, column: 44, scope: !2737)
!2799 = !DILocation(line: 33, column: 14, scope: !2737)
!2800 = !DILocation(line: 33, column: 9, scope: !2737)
!2801 = !DILocation(line: 35, column: 7, scope: !2787)
!2802 = !DILocation(line: 35, column: 7, scope: !2737)
!2803 = !DILocation(line: 37, column: 16, scope: !2786)
!2804 = !DILocation(line: 37, column: 11, scope: !2786)
!2805 = !DILocation(line: 39, column: 19, scope: !2790)
!2806 = !DILocation(line: 41, column: 19, scope: !2789)
!2807 = !DILocation(line: 41, column: 15, scope: !2789)
!2808 = !DILocation(line: 43, column: 17, scope: !2793)
!2809 = !DILocation(line: 43, column: 15, scope: !2789)
!2810 = !DILocation(line: 45, column: 23, scope: !2792)
!2811 = !DILocation(line: 45, column: 19, scope: !2792)
!2812 = !DILocation(line: 46, column: 15, scope: !2792)
!2813 = !DILocation(line: 47, column: 21, scope: !2792)
!2814 = !DILocation(line: 51, column: 15, scope: !2796)
!2815 = !DILocation(line: 51, column: 27, scope: !2796)
!2816 = !DILocation(line: 52, column: 15, scope: !2796)
!2817 = !DILocation(line: 52, column: 26, scope: !2818)
!2818 = !DILexicalBlockFile(scope: !2796, file: !2738, discriminator: 1)
!2819 = !DILocation(line: 52, column: 24, scope: !2818)
!2820 = !DILocation(line: 51, column: 15, scope: !2821)
!2821 = !DILexicalBlockFile(scope: !2789, file: !2738, discriminator: 1)
!2822 = !DILocation(line: 54, column: 23, scope: !2795)
!2823 = !DILocation(line: 54, column: 19, scope: !2795)
!2824 = !DILocation(line: 55, column: 15, scope: !2795)
!2825 = !DILocation(line: 56, column: 21, scope: !2795)
!2826 = !DILocation(line: 63, column: 1, scope: !2737)
!2827 = distinct !DISubprogram(name: "set_program_name", scope: !295, file: !295, line: 39, type: !84, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: true, unit: !291, variables: !2828)
!2828 = !{!2829, !2830, !2831}
!2829 = !DILocalVariable(name: "argv0", arg: 1, scope: !2827, file: !295, line: 39, type: !68)
!2830 = !DILocalVariable(name: "slash", scope: !2827, file: !295, line: 46, type: !68)
!2831 = !DILocalVariable(name: "base", scope: !2827, file: !295, line: 47, type: !68)
!2832 = !DILocation(line: 39, column: 31, scope: !2827)
!2833 = !DILocation(line: 51, column: 13, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2827, file: !295, line: 51, column: 7)
!2835 = !DILocation(line: 51, column: 7, scope: !2827)
!2836 = !DILocation(line: 55, column: 14, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2834, file: !295, line: 52, column: 5)
!2838 = !DILocation(line: 54, column: 7, scope: !2837)
!2839 = !DILocation(line: 56, column: 7, scope: !2837)
!2840 = !DILocation(line: 59, column: 11, scope: !2827)
!2841 = !DILocation(line: 46, column: 15, scope: !2827)
!2842 = !DILocation(line: 60, column: 17, scope: !2827)
!2843 = !DILocation(line: 60, column: 33, scope: !2844)
!2844 = !DILexicalBlockFile(scope: !2827, file: !295, discriminator: 1)
!2845 = !DILocation(line: 60, column: 11, scope: !2827)
!2846 = !DILocation(line: 47, column: 15, scope: !2827)
!2847 = !DILocation(line: 61, column: 12, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2827, file: !295, line: 61, column: 7)
!2849 = !DILocation(line: 61, column: 20, scope: !2848)
!2850 = !DILocation(line: 61, column: 25, scope: !2848)
!2851 = !DILocation(line: 61, column: 28, scope: !2852)
!2852 = !DILexicalBlockFile(scope: !2848, file: !295, discriminator: 1)
!2853 = !DILocation(line: 61, column: 61, scope: !2852)
!2854 = !DILocation(line: 61, column: 7, scope: !2844)
!2855 = !DILocation(line: 64, column: 11, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2857, file: !295, line: 64, column: 11)
!2857 = distinct !DILexicalBlock(scope: !2848, file: !295, line: 62, column: 5)
!2858 = !DILocation(line: 64, column: 36, scope: !2856)
!2859 = !DILocation(line: 64, column: 11, scope: !2857)
!2860 = !DILocation(line: 66, column: 24, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2856, file: !295, line: 65, column: 9)
!2862 = !DILocation(line: 70, column: 41, scope: !2861)
!2863 = !DILocation(line: 72, column: 9, scope: !2861)
!2864 = !DILocation(line: 84, column: 16, scope: !2827)
!2865 = !DILocation(line: 90, column: 27, scope: !2827)
!2866 = !DILocation(line: 92, column: 1, scope: !2827)
!2867 = distinct !DISubprogram(name: "clone_quoting_options", scope: !310, file: !310, line: 114, type: !2868, isLocal: false, isDefinition: true, scopeLine: 115, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !2871)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{!2870, !2870}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!2871 = !{!2872, !2873, !2874}
!2872 = !DILocalVariable(name: "o", arg: 1, scope: !2867, file: !310, line: 114, type: !2870)
!2873 = !DILocalVariable(name: "e", scope: !2867, file: !310, line: 116, type: !70)
!2874 = !DILocalVariable(name: "p", scope: !2867, file: !310, line: 117, type: !2870)
!2875 = !DILocation(line: 114, column: 48, scope: !2867)
!2876 = !DILocation(line: 116, column: 11, scope: !2867)
!2877 = !DILocation(line: 116, column: 7, scope: !2867)
!2878 = !DILocation(line: 117, column: 40, scope: !2867)
!2879 = !DILocation(line: 117, column: 40, scope: !2880)
!2880 = !DILexicalBlockFile(scope: !2867, file: !310, discriminator: 3)
!2881 = !DILocation(line: 117, column: 31, scope: !2880)
!2882 = !DILocation(line: 117, column: 27, scope: !2867)
!2883 = !DILocation(line: 119, column: 9, scope: !2867)
!2884 = !DILocation(line: 120, column: 3, scope: !2867)
!2885 = distinct !DISubprogram(name: "get_quoting_style", scope: !310, file: !310, line: 125, type: !2886, isLocal: false, isDefinition: true, scopeLine: 126, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !2890)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{!5, !2888}
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!2890 = !{!2891}
!2891 = !DILocalVariable(name: "o", arg: 1, scope: !2885, file: !310, line: 125, type: !2888)
!2892 = !DILocation(line: 125, column: 50, scope: !2885)
!2893 = !DILocation(line: 127, column: 11, scope: !2885)
!2894 = !DILocation(line: 127, column: 46, scope: !2895)
!2895 = !DILexicalBlockFile(scope: !2885, file: !310, discriminator: 3)
!2896 = !{!2897, !810, i64 0}
!2897 = !{!"quoting_options", !810, i64 0, !1020, i64 4, !810, i64 8, !809, i64 40, !809, i64 48}
!2898 = !DILocation(line: 127, column: 3, scope: !2895)
!2899 = distinct !DISubprogram(name: "set_quoting_style", scope: !310, file: !310, line: 133, type: !2900, isLocal: false, isDefinition: true, scopeLine: 134, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !2902)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{null, !2870, !5}
!2902 = !{!2903, !2904}
!2903 = !DILocalVariable(name: "o", arg: 1, scope: !2899, file: !310, line: 133, type: !2870)
!2904 = !DILocalVariable(name: "s", arg: 2, scope: !2899, file: !310, line: 133, type: !5)
!2905 = !DILocation(line: 133, column: 44, scope: !2899)
!2906 = !DILocation(line: 133, column: 66, scope: !2899)
!2907 = !DILocation(line: 135, column: 4, scope: !2899)
!2908 = !DILocation(line: 135, column: 39, scope: !2909)
!2909 = !DILexicalBlockFile(scope: !2899, file: !310, discriminator: 3)
!2910 = !DILocation(line: 135, column: 45, scope: !2909)
!2911 = !DILocation(line: 136, column: 1, scope: !2899)
!2912 = distinct !DISubprogram(name: "set_char_quoting", scope: !310, file: !310, line: 144, type: !2913, isLocal: false, isDefinition: true, scopeLine: 145, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !2915)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{!70, !2870, !59, !70}
!2915 = !{!2916, !2917, !2918, !2919, !2920, !2922, !2923}
!2916 = !DILocalVariable(name: "o", arg: 1, scope: !2912, file: !310, line: 144, type: !2870)
!2917 = !DILocalVariable(name: "c", arg: 2, scope: !2912, file: !310, line: 144, type: !59)
!2918 = !DILocalVariable(name: "i", arg: 3, scope: !2912, file: !310, line: 144, type: !70)
!2919 = !DILocalVariable(name: "uc", scope: !2912, file: !310, line: 146, type: !67)
!2920 = !DILocalVariable(name: "p", scope: !2912, file: !310, line: 147, type: !2921)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!2922 = !DILocalVariable(name: "shift", scope: !2912, file: !310, line: 149, type: !70)
!2923 = !DILocalVariable(name: "r", scope: !2912, file: !310, line: 150, type: !70)
!2924 = !DILocation(line: 144, column: 43, scope: !2912)
!2925 = !DILocation(line: 144, column: 51, scope: !2912)
!2926 = !DILocation(line: 144, column: 58, scope: !2912)
!2927 = !DILocation(line: 146, column: 17, scope: !2912)
!2928 = !DILocation(line: 148, column: 6, scope: !2912)
!2929 = !DILocation(line: 148, column: 62, scope: !2930)
!2930 = !DILexicalBlockFile(scope: !2912, file: !310, discriminator: 3)
!2931 = !DILocation(line: 148, column: 57, scope: !2930)
!2932 = !DILocation(line: 147, column: 17, scope: !2912)
!2933 = !DILocation(line: 149, column: 18, scope: !2912)
!2934 = !DILocation(line: 149, column: 15, scope: !2912)
!2935 = !DILocation(line: 149, column: 7, scope: !2912)
!2936 = !DILocation(line: 150, column: 12, scope: !2912)
!2937 = !DILocation(line: 150, column: 15, scope: !2912)
!2938 = !DILocation(line: 150, column: 25, scope: !2912)
!2939 = !DILocation(line: 150, column: 7, scope: !2912)
!2940 = !DILocation(line: 151, column: 13, scope: !2912)
!2941 = !DILocation(line: 151, column: 18, scope: !2912)
!2942 = !DILocation(line: 151, column: 23, scope: !2912)
!2943 = !DILocation(line: 151, column: 6, scope: !2912)
!2944 = !DILocation(line: 152, column: 3, scope: !2912)
!2945 = distinct !DISubprogram(name: "set_quoting_flags", scope: !310, file: !310, line: 160, type: !2946, isLocal: false, isDefinition: true, scopeLine: 161, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !2948)
!2946 = !DISubroutineType(types: !2947)
!2947 = !{!70, !2870, !70}
!2948 = !{!2949, !2950, !2951}
!2949 = !DILocalVariable(name: "o", arg: 1, scope: !2945, file: !310, line: 160, type: !2870)
!2950 = !DILocalVariable(name: "i", arg: 2, scope: !2945, file: !310, line: 160, type: !70)
!2951 = !DILocalVariable(name: "r", scope: !2945, file: !310, line: 162, type: !70)
!2952 = !DILocation(line: 160, column: 44, scope: !2945)
!2953 = !DILocation(line: 160, column: 51, scope: !2945)
!2954 = !DILocation(line: 163, column: 8, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2945, file: !310, line: 163, column: 7)
!2956 = !DILocation(line: 163, column: 7, scope: !2945)
!2957 = !DILocation(line: 165, column: 10, scope: !2945)
!2958 = !{!2897, !1020, i64 4}
!2959 = !DILocation(line: 162, column: 7, scope: !2945)
!2960 = !DILocation(line: 166, column: 12, scope: !2945)
!2961 = !DILocation(line: 167, column: 3, scope: !2945)
!2962 = distinct !DISubprogram(name: "set_custom_quoting", scope: !310, file: !310, line: 171, type: !2963, isLocal: false, isDefinition: true, scopeLine: 173, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !2965)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{null, !2870, !68, !68}
!2965 = !{!2966, !2967, !2968}
!2966 = !DILocalVariable(name: "o", arg: 1, scope: !2962, file: !310, line: 171, type: !2870)
!2967 = !DILocalVariable(name: "left_quote", arg: 2, scope: !2962, file: !310, line: 172, type: !68)
!2968 = !DILocalVariable(name: "right_quote", arg: 3, scope: !2962, file: !310, line: 172, type: !68)
!2969 = !DILocation(line: 171, column: 45, scope: !2962)
!2970 = !DILocation(line: 172, column: 33, scope: !2962)
!2971 = !DILocation(line: 172, column: 57, scope: !2962)
!2972 = !DILocation(line: 174, column: 8, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2962, file: !310, line: 174, column: 7)
!2974 = !DILocation(line: 174, column: 7, scope: !2962)
!2975 = !DILocation(line: 176, column: 6, scope: !2962)
!2976 = !DILocation(line: 176, column: 12, scope: !2962)
!2977 = !DILocation(line: 177, column: 8, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2962, file: !310, line: 177, column: 7)
!2979 = !DILocation(line: 177, column: 23, scope: !2980)
!2980 = !DILexicalBlockFile(scope: !2978, file: !310, discriminator: 1)
!2981 = !DILocation(line: 177, column: 19, scope: !2978)
!2982 = !DILocation(line: 178, column: 5, scope: !2978)
!2983 = !DILocation(line: 179, column: 6, scope: !2962)
!2984 = !DILocation(line: 179, column: 17, scope: !2962)
!2985 = !{!2897, !809, i64 40}
!2986 = !DILocation(line: 180, column: 6, scope: !2962)
!2987 = !DILocation(line: 180, column: 18, scope: !2962)
!2988 = !{!2897, !809, i64 48}
!2989 = !DILocation(line: 181, column: 1, scope: !2962)
!2990 = distinct !DISubprogram(name: "quotearg_buffer", scope: !310, file: !310, line: 776, type: !2991, isLocal: false, isDefinition: true, scopeLine: 779, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !2993)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!61, !58, !61, !68, !61, !2888}
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001}
!2994 = !DILocalVariable(name: "buffer", arg: 1, scope: !2990, file: !310, line: 776, type: !58)
!2995 = !DILocalVariable(name: "buffersize", arg: 2, scope: !2990, file: !310, line: 776, type: !61)
!2996 = !DILocalVariable(name: "arg", arg: 3, scope: !2990, file: !310, line: 777, type: !68)
!2997 = !DILocalVariable(name: "argsize", arg: 4, scope: !2990, file: !310, line: 777, type: !61)
!2998 = !DILocalVariable(name: "o", arg: 5, scope: !2990, file: !310, line: 778, type: !2888)
!2999 = !DILocalVariable(name: "p", scope: !2990, file: !310, line: 780, type: !2888)
!3000 = !DILocalVariable(name: "e", scope: !2990, file: !310, line: 781, type: !70)
!3001 = !DILocalVariable(name: "r", scope: !2990, file: !310, line: 782, type: !61)
!3002 = !DILocation(line: 776, column: 24, scope: !2990)
!3003 = !DILocation(line: 776, column: 39, scope: !2990)
!3004 = !DILocation(line: 777, column: 30, scope: !2990)
!3005 = !DILocation(line: 777, column: 42, scope: !2990)
!3006 = !DILocation(line: 778, column: 48, scope: !2990)
!3007 = !DILocation(line: 780, column: 37, scope: !2990)
!3008 = !DILocation(line: 780, column: 33, scope: !2990)
!3009 = !DILocation(line: 781, column: 11, scope: !2990)
!3010 = !DILocation(line: 781, column: 7, scope: !2990)
!3011 = !DILocation(line: 783, column: 43, scope: !2990)
!3012 = !DILocation(line: 783, column: 53, scope: !2990)
!3013 = !DILocation(line: 783, column: 60, scope: !2990)
!3014 = !DILocation(line: 784, column: 43, scope: !2990)
!3015 = !DILocation(line: 784, column: 58, scope: !2990)
!3016 = !DILocation(line: 782, column: 14, scope: !2990)
!3017 = !DILocation(line: 782, column: 10, scope: !2990)
!3018 = !DILocation(line: 785, column: 9, scope: !2990)
!3019 = !DILocation(line: 786, column: 3, scope: !2990)
!3020 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !310, file: !310, line: 248, type: !3021, isLocal: true, isDefinition: true, scopeLine: 254, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !3025)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{!61, !58, !61, !68, !61, !5, !70, !3023, !68, !68}
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!3025 = !{!3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3050, !3051, !3052, !3053, !3054, !3057, !3058, !3075, !3078, !3079, !3086}
!3026 = !DILocalVariable(name: "buffer", arg: 1, scope: !3020, file: !310, line: 248, type: !58)
!3027 = !DILocalVariable(name: "buffersize", arg: 2, scope: !3020, file: !310, line: 248, type: !61)
!3028 = !DILocalVariable(name: "arg", arg: 3, scope: !3020, file: !310, line: 249, type: !68)
!3029 = !DILocalVariable(name: "argsize", arg: 4, scope: !3020, file: !310, line: 249, type: !61)
!3030 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !3020, file: !310, line: 250, type: !5)
!3031 = !DILocalVariable(name: "flags", arg: 6, scope: !3020, file: !310, line: 250, type: !70)
!3032 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !3020, file: !310, line: 251, type: !3023)
!3033 = !DILocalVariable(name: "left_quote", arg: 8, scope: !3020, file: !310, line: 252, type: !68)
!3034 = !DILocalVariable(name: "right_quote", arg: 9, scope: !3020, file: !310, line: 253, type: !68)
!3035 = !DILocalVariable(name: "i", scope: !3020, file: !310, line: 255, type: !61)
!3036 = !DILocalVariable(name: "len", scope: !3020, file: !310, line: 256, type: !61)
!3037 = !DILocalVariable(name: "orig_buffersize", scope: !3020, file: !310, line: 257, type: !61)
!3038 = !DILocalVariable(name: "quote_string", scope: !3020, file: !310, line: 258, type: !68)
!3039 = !DILocalVariable(name: "quote_string_len", scope: !3020, file: !310, line: 259, type: !61)
!3040 = !DILocalVariable(name: "backslash_escapes", scope: !3020, file: !310, line: 260, type: !76)
!3041 = !DILocalVariable(name: "unibyte_locale", scope: !3020, file: !310, line: 261, type: !76)
!3042 = !DILocalVariable(name: "elide_outer_quotes", scope: !3020, file: !310, line: 262, type: !76)
!3043 = !DILocalVariable(name: "pending_shell_escape_end", scope: !3020, file: !310, line: 263, type: !76)
!3044 = !DILocalVariable(name: "encountered_single_quote", scope: !3020, file: !310, line: 264, type: !76)
!3045 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !3020, file: !310, line: 265, type: !76)
!3046 = !DILocalVariable(name: "c", scope: !3047, file: !310, line: 394, type: !67)
!3047 = distinct !DILexicalBlock(scope: !3048, file: !310, line: 393, column: 5)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !310, line: 392, column: 3)
!3049 = distinct !DILexicalBlock(scope: !3020, file: !310, line: 392, column: 3)
!3050 = !DILocalVariable(name: "esc", scope: !3047, file: !310, line: 395, type: !67)
!3051 = !DILocalVariable(name: "is_right_quote", scope: !3047, file: !310, line: 396, type: !76)
!3052 = !DILocalVariable(name: "escaping", scope: !3047, file: !310, line: 397, type: !76)
!3053 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !3047, file: !310, line: 398, type: !76)
!3054 = !DILocalVariable(name: "m", scope: !3055, file: !310, line: 602, type: !61)
!3055 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 600, column: 11)
!3056 = distinct !DILexicalBlock(scope: !3047, file: !310, line: 418, column: 9)
!3057 = !DILocalVariable(name: "printable", scope: !3055, file: !310, line: 604, type: !76)
!3058 = !DILocalVariable(name: "mbstate", scope: !3059, file: !310, line: 613, type: !3061)
!3059 = distinct !DILexicalBlock(scope: !3060, file: !310, line: 612, column: 15)
!3060 = distinct !DILexicalBlock(scope: !3055, file: !310, line: 606, column: 17)
!3061 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !3062, line: 107, baseType: !3063)
!3062 = !DIFile(filename: "/usr/include/wchar.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!3063 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !3062, line: 95, baseType: !3064)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3062, line: 83, size: 64, elements: !3065)
!3065 = !{!3066, !3067}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !3064, file: !3062, line: 85, baseType: !70, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !3064, file: !3062, line: 94, baseType: !3068, size: 32, offset: 32)
!3068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3064, file: !3062, line: 86, size: 32, elements: !3069)
!3069 = !{!3070, !3071}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !3068, file: !3062, line: 89, baseType: !278, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !3068, file: !3062, line: 93, baseType: !3072, size: 32)
!3072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 32, elements: !3073)
!3073 = !{!3074}
!3074 = !DISubrange(count: 4)
!3075 = !DILocalVariable(name: "w", scope: !3076, file: !310, line: 623, type: !3077)
!3076 = distinct !DILexicalBlock(scope: !3059, file: !310, line: 622, column: 19)
!3077 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !62, line: 90, baseType: !70)
!3078 = !DILocalVariable(name: "bytes", scope: !3076, file: !310, line: 624, type: !61)
!3079 = !DILocalVariable(name: "j", scope: !3080, file: !310, line: 649, type: !61)
!3080 = distinct !DILexicalBlock(scope: !3081, file: !310, line: 648, column: 27)
!3081 = distinct !DILexicalBlock(scope: !3082, file: !310, line: 646, column: 29)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !310, line: 641, column: 23)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !310, line: 633, column: 30)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !310, line: 628, column: 30)
!3085 = distinct !DILexicalBlock(scope: !3076, file: !310, line: 626, column: 25)
!3086 = !DILocalVariable(name: "ilim", scope: !3087, file: !310, line: 676, type: !61)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !310, line: 673, column: 15)
!3088 = distinct !DILexicalBlock(scope: !3055, file: !310, line: 672, column: 17)
!3089 = !DILocation(line: 248, column: 33, scope: !3020)
!3090 = !DILocation(line: 248, column: 48, scope: !3020)
!3091 = !DILocation(line: 249, column: 39, scope: !3020)
!3092 = !DILocation(line: 249, column: 51, scope: !3020)
!3093 = !DILocation(line: 250, column: 46, scope: !3020)
!3094 = !DILocation(line: 250, column: 65, scope: !3020)
!3095 = !DILocation(line: 251, column: 47, scope: !3020)
!3096 = !DILocation(line: 252, column: 39, scope: !3020)
!3097 = !DILocation(line: 253, column: 39, scope: !3020)
!3098 = !DILocation(line: 256, column: 10, scope: !3020)
!3099 = !DILocation(line: 257, column: 10, scope: !3020)
!3100 = !DILocation(line: 258, column: 15, scope: !3020)
!3101 = !DILocation(line: 259, column: 10, scope: !3020)
!3102 = !DILocation(line: 260, column: 8, scope: !3020)
!3103 = !DILocation(line: 261, column: 25, scope: !3020)
!3104 = !DILocation(line: 261, column: 36, scope: !3020)
!3105 = !DILocation(line: 262, column: 8, scope: !3020)
!3106 = !DILocation(line: 263, column: 8, scope: !3020)
!3107 = !DILocation(line: 264, column: 8, scope: !3020)
!3108 = !DILocation(line: 265, column: 8, scope: !3020)
!3109 = !DILocation(line: 265, column: 3, scope: !3020)
!3110 = !DILocation(line: 308, column: 3, scope: !3020)
!3111 = !DILocation(line: 315, column: 11, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3020, file: !310, line: 309, column: 5)
!3113 = !DILocation(line: 315, column: 12, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3112, file: !310, line: 315, column: 11)
!3115 = !DILocation(line: 316, column: 9, scope: !3116)
!3116 = !DILexicalBlockFile(scope: !3117, file: !310, discriminator: 1)
!3117 = distinct !DILexicalBlock(scope: !3118, file: !310, line: 316, column: 9)
!3118 = distinct !DILexicalBlock(scope: !3114, file: !310, line: 316, column: 9)
!3119 = !DILocation(line: 316, column: 9, scope: !3120)
!3120 = !DILexicalBlockFile(scope: !3118, file: !310, discriminator: 1)
!3121 = !DILocation(line: 316, column: 9, scope: !3122)
!3122 = !DILexicalBlockFile(scope: !3117, file: !310, discriminator: 2)
!3123 = !DILocation(line: 354, column: 26, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !310, line: 332, column: 11)
!3125 = distinct !DILexicalBlock(scope: !3126, file: !310, line: 331, column: 13)
!3126 = distinct !DILexicalBlock(scope: !3112, file: !310, line: 330, column: 7)
!3127 = !DILocation(line: 355, column: 27, scope: !3124)
!3128 = !DILocation(line: 356, column: 11, scope: !3124)
!3129 = !DILocation(line: 357, column: 14, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3126, file: !310, line: 357, column: 13)
!3131 = !DILocation(line: 357, column: 13, scope: !3126)
!3132 = !DILocation(line: 358, column: 43, scope: !3133)
!3133 = !DILexicalBlockFile(scope: !3134, file: !310, discriminator: 1)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !310, line: 358, column: 11)
!3135 = distinct !DILexicalBlock(scope: !3130, file: !310, line: 358, column: 11)
!3136 = !DILocation(line: 358, column: 11, scope: !3137)
!3137 = !DILexicalBlockFile(scope: !3135, file: !310, discriminator: 1)
!3138 = !DILocation(line: 359, column: 13, scope: !3139)
!3139 = !DILexicalBlockFile(scope: !3140, file: !310, discriminator: 1)
!3140 = distinct !DILexicalBlock(scope: !3141, file: !310, line: 359, column: 13)
!3141 = distinct !DILexicalBlock(scope: !3134, file: !310, line: 359, column: 13)
!3142 = !DILocation(line: 359, column: 13, scope: !3143)
!3143 = !DILexicalBlockFile(scope: !3141, file: !310, discriminator: 1)
!3144 = !DILocation(line: 359, column: 13, scope: !3145)
!3145 = !DILexicalBlockFile(scope: !3140, file: !310, discriminator: 2)
!3146 = !DILocation(line: 359, column: 13, scope: !3147)
!3147 = !DILexicalBlockFile(scope: !3141, file: !310, discriminator: 3)
!3148 = !DILocation(line: 358, column: 70, scope: !3149)
!3149 = !DILexicalBlockFile(scope: !3134, file: !310, discriminator: 2)
!3150 = distinct !{!3150, !3151, !3152}
!3151 = !DILocation(line: 358, column: 11, scope: !3135)
!3152 = !DILocation(line: 359, column: 13, scope: !3135)
!3153 = !DILocation(line: 362, column: 28, scope: !3126)
!3154 = !DILocation(line: 364, column: 7, scope: !3112)
!3155 = !DILocation(line: 367, column: 7, scope: !3112)
!3156 = !DILocation(line: 370, column: 7, scope: !3112)
!3157 = !DILocation(line: 373, column: 12, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3112, file: !310, line: 373, column: 11)
!3159 = !DILocation(line: 373, column: 11, scope: !3112)
!3160 = !DILocation(line: 378, column: 12, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3112, file: !310, line: 378, column: 11)
!3162 = !DILocation(line: 378, column: 11, scope: !3112)
!3163 = !DILocation(line: 379, column: 9, scope: !3164)
!3164 = !DILexicalBlockFile(scope: !3165, file: !310, discriminator: 1)
!3165 = distinct !DILexicalBlock(scope: !3166, file: !310, line: 379, column: 9)
!3166 = distinct !DILexicalBlock(scope: !3161, file: !310, line: 379, column: 9)
!3167 = !DILocation(line: 379, column: 9, scope: !3168)
!3168 = !DILexicalBlockFile(scope: !3166, file: !310, discriminator: 1)
!3169 = !DILocation(line: 379, column: 9, scope: !3170)
!3170 = !DILexicalBlockFile(scope: !3165, file: !310, discriminator: 2)
!3171 = !DILocation(line: 386, column: 7, scope: !3112)
!3172 = !DILocation(line: 389, column: 7, scope: !3112)
!3173 = !DILocation(line: 255, column: 10, scope: !3020)
!3174 = !DILocation(line: 392, column: 8, scope: !3049)
!3175 = !DILocation(line: 392, column: 27, scope: !3176)
!3176 = !DILexicalBlockFile(scope: !3048, file: !310, discriminator: 1)
!3177 = !DILocation(line: 392, column: 19, scope: !3176)
!3178 = !DILocation(line: 392, column: 60, scope: !3179)
!3179 = !DILexicalBlockFile(scope: !3048, file: !310, discriminator: 3)
!3180 = !DILocation(line: 392, column: 3, scope: !3181)
!3181 = !DILexicalBlockFile(scope: !3049, file: !310, discriminator: 4)
!3182 = !DILocation(line: 392, column: 41, scope: !3183)
!3183 = !DILexicalBlockFile(scope: !3048, file: !310, discriminator: 2)
!3184 = !DILocation(line: 392, column: 48, scope: !3183)
!3185 = !DILocation(line: 396, column: 12, scope: !3047)
!3186 = !DILocation(line: 397, column: 12, scope: !3047)
!3187 = !DILocation(line: 398, column: 12, scope: !3047)
!3188 = !DILocation(line: 401, column: 11, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3047, file: !310, line: 400, column: 11)
!3190 = !DILocation(line: 403, column: 17, scope: !3191)
!3191 = !DILexicalBlockFile(scope: !3189, file: !310, discriminator: 1)
!3192 = !DILocation(line: 404, column: 39, scope: !3189)
!3193 = !DILocation(line: 408, column: 32, scope: !3189)
!3194 = !DILocation(line: 404, column: 19, scope: !3195)
!3195 = !DILexicalBlockFile(scope: !3189, file: !310, discriminator: 2)
!3196 = !DILocation(line: 404, column: 15, scope: !3197)
!3197 = !DILexicalBlockFile(scope: !3189, file: !310, discriminator: 4)
!3198 = !DILocation(line: 409, column: 11, scope: !3189)
!3199 = !DILocation(line: 409, column: 26, scope: !3191)
!3200 = !DILocation(line: 409, column: 14, scope: !3191)
!3201 = !DILocation(line: 400, column: 11, scope: !3202)
!3202 = !DILexicalBlockFile(scope: !3047, file: !310, discriminator: 1)
!3203 = !DILocation(line: 416, column: 11, scope: !3047)
!3204 = !DILocation(line: 394, column: 21, scope: !3047)
!3205 = !DILocation(line: 417, column: 7, scope: !3047)
!3206 = !DILocation(line: 420, column: 15, scope: !3056)
!3207 = !DILocation(line: 422, column: 15, scope: !3208)
!3208 = !DILexicalBlockFile(scope: !3209, file: !310, discriminator: 1)
!3209 = distinct !DILexicalBlock(scope: !3210, file: !310, line: 422, column: 15)
!3210 = distinct !DILexicalBlock(scope: !3211, file: !310, line: 421, column: 13)
!3211 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 420, column: 15)
!3212 = !DILocation(line: 422, column: 15, scope: !3213)
!3213 = !DILexicalBlockFile(scope: !3214, file: !310, discriminator: 4)
!3214 = distinct !DILexicalBlock(scope: !3209, file: !310, line: 422, column: 15)
!3215 = !DILocation(line: 422, column: 15, scope: !3216)
!3216 = !DILexicalBlockFile(scope: !3214, file: !310, discriminator: 3)
!3217 = !DILocation(line: 422, column: 15, scope: !3218)
!3218 = !DILexicalBlockFile(scope: !3219, file: !310, discriminator: 6)
!3219 = distinct !DILexicalBlock(scope: !3220, file: !310, line: 422, column: 15)
!3220 = distinct !DILexicalBlock(scope: !3221, file: !310, line: 422, column: 15)
!3221 = distinct !DILexicalBlock(scope: !3214, file: !310, line: 422, column: 15)
!3222 = !DILocation(line: 422, column: 15, scope: !3223)
!3223 = !DILexicalBlockFile(scope: !3220, file: !310, discriminator: 6)
!3224 = !DILocation(line: 422, column: 15, scope: !3225)
!3225 = !DILexicalBlockFile(scope: !3219, file: !310, discriminator: 7)
!3226 = !DILocation(line: 422, column: 15, scope: !3227)
!3227 = !DILexicalBlockFile(scope: !3220, file: !310, discriminator: 8)
!3228 = !DILocation(line: 422, column: 15, scope: !3229)
!3229 = !DILexicalBlockFile(scope: !3230, file: !310, discriminator: 11)
!3230 = distinct !DILexicalBlock(scope: !3231, file: !310, line: 422, column: 15)
!3231 = distinct !DILexicalBlock(scope: !3221, file: !310, line: 422, column: 15)
!3232 = !DILocation(line: 422, column: 15, scope: !3233)
!3233 = !DILexicalBlockFile(scope: !3231, file: !310, discriminator: 11)
!3234 = !DILocation(line: 422, column: 15, scope: !3235)
!3235 = !DILexicalBlockFile(scope: !3230, file: !310, discriminator: 12)
!3236 = !DILocation(line: 422, column: 15, scope: !3237)
!3237 = !DILexicalBlockFile(scope: !3231, file: !310, discriminator: 13)
!3238 = !DILocation(line: 422, column: 15, scope: !3239)
!3239 = !DILexicalBlockFile(scope: !3240, file: !310, discriminator: 16)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !310, line: 422, column: 15)
!3241 = distinct !DILexicalBlock(scope: !3221, file: !310, line: 422, column: 15)
!3242 = !DILocation(line: 422, column: 15, scope: !3243)
!3243 = !DILexicalBlockFile(scope: !3241, file: !310, discriminator: 16)
!3244 = !DILocation(line: 422, column: 15, scope: !3245)
!3245 = !DILexicalBlockFile(scope: !3240, file: !310, discriminator: 17)
!3246 = !DILocation(line: 422, column: 15, scope: !3247)
!3247 = !DILexicalBlockFile(scope: !3241, file: !310, discriminator: 18)
!3248 = !DILocation(line: 422, column: 15, scope: !3249)
!3249 = !DILexicalBlockFile(scope: !3221, file: !310, discriminator: 20)
!3250 = !DILocation(line: 422, column: 15, scope: !3251)
!3251 = !DILexicalBlockFile(scope: !3252, file: !310, discriminator: 22)
!3252 = distinct !DILexicalBlock(scope: !3253, file: !310, line: 422, column: 15)
!3253 = distinct !DILexicalBlock(scope: !3209, file: !310, line: 422, column: 15)
!3254 = !DILocation(line: 422, column: 15, scope: !3255)
!3255 = !DILexicalBlockFile(scope: !3253, file: !310, discriminator: 22)
!3256 = !DILocation(line: 422, column: 15, scope: !3257)
!3257 = !DILexicalBlockFile(scope: !3252, file: !310, discriminator: 23)
!3258 = !DILocation(line: 422, column: 15, scope: !3259)
!3259 = !DILexicalBlockFile(scope: !3253, file: !310, discriminator: 24)
!3260 = !DILocation(line: 430, column: 19, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3210, file: !310, line: 429, column: 19)
!3262 = !DILocation(line: 430, column: 24, scope: !3263)
!3263 = !DILexicalBlockFile(scope: !3261, file: !310, discriminator: 1)
!3264 = !DILocation(line: 430, column: 28, scope: !3263)
!3265 = !DILocation(line: 430, column: 38, scope: !3263)
!3266 = !DILocation(line: 430, column: 48, scope: !3267)
!3267 = !DILexicalBlockFile(scope: !3261, file: !310, discriminator: 2)
!3268 = !DILocation(line: 430, column: 59, scope: !3267)
!3269 = !DILocation(line: 432, column: 19, scope: !3270)
!3270 = !DILexicalBlockFile(scope: !3271, file: !310, discriminator: 1)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !310, line: 432, column: 19)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !310, line: 432, column: 19)
!3273 = distinct !DILexicalBlock(scope: !3261, file: !310, line: 431, column: 17)
!3274 = !DILocation(line: 432, column: 19, scope: !3275)
!3275 = !DILexicalBlockFile(scope: !3272, file: !310, discriminator: 1)
!3276 = !DILocation(line: 432, column: 19, scope: !3277)
!3277 = !DILexicalBlockFile(scope: !3271, file: !310, discriminator: 2)
!3278 = !DILocation(line: 432, column: 19, scope: !3279)
!3279 = !DILexicalBlockFile(scope: !3272, file: !310, discriminator: 3)
!3280 = !DILocation(line: 433, column: 19, scope: !3281)
!3281 = !DILexicalBlockFile(scope: !3282, file: !310, discriminator: 1)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !310, line: 433, column: 19)
!3283 = distinct !DILexicalBlock(scope: !3273, file: !310, line: 433, column: 19)
!3284 = !DILocation(line: 433, column: 19, scope: !3285)
!3285 = !DILexicalBlockFile(scope: !3283, file: !310, discriminator: 1)
!3286 = !DILocation(line: 433, column: 19, scope: !3287)
!3287 = !DILexicalBlockFile(scope: !3282, file: !310, discriminator: 2)
!3288 = !DILocation(line: 433, column: 19, scope: !3289)
!3289 = !DILexicalBlockFile(scope: !3283, file: !310, discriminator: 3)
!3290 = !DILocation(line: 434, column: 17, scope: !3273)
!3291 = !DILocation(line: 441, column: 20, scope: !3211)
!3292 = !DILocation(line: 446, column: 11, scope: !3056)
!3293 = !DILocation(line: 449, column: 19, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 447, column: 13)
!3295 = !DILocation(line: 455, column: 19, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3294, file: !310, line: 454, column: 19)
!3297 = !DILocation(line: 455, column: 24, scope: !3298)
!3298 = !DILexicalBlockFile(scope: !3296, file: !310, discriminator: 1)
!3299 = !DILocation(line: 455, column: 28, scope: !3298)
!3300 = !DILocation(line: 455, column: 38, scope: !3298)
!3301 = !DILocation(line: 455, column: 47, scope: !3302)
!3302 = !DILexicalBlockFile(scope: !3296, file: !310, discriminator: 2)
!3303 = !DILocation(line: 455, column: 41, scope: !3302)
!3304 = !DILocation(line: 455, column: 52, scope: !3302)
!3305 = !DILocation(line: 454, column: 19, scope: !3306)
!3306 = !DILexicalBlockFile(scope: !3294, file: !310, discriminator: 1)
!3307 = !DILocation(line: 456, column: 25, scope: !3296)
!3308 = !DILocation(line: 456, column: 17, scope: !3296)
!3309 = !DILocation(line: 463, column: 25, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3296, file: !310, line: 457, column: 19)
!3311 = !DILocation(line: 467, column: 21, scope: !3312)
!3312 = !DILexicalBlockFile(scope: !3313, file: !310, discriminator: 1)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !310, line: 467, column: 21)
!3314 = distinct !DILexicalBlock(scope: !3310, file: !310, line: 467, column: 21)
!3315 = !DILocation(line: 467, column: 21, scope: !3316)
!3316 = !DILexicalBlockFile(scope: !3314, file: !310, discriminator: 1)
!3317 = !DILocation(line: 467, column: 21, scope: !3318)
!3318 = !DILexicalBlockFile(scope: !3313, file: !310, discriminator: 2)
!3319 = !DILocation(line: 467, column: 21, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !3314, file: !310, discriminator: 3)
!3321 = !DILocation(line: 468, column: 21, scope: !3322)
!3322 = !DILexicalBlockFile(scope: !3323, file: !310, discriminator: 1)
!3323 = distinct !DILexicalBlock(scope: !3324, file: !310, line: 468, column: 21)
!3324 = distinct !DILexicalBlock(scope: !3310, file: !310, line: 468, column: 21)
!3325 = !DILocation(line: 468, column: 21, scope: !3326)
!3326 = !DILexicalBlockFile(scope: !3324, file: !310, discriminator: 1)
!3327 = !DILocation(line: 468, column: 21, scope: !3328)
!3328 = !DILexicalBlockFile(scope: !3323, file: !310, discriminator: 2)
!3329 = !DILocation(line: 468, column: 21, scope: !3330)
!3330 = !DILexicalBlockFile(scope: !3324, file: !310, discriminator: 3)
!3331 = !DILocation(line: 469, column: 21, scope: !3332)
!3332 = !DILexicalBlockFile(scope: !3333, file: !310, discriminator: 1)
!3333 = distinct !DILexicalBlock(scope: !3334, file: !310, line: 469, column: 21)
!3334 = distinct !DILexicalBlock(scope: !3310, file: !310, line: 469, column: 21)
!3335 = !DILocation(line: 469, column: 21, scope: !3336)
!3336 = !DILexicalBlockFile(scope: !3334, file: !310, discriminator: 1)
!3337 = !DILocation(line: 469, column: 21, scope: !3338)
!3338 = !DILexicalBlockFile(scope: !3333, file: !310, discriminator: 2)
!3339 = !DILocation(line: 469, column: 21, scope: !3340)
!3340 = !DILexicalBlockFile(scope: !3334, file: !310, discriminator: 3)
!3341 = !DILocation(line: 470, column: 21, scope: !3342)
!3342 = !DILexicalBlockFile(scope: !3343, file: !310, discriminator: 1)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !310, line: 470, column: 21)
!3344 = distinct !DILexicalBlock(scope: !3310, file: !310, line: 470, column: 21)
!3345 = !DILocation(line: 470, column: 21, scope: !3346)
!3346 = !DILexicalBlockFile(scope: !3344, file: !310, discriminator: 1)
!3347 = !DILocation(line: 470, column: 21, scope: !3348)
!3348 = !DILexicalBlockFile(scope: !3343, file: !310, discriminator: 2)
!3349 = !DILocation(line: 470, column: 21, scope: !3350)
!3350 = !DILexicalBlockFile(scope: !3344, file: !310, discriminator: 3)
!3351 = !DILocation(line: 471, column: 21, scope: !3310)
!3352 = !DILocation(line: 395, column: 21, scope: !3047)
!3353 = !DILocation(line: 484, column: 31, scope: !3056)
!3354 = !DILocation(line: 485, column: 31, scope: !3056)
!3355 = !DILocation(line: 487, column: 31, scope: !3056)
!3356 = !DILocation(line: 488, column: 31, scope: !3056)
!3357 = !DILocation(line: 489, column: 31, scope: !3056)
!3358 = !DILocation(line: 492, column: 15, scope: !3056)
!3359 = !DILocation(line: 494, column: 19, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3361, file: !310, line: 493, column: 13)
!3361 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 492, column: 15)
!3362 = !DILocation(line: 501, column: 33, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 501, column: 15)
!3364 = !DILocation(line: 506, column: 15, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 505, column: 15)
!3366 = !DILocation(line: 510, column: 15, scope: !3056)
!3367 = !DILocation(line: 518, column: 26, scope: !3368)
!3368 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 518, column: 15)
!3369 = !DILocation(line: 518, column: 15, scope: !3056)
!3370 = !DILocation(line: 518, column: 40, scope: !3371)
!3371 = !DILexicalBlockFile(scope: !3368, file: !310, discriminator: 1)
!3372 = !DILocation(line: 518, column: 47, scope: !3371)
!3373 = !DILocation(line: 522, column: 17, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 522, column: 15)
!3375 = !DILocation(line: 518, column: 18, scope: !3371)
!3376 = !DILocation(line: 518, column: 65, scope: !3377)
!3377 = !DILexicalBlockFile(scope: !3368, file: !310, discriminator: 2)
!3378 = !DILocation(line: 518, column: 15, scope: !3379)
!3379 = !DILexicalBlockFile(scope: !3056, file: !310, discriminator: 2)
!3380 = !DILocation(line: 522, column: 15, scope: !3056)
!3381 = !DILocation(line: 526, column: 11, scope: !3056)
!3382 = !DILocation(line: 541, column: 15, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 540, column: 15)
!3384 = !DILocation(line: 548, column: 15, scope: !3056)
!3385 = !DILocation(line: 550, column: 19, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3387, file: !310, line: 549, column: 13)
!3387 = distinct !DILexicalBlock(scope: !3056, file: !310, line: 548, column: 15)
!3388 = !DILocation(line: 553, column: 19, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3386, file: !310, line: 553, column: 19)
!3390 = !DILocation(line: 553, column: 35, scope: !3391)
!3391 = !DILexicalBlockFile(scope: !3389, file: !310, discriminator: 1)
!3392 = !DILocation(line: 553, column: 30, scope: !3389)
!3393 = !DILocation(line: 562, column: 15, scope: !3394)
!3394 = !DILexicalBlockFile(scope: !3395, file: !310, discriminator: 1)
!3395 = distinct !DILexicalBlock(scope: !3396, file: !310, line: 562, column: 15)
!3396 = distinct !DILexicalBlock(scope: !3386, file: !310, line: 562, column: 15)
!3397 = !DILocation(line: 562, column: 15, scope: !3398)
!3398 = !DILexicalBlockFile(scope: !3396, file: !310, discriminator: 1)
!3399 = !DILocation(line: 562, column: 15, scope: !3400)
!3400 = !DILexicalBlockFile(scope: !3395, file: !310, discriminator: 2)
!3401 = !DILocation(line: 562, column: 15, scope: !3402)
!3402 = !DILexicalBlockFile(scope: !3396, file: !310, discriminator: 3)
!3403 = !DILocation(line: 563, column: 15, scope: !3404)
!3404 = !DILexicalBlockFile(scope: !3405, file: !310, discriminator: 1)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !310, line: 563, column: 15)
!3406 = distinct !DILexicalBlock(scope: !3386, file: !310, line: 563, column: 15)
!3407 = !DILocation(line: 563, column: 15, scope: !3408)
!3408 = !DILexicalBlockFile(scope: !3406, file: !310, discriminator: 1)
!3409 = !DILocation(line: 563, column: 15, scope: !3410)
!3410 = !DILexicalBlockFile(scope: !3405, file: !310, discriminator: 2)
!3411 = !DILocation(line: 563, column: 15, scope: !3412)
!3412 = !DILexicalBlockFile(scope: !3406, file: !310, discriminator: 3)
!3413 = !DILocation(line: 564, column: 15, scope: !3414)
!3414 = !DILexicalBlockFile(scope: !3415, file: !310, discriminator: 1)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !310, line: 564, column: 15)
!3416 = distinct !DILexicalBlock(scope: !3386, file: !310, line: 564, column: 15)
!3417 = !DILocation(line: 564, column: 15, scope: !3418)
!3418 = !DILexicalBlockFile(scope: !3416, file: !310, discriminator: 1)
!3419 = !DILocation(line: 564, column: 15, scope: !3420)
!3420 = !DILexicalBlockFile(scope: !3415, file: !310, discriminator: 2)
!3421 = !DILocation(line: 564, column: 15, scope: !3422)
!3422 = !DILexicalBlockFile(scope: !3416, file: !310, discriminator: 3)
!3423 = !DILocation(line: 566, column: 13, scope: !3386)
!3424 = !DILocation(line: 606, column: 17, scope: !3055)
!3425 = !DILocation(line: 602, column: 20, scope: !3055)
!3426 = !DILocation(line: 609, column: 29, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3060, file: !310, line: 607, column: 15)
!3428 = !DILocation(line: 609, column: 27, scope: !3427)
!3429 = !DILocation(line: 604, column: 18, scope: !3055)
!3430 = !DILocation(line: 610, column: 15, scope: !3427)
!3431 = !DILocation(line: 613, column: 17, scope: !3059)
!3432 = !DILocation(line: 614, column: 17, scope: !3059)
!3433 = !DILocation(line: 618, column: 29, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3059, file: !310, line: 618, column: 21)
!3435 = !DILocation(line: 618, column: 21, scope: !3059)
!3436 = distinct !{!3436, !3437, !3438}
!3437 = !DILocation(line: 621, column: 17, scope: !3059)
!3438 = !DILocation(line: 667, column: 44, scope: !3059)
!3439 = !DILocation(line: 619, column: 29, scope: !3434)
!3440 = !DILocation(line: 619, column: 19, scope: !3434)
!3441 = !DILocation(line: 623, column: 21, scope: !3076)
!3442 = !DILocation(line: 624, column: 56, scope: !3076)
!3443 = !DILocation(line: 624, column: 50, scope: !3076)
!3444 = !DILocation(line: 625, column: 53, scope: !3076)
!3445 = !DILocation(line: 613, column: 27, scope: !3059)
!3446 = !DILocation(line: 623, column: 29, scope: !3076)
!3447 = !DILocation(line: 624, column: 36, scope: !3076)
!3448 = !DILocation(line: 624, column: 28, scope: !3076)
!3449 = !DILocation(line: 626, column: 25, scope: !3076)
!3450 = !DILocation(line: 636, column: 38, scope: !3451)
!3451 = !DILexicalBlockFile(scope: !3452, file: !310, discriminator: 1)
!3452 = distinct !DILexicalBlock(scope: !3083, file: !310, line: 634, column: 23)
!3453 = !DILocation(line: 636, column: 48, scope: !3451)
!3454 = !DILocation(line: 636, column: 51, scope: !3455)
!3455 = !DILexicalBlockFile(scope: !3452, file: !310, discriminator: 2)
!3456 = !DILocation(line: 636, column: 48, scope: !3455)
!3457 = !DILocation(line: 636, column: 25, scope: !3458)
!3458 = !DILexicalBlockFile(scope: !3452, file: !310, discriminator: 3)
!3459 = !DILocation(line: 637, column: 28, scope: !3452)
!3460 = !DILocation(line: 636, column: 34, scope: !3451)
!3461 = distinct !{!3461, !3462, !3459}
!3462 = !DILocation(line: 636, column: 25, scope: !3452)
!3463 = !DILocation(line: 650, column: 43, scope: !3464)
!3464 = !DILexicalBlockFile(scope: !3465, file: !310, discriminator: 1)
!3465 = distinct !DILexicalBlock(scope: !3466, file: !310, line: 650, column: 29)
!3466 = distinct !DILexicalBlock(scope: !3080, file: !310, line: 650, column: 29)
!3467 = !DILocation(line: 647, column: 29, scope: !3081)
!3468 = !DILocation(line: 649, column: 36, scope: !3080)
!3469 = !DILocation(line: 651, column: 49, scope: !3465)
!3470 = !DILocation(line: 651, column: 39, scope: !3465)
!3471 = !DILocation(line: 651, column: 31, scope: !3465)
!3472 = !DILocation(line: 650, column: 53, scope: !3473)
!3473 = !DILexicalBlockFile(scope: !3465, file: !310, discriminator: 2)
!3474 = !DILocation(line: 650, column: 29, scope: !3475)
!3475 = !DILexicalBlockFile(scope: !3466, file: !310, discriminator: 1)
!3476 = distinct !{!3476, !3477, !3478}
!3477 = !DILocation(line: 650, column: 29, scope: !3466)
!3478 = !DILocation(line: 659, column: 33, scope: !3466)
!3479 = !DILocation(line: 666, column: 19, scope: !3059)
!3480 = !DILocation(line: 662, column: 41, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3082, file: !310, line: 662, column: 29)
!3482 = !DILocation(line: 662, column: 31, scope: !3481)
!3483 = !DILocation(line: 662, column: 29, scope: !3082)
!3484 = !DILocation(line: 664, column: 27, scope: !3082)
!3485 = !DILocation(line: 667, column: 26, scope: !3059)
!3486 = !DILocation(line: 667, column: 24, scope: !3059)
!3487 = !DILocation(line: 666, column: 19, scope: !3488)
!3488 = !DILexicalBlockFile(scope: !3076, file: !310, discriminator: 3)
!3489 = !DILocation(line: 668, column: 15, scope: !3060)
!3490 = !DILocation(line: 670, column: 40, scope: !3055)
!3491 = !DILocation(line: 672, column: 19, scope: !3088)
!3492 = !DILocation(line: 672, column: 45, scope: !3493)
!3493 = !DILexicalBlockFile(scope: !3088, file: !310, discriminator: 1)
!3494 = !DILocation(line: 672, column: 23, scope: !3088)
!3495 = !DILocation(line: 676, column: 33, scope: !3087)
!3496 = !DILocation(line: 676, column: 24, scope: !3087)
!3497 = !DILocation(line: 678, column: 17, scope: !3087)
!3498 = !DILocation(line: 680, column: 43, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3500, file: !310, line: 680, column: 25)
!3500 = distinct !DILexicalBlock(scope: !3501, file: !310, line: 679, column: 19)
!3501 = distinct !DILexicalBlock(scope: !3502, file: !310, line: 678, column: 17)
!3502 = distinct !DILexicalBlock(scope: !3087, file: !310, line: 678, column: 17)
!3503 = !DILocation(line: 682, column: 25, scope: !3504)
!3504 = !DILexicalBlockFile(scope: !3505, file: !310, discriminator: 1)
!3505 = distinct !DILexicalBlock(scope: !3506, file: !310, line: 682, column: 25)
!3506 = distinct !DILexicalBlock(scope: !3499, file: !310, line: 681, column: 23)
!3507 = !DILocation(line: 682, column: 25, scope: !3508)
!3508 = !DILexicalBlockFile(scope: !3509, file: !310, discriminator: 4)
!3509 = distinct !DILexicalBlock(scope: !3505, file: !310, line: 682, column: 25)
!3510 = !DILocation(line: 682, column: 25, scope: !3511)
!3511 = !DILexicalBlockFile(scope: !3509, file: !310, discriminator: 3)
!3512 = !DILocation(line: 682, column: 25, scope: !3513)
!3513 = !DILexicalBlockFile(scope: !3514, file: !310, discriminator: 6)
!3514 = distinct !DILexicalBlock(scope: !3515, file: !310, line: 682, column: 25)
!3515 = distinct !DILexicalBlock(scope: !3516, file: !310, line: 682, column: 25)
!3516 = distinct !DILexicalBlock(scope: !3509, file: !310, line: 682, column: 25)
!3517 = !DILocation(line: 682, column: 25, scope: !3518)
!3518 = !DILexicalBlockFile(scope: !3515, file: !310, discriminator: 6)
!3519 = !DILocation(line: 682, column: 25, scope: !3520)
!3520 = !DILexicalBlockFile(scope: !3514, file: !310, discriminator: 7)
!3521 = !DILocation(line: 682, column: 25, scope: !3522)
!3522 = !DILexicalBlockFile(scope: !3515, file: !310, discriminator: 8)
!3523 = !DILocation(line: 682, column: 25, scope: !3524)
!3524 = !DILexicalBlockFile(scope: !3525, file: !310, discriminator: 11)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !310, line: 682, column: 25)
!3526 = distinct !DILexicalBlock(scope: !3516, file: !310, line: 682, column: 25)
!3527 = !DILocation(line: 682, column: 25, scope: !3528)
!3528 = !DILexicalBlockFile(scope: !3526, file: !310, discriminator: 11)
!3529 = !DILocation(line: 682, column: 25, scope: !3530)
!3530 = !DILexicalBlockFile(scope: !3525, file: !310, discriminator: 12)
!3531 = !DILocation(line: 682, column: 25, scope: !3532)
!3532 = !DILexicalBlockFile(scope: !3526, file: !310, discriminator: 13)
!3533 = !DILocation(line: 682, column: 25, scope: !3534)
!3534 = !DILexicalBlockFile(scope: !3535, file: !310, discriminator: 16)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !310, line: 682, column: 25)
!3536 = distinct !DILexicalBlock(scope: !3516, file: !310, line: 682, column: 25)
!3537 = !DILocation(line: 682, column: 25, scope: !3538)
!3538 = !DILexicalBlockFile(scope: !3536, file: !310, discriminator: 16)
!3539 = !DILocation(line: 682, column: 25, scope: !3540)
!3540 = !DILexicalBlockFile(scope: !3535, file: !310, discriminator: 17)
!3541 = !DILocation(line: 682, column: 25, scope: !3542)
!3542 = !DILexicalBlockFile(scope: !3536, file: !310, discriminator: 18)
!3543 = !DILocation(line: 682, column: 25, scope: !3544)
!3544 = !DILexicalBlockFile(scope: !3516, file: !310, discriminator: 20)
!3545 = !DILocation(line: 682, column: 25, scope: !3546)
!3546 = !DILexicalBlockFile(scope: !3547, file: !310, discriminator: 22)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !310, line: 682, column: 25)
!3548 = distinct !DILexicalBlock(scope: !3505, file: !310, line: 682, column: 25)
!3549 = !DILocation(line: 682, column: 25, scope: !3550)
!3550 = !DILexicalBlockFile(scope: !3548, file: !310, discriminator: 22)
!3551 = !DILocation(line: 682, column: 25, scope: !3552)
!3552 = !DILexicalBlockFile(scope: !3547, file: !310, discriminator: 23)
!3553 = !DILocation(line: 682, column: 25, scope: !3554)
!3554 = !DILexicalBlockFile(scope: !3548, file: !310, discriminator: 24)
!3555 = !DILocation(line: 683, column: 25, scope: !3556)
!3556 = !DILexicalBlockFile(scope: !3557, file: !310, discriminator: 1)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !310, line: 683, column: 25)
!3558 = distinct !DILexicalBlock(scope: !3506, file: !310, line: 683, column: 25)
!3559 = !DILocation(line: 683, column: 25, scope: !3560)
!3560 = !DILexicalBlockFile(scope: !3558, file: !310, discriminator: 1)
!3561 = !DILocation(line: 683, column: 25, scope: !3562)
!3562 = !DILexicalBlockFile(scope: !3557, file: !310, discriminator: 2)
!3563 = !DILocation(line: 683, column: 25, scope: !3564)
!3564 = !DILexicalBlockFile(scope: !3558, file: !310, discriminator: 3)
!3565 = !DILocation(line: 684, column: 25, scope: !3566)
!3566 = !DILexicalBlockFile(scope: !3567, file: !310, discriminator: 1)
!3567 = distinct !DILexicalBlock(scope: !3568, file: !310, line: 684, column: 25)
!3568 = distinct !DILexicalBlock(scope: !3506, file: !310, line: 684, column: 25)
!3569 = !DILocation(line: 684, column: 25, scope: !3570)
!3570 = !DILexicalBlockFile(scope: !3568, file: !310, discriminator: 1)
!3571 = !DILocation(line: 684, column: 25, scope: !3572)
!3572 = !DILexicalBlockFile(scope: !3567, file: !310, discriminator: 2)
!3573 = !DILocation(line: 684, column: 25, scope: !3574)
!3574 = !DILexicalBlockFile(scope: !3568, file: !310, discriminator: 3)
!3575 = !DILocation(line: 685, column: 38, scope: !3506)
!3576 = !DILocation(line: 685, column: 33, scope: !3506)
!3577 = !DILocation(line: 686, column: 23, scope: !3506)
!3578 = !DILocation(line: 687, column: 30, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3499, file: !310, line: 687, column: 30)
!3580 = !DILocation(line: 687, column: 30, scope: !3499)
!3581 = !DILocation(line: 689, column: 25, scope: !3582)
!3582 = !DILexicalBlockFile(scope: !3583, file: !310, discriminator: 1)
!3583 = distinct !DILexicalBlock(scope: !3584, file: !310, line: 689, column: 25)
!3584 = distinct !DILexicalBlock(scope: !3585, file: !310, line: 689, column: 25)
!3585 = distinct !DILexicalBlock(scope: !3579, file: !310, line: 688, column: 23)
!3586 = !DILocation(line: 689, column: 25, scope: !3587)
!3587 = !DILexicalBlockFile(scope: !3584, file: !310, discriminator: 1)
!3588 = !DILocation(line: 689, column: 25, scope: !3589)
!3589 = !DILexicalBlockFile(scope: !3583, file: !310, discriminator: 2)
!3590 = !DILocation(line: 689, column: 25, scope: !3591)
!3591 = !DILexicalBlockFile(scope: !3584, file: !310, discriminator: 3)
!3592 = !DILocation(line: 691, column: 23, scope: !3585)
!3593 = !DILocation(line: 692, column: 35, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3500, file: !310, line: 692, column: 25)
!3595 = !DILocation(line: 692, column: 30, scope: !3594)
!3596 = !DILocation(line: 692, column: 25, scope: !3500)
!3597 = !DILocation(line: 694, column: 21, scope: !3598)
!3598 = !DILexicalBlockFile(scope: !3599, file: !310, discriminator: 1)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !310, line: 694, column: 21)
!3600 = distinct !DILexicalBlock(scope: !3500, file: !310, line: 694, column: 21)
!3601 = !DILocation(line: 694, column: 21, scope: !3602)
!3602 = !DILexicalBlockFile(scope: !3599, file: !310, discriminator: 2)
!3603 = !DILocation(line: 694, column: 21, scope: !3604)
!3604 = !DILexicalBlockFile(scope: !3605, file: !310, discriminator: 4)
!3605 = distinct !DILexicalBlock(scope: !3606, file: !310, line: 694, column: 21)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !310, line: 694, column: 21)
!3607 = distinct !DILexicalBlock(scope: !3599, file: !310, line: 694, column: 21)
!3608 = !DILocation(line: 694, column: 21, scope: !3609)
!3609 = !DILexicalBlockFile(scope: !3606, file: !310, discriminator: 4)
!3610 = !DILocation(line: 694, column: 21, scope: !3611)
!3611 = !DILexicalBlockFile(scope: !3605, file: !310, discriminator: 5)
!3612 = !DILocation(line: 694, column: 21, scope: !3613)
!3613 = !DILexicalBlockFile(scope: !3606, file: !310, discriminator: 6)
!3614 = !DILocation(line: 694, column: 21, scope: !3615)
!3615 = !DILexicalBlockFile(scope: !3616, file: !310, discriminator: 9)
!3616 = distinct !DILexicalBlock(scope: !3617, file: !310, line: 694, column: 21)
!3617 = distinct !DILexicalBlock(scope: !3607, file: !310, line: 694, column: 21)
!3618 = !DILocation(line: 694, column: 21, scope: !3619)
!3619 = !DILexicalBlockFile(scope: !3617, file: !310, discriminator: 9)
!3620 = !DILocation(line: 694, column: 21, scope: !3621)
!3621 = !DILexicalBlockFile(scope: !3616, file: !310, discriminator: 10)
!3622 = !DILocation(line: 694, column: 21, scope: !3623)
!3623 = !DILexicalBlockFile(scope: !3617, file: !310, discriminator: 11)
!3624 = !DILocation(line: 694, column: 21, scope: !3625)
!3625 = !DILexicalBlockFile(scope: !3607, file: !310, discriminator: 13)
!3626 = !DILocation(line: 695, column: 21, scope: !3627)
!3627 = !DILexicalBlockFile(scope: !3628, file: !310, discriminator: 1)
!3628 = distinct !DILexicalBlock(scope: !3629, file: !310, line: 695, column: 21)
!3629 = distinct !DILexicalBlock(scope: !3500, file: !310, line: 695, column: 21)
!3630 = !DILocation(line: 695, column: 21, scope: !3631)
!3631 = !DILexicalBlockFile(scope: !3629, file: !310, discriminator: 1)
!3632 = !DILocation(line: 695, column: 21, scope: !3633)
!3633 = !DILexicalBlockFile(scope: !3628, file: !310, discriminator: 2)
!3634 = !DILocation(line: 695, column: 21, scope: !3635)
!3635 = !DILexicalBlockFile(scope: !3629, file: !310, discriminator: 3)
!3636 = !DILocation(line: 696, column: 25, scope: !3500)
!3637 = !DILocation(line: 678, column: 17, scope: !3638)
!3638 = !DILexicalBlockFile(scope: !3501, file: !310, discriminator: 1)
!3639 = distinct !{!3639, !3640, !3641}
!3640 = !DILocation(line: 678, column: 17, scope: !3502)
!3641 = !DILocation(line: 697, column: 19, scope: !3502)
!3642 = !DILocation(line: 704, column: 34, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3047, file: !310, line: 704, column: 11)
!3644 = !DILocation(line: 706, column: 14, scope: !3643)
!3645 = !DILocation(line: 707, column: 14, scope: !3643)
!3646 = !DILocation(line: 707, column: 35, scope: !3647)
!3647 = !DILexicalBlockFile(scope: !3643, file: !310, discriminator: 1)
!3648 = !DILocation(line: 707, column: 17, scope: !3647)
!3649 = !DILocation(line: 707, column: 53, scope: !3647)
!3650 = !DILocation(line: 707, column: 47, scope: !3647)
!3651 = !DILocation(line: 707, column: 65, scope: !3647)
!3652 = !DILocation(line: 708, column: 15, scope: !3647)
!3653 = !DILocation(line: 708, column: 11, scope: !3643)
!3654 = !DILocation(line: 704, column: 11, scope: !3655)
!3655 = !DILexicalBlockFile(scope: !3047, file: !310, discriminator: 2)
!3656 = !DILocation(line: 712, column: 7, scope: !3657)
!3657 = !DILexicalBlockFile(scope: !3658, file: !310, discriminator: 1)
!3658 = distinct !DILexicalBlock(scope: !3047, file: !310, line: 712, column: 7)
!3659 = !DILocation(line: 712, column: 7, scope: !3660)
!3660 = !DILexicalBlockFile(scope: !3661, file: !310, discriminator: 4)
!3661 = distinct !DILexicalBlock(scope: !3658, file: !310, line: 712, column: 7)
!3662 = !DILocation(line: 712, column: 7, scope: !3663)
!3663 = !DILexicalBlockFile(scope: !3661, file: !310, discriminator: 3)
!3664 = !DILocation(line: 712, column: 7, scope: !3665)
!3665 = !DILexicalBlockFile(scope: !3666, file: !310, discriminator: 6)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !310, line: 712, column: 7)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !310, line: 712, column: 7)
!3668 = distinct !DILexicalBlock(scope: !3661, file: !310, line: 712, column: 7)
!3669 = !DILocation(line: 712, column: 7, scope: !3670)
!3670 = !DILexicalBlockFile(scope: !3667, file: !310, discriminator: 6)
!3671 = !DILocation(line: 712, column: 7, scope: !3672)
!3672 = !DILexicalBlockFile(scope: !3666, file: !310, discriminator: 7)
!3673 = !DILocation(line: 712, column: 7, scope: !3674)
!3674 = !DILexicalBlockFile(scope: !3667, file: !310, discriminator: 8)
!3675 = !DILocation(line: 712, column: 7, scope: !3676)
!3676 = !DILexicalBlockFile(scope: !3677, file: !310, discriminator: 11)
!3677 = distinct !DILexicalBlock(scope: !3678, file: !310, line: 712, column: 7)
!3678 = distinct !DILexicalBlock(scope: !3668, file: !310, line: 712, column: 7)
!3679 = !DILocation(line: 712, column: 7, scope: !3680)
!3680 = !DILexicalBlockFile(scope: !3678, file: !310, discriminator: 11)
!3681 = !DILocation(line: 712, column: 7, scope: !3682)
!3682 = !DILexicalBlockFile(scope: !3677, file: !310, discriminator: 12)
!3683 = !DILocation(line: 712, column: 7, scope: !3684)
!3684 = !DILexicalBlockFile(scope: !3678, file: !310, discriminator: 13)
!3685 = !DILocation(line: 712, column: 7, scope: !3686)
!3686 = !DILexicalBlockFile(scope: !3687, file: !310, discriminator: 16)
!3687 = distinct !DILexicalBlock(scope: !3688, file: !310, line: 712, column: 7)
!3688 = distinct !DILexicalBlock(scope: !3668, file: !310, line: 712, column: 7)
!3689 = !DILocation(line: 712, column: 7, scope: !3690)
!3690 = !DILexicalBlockFile(scope: !3688, file: !310, discriminator: 16)
!3691 = !DILocation(line: 712, column: 7, scope: !3692)
!3692 = !DILexicalBlockFile(scope: !3687, file: !310, discriminator: 17)
!3693 = !DILocation(line: 712, column: 7, scope: !3694)
!3694 = !DILexicalBlockFile(scope: !3688, file: !310, discriminator: 18)
!3695 = !DILocation(line: 712, column: 7, scope: !3696)
!3696 = !DILexicalBlockFile(scope: !3668, file: !310, discriminator: 20)
!3697 = !DILocation(line: 712, column: 7, scope: !3698)
!3698 = !DILexicalBlockFile(scope: !3699, file: !310, discriminator: 22)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !310, line: 712, column: 7)
!3700 = distinct !DILexicalBlock(scope: !3658, file: !310, line: 712, column: 7)
!3701 = !DILocation(line: 712, column: 7, scope: !3702)
!3702 = !DILexicalBlockFile(scope: !3700, file: !310, discriminator: 22)
!3703 = !DILocation(line: 712, column: 7, scope: !3704)
!3704 = !DILexicalBlockFile(scope: !3699, file: !310, discriminator: 23)
!3705 = !DILocation(line: 712, column: 7, scope: !3706)
!3706 = !DILexicalBlockFile(scope: !3700, file: !310, discriminator: 24)
!3707 = !DILocation(line: 715, column: 7, scope: !3708)
!3708 = !DILexicalBlockFile(scope: !3709, file: !310, discriminator: 1)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !310, line: 715, column: 7)
!3710 = distinct !DILexicalBlock(scope: !3047, file: !310, line: 715, column: 7)
!3711 = !DILocation(line: 715, column: 7, scope: !3712)
!3712 = !DILexicalBlockFile(scope: !3709, file: !310, discriminator: 2)
!3713 = !DILocation(line: 715, column: 7, scope: !3714)
!3714 = !DILexicalBlockFile(scope: !3715, file: !310, discriminator: 4)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !310, line: 715, column: 7)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !310, line: 715, column: 7)
!3717 = distinct !DILexicalBlock(scope: !3709, file: !310, line: 715, column: 7)
!3718 = !DILocation(line: 715, column: 7, scope: !3719)
!3719 = !DILexicalBlockFile(scope: !3716, file: !310, discriminator: 4)
!3720 = !DILocation(line: 715, column: 7, scope: !3721)
!3721 = !DILexicalBlockFile(scope: !3715, file: !310, discriminator: 5)
!3722 = !DILocation(line: 715, column: 7, scope: !3723)
!3723 = !DILexicalBlockFile(scope: !3716, file: !310, discriminator: 6)
!3724 = !DILocation(line: 715, column: 7, scope: !3725)
!3725 = !DILexicalBlockFile(scope: !3726, file: !310, discriminator: 9)
!3726 = distinct !DILexicalBlock(scope: !3727, file: !310, line: 715, column: 7)
!3727 = distinct !DILexicalBlock(scope: !3717, file: !310, line: 715, column: 7)
!3728 = !DILocation(line: 715, column: 7, scope: !3729)
!3729 = !DILexicalBlockFile(scope: !3727, file: !310, discriminator: 9)
!3730 = !DILocation(line: 715, column: 7, scope: !3731)
!3731 = !DILexicalBlockFile(scope: !3726, file: !310, discriminator: 10)
!3732 = !DILocation(line: 715, column: 7, scope: !3733)
!3733 = !DILexicalBlockFile(scope: !3727, file: !310, discriminator: 11)
!3734 = !DILocation(line: 715, column: 7, scope: !3735)
!3735 = !DILexicalBlockFile(scope: !3717, file: !310, discriminator: 13)
!3736 = !DILocation(line: 716, column: 7, scope: !3737)
!3737 = !DILexicalBlockFile(scope: !3738, file: !310, discriminator: 1)
!3738 = distinct !DILexicalBlock(scope: !3739, file: !310, line: 716, column: 7)
!3739 = distinct !DILexicalBlock(scope: !3047, file: !310, line: 716, column: 7)
!3740 = !DILocation(line: 716, column: 7, scope: !3741)
!3741 = !DILexicalBlockFile(scope: !3739, file: !310, discriminator: 1)
!3742 = !DILocation(line: 716, column: 7, scope: !3743)
!3743 = !DILexicalBlockFile(scope: !3738, file: !310, discriminator: 2)
!3744 = !DILocation(line: 716, column: 7, scope: !3745)
!3745 = !DILexicalBlockFile(scope: !3739, file: !310, discriminator: 3)
!3746 = !DILocation(line: 718, column: 13, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3047, file: !310, line: 718, column: 11)
!3748 = !DILocation(line: 718, column: 11, scope: !3047)
!3749 = !DILocation(line: 720, column: 5, scope: !3048)
!3750 = !DILocation(line: 392, column: 75, scope: !3751)
!3751 = !DILexicalBlockFile(scope: !3048, file: !310, discriminator: 5)
!3752 = !DILocation(line: 392, column: 3, scope: !3751)
!3753 = distinct !{!3753, !3754, !3755}
!3754 = !DILocation(line: 392, column: 3, scope: !3049)
!3755 = !DILocation(line: 720, column: 5, scope: !3049)
!3756 = !DILocation(line: 722, column: 11, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3020, file: !310, line: 722, column: 7)
!3758 = !DILocation(line: 722, column: 16, scope: !3757)
!3759 = !DILocation(line: 730, column: 51, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3020, file: !310, line: 730, column: 7)
!3761 = !DILocation(line: 731, column: 10, scope: !3762)
!3762 = !DILexicalBlockFile(scope: !3760, file: !310, discriminator: 1)
!3763 = !DILocation(line: 733, column: 11, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3765, file: !310, line: 733, column: 11)
!3765 = distinct !DILexicalBlock(scope: !3760, file: !310, line: 732, column: 5)
!3766 = !DILocation(line: 733, column: 11, scope: !3765)
!3767 = !DILocation(line: 734, column: 16, scope: !3764)
!3768 = !DILocation(line: 734, column: 9, scope: !3764)
!3769 = !DILocation(line: 738, column: 18, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3764, file: !310, line: 738, column: 16)
!3771 = !DILocation(line: 738, column: 32, scope: !3772)
!3772 = !DILexicalBlockFile(scope: !3770, file: !310, discriminator: 1)
!3773 = !DILocation(line: 738, column: 29, scope: !3770)
!3774 = !DILocation(line: 747, column: 7, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3020, file: !310, line: 747, column: 7)
!3776 = !DILocation(line: 747, column: 20, scope: !3775)
!3777 = !DILocation(line: 748, column: 12, scope: !3778)
!3778 = !DILexicalBlockFile(scope: !3779, file: !310, discriminator: 1)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !310, line: 748, column: 5)
!3780 = distinct !DILexicalBlock(scope: !3775, file: !310, line: 748, column: 5)
!3781 = !DILocation(line: 748, column: 5, scope: !3782)
!3782 = !DILexicalBlockFile(scope: !3780, file: !310, discriminator: 1)
!3783 = !DILocation(line: 749, column: 7, scope: !3784)
!3784 = !DILexicalBlockFile(scope: !3785, file: !310, discriminator: 1)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !310, line: 749, column: 7)
!3786 = distinct !DILexicalBlock(scope: !3779, file: !310, line: 749, column: 7)
!3787 = !DILocation(line: 749, column: 7, scope: !3788)
!3788 = !DILexicalBlockFile(scope: !3786, file: !310, discriminator: 1)
!3789 = !DILocation(line: 749, column: 7, scope: !3790)
!3790 = !DILexicalBlockFile(scope: !3785, file: !310, discriminator: 2)
!3791 = !DILocation(line: 749, column: 7, scope: !3792)
!3792 = !DILexicalBlockFile(scope: !3786, file: !310, discriminator: 3)
!3793 = !DILocation(line: 748, column: 39, scope: !3794)
!3794 = !DILexicalBlockFile(scope: !3779, file: !310, discriminator: 2)
!3795 = distinct !{!3795, !3796, !3797}
!3796 = !DILocation(line: 748, column: 5, scope: !3780)
!3797 = !DILocation(line: 749, column: 7, scope: !3780)
!3798 = !DILocation(line: 751, column: 11, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3020, file: !310, line: 751, column: 7)
!3800 = !DILocation(line: 751, column: 7, scope: !3020)
!3801 = !DILocation(line: 752, column: 5, scope: !3799)
!3802 = !DILocation(line: 752, column: 17, scope: !3799)
!3803 = !DILocation(line: 758, column: 21, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3020, file: !310, line: 758, column: 7)
!3805 = !DILocation(line: 758, column: 54, scope: !3806)
!3806 = !DILexicalBlockFile(scope: !3804, file: !310, discriminator: 1)
!3807 = !DILocation(line: 758, column: 51, scope: !3804)
!3808 = !DILocation(line: 762, column: 42, scope: !3020)
!3809 = !DILocation(line: 760, column: 10, scope: !3020)
!3810 = !DILocation(line: 760, column: 3, scope: !3020)
!3811 = !DILocation(line: 764, column: 1, scope: !3020)
!3812 = distinct !DISubprogram(name: "gettext_quote", scope: !310, file: !310, line: 199, type: !3813, isLocal: true, isDefinition: true, scopeLine: 200, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !3815)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!68, !68, !5}
!3815 = !{!3816, !3817, !3818, !3819}
!3816 = !DILocalVariable(name: "msgid", arg: 1, scope: !3812, file: !310, line: 199, type: !68)
!3817 = !DILocalVariable(name: "s", arg: 2, scope: !3812, file: !310, line: 199, type: !5)
!3818 = !DILocalVariable(name: "translation", scope: !3812, file: !310, line: 201, type: !68)
!3819 = !DILocalVariable(name: "locale_code", scope: !3812, file: !310, line: 202, type: !68)
!3820 = !DILocation(line: 199, column: 28, scope: !3812)
!3821 = !DILocation(line: 199, column: 54, scope: !3812)
!3822 = !DILocation(line: 201, column: 29, scope: !3812)
!3823 = !DILocation(line: 201, column: 15, scope: !3812)
!3824 = !DILocation(line: 204, column: 19, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3812, file: !310, line: 204, column: 7)
!3826 = !DILocation(line: 204, column: 7, scope: !3812)
!3827 = !DILocation(line: 225, column: 17, scope: !3812)
!3828 = !DILocation(line: 202, column: 15, scope: !3812)
!3829 = !DILocalVariable(name: "s2", arg: 2, scope: !3830, file: !3831, line: 160, type: !68)
!3830 = distinct !DISubprogram(name: "strcaseeq0", scope: !3831, file: !3831, line: 160, type: !3832, isLocal: true, isDefinition: true, scopeLine: 161, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !3834)
!3831 = !DIFile(filename: "./lib/c-strcaseeq.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!70, !68, !68, !59, !59, !59, !59, !59, !59, !59, !59, !59}
!3834 = !{!3835, !3829, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844}
!3835 = !DILocalVariable(name: "s1", arg: 1, scope: !3830, file: !3831, line: 160, type: !68)
!3836 = !DILocalVariable(name: "s20", arg: 3, scope: !3830, file: !3831, line: 160, type: !59)
!3837 = !DILocalVariable(name: "s21", arg: 4, scope: !3830, file: !3831, line: 160, type: !59)
!3838 = !DILocalVariable(name: "s22", arg: 5, scope: !3830, file: !3831, line: 160, type: !59)
!3839 = !DILocalVariable(name: "s23", arg: 6, scope: !3830, file: !3831, line: 160, type: !59)
!3840 = !DILocalVariable(name: "s24", arg: 7, scope: !3830, file: !3831, line: 160, type: !59)
!3841 = !DILocalVariable(name: "s25", arg: 8, scope: !3830, file: !3831, line: 160, type: !59)
!3842 = !DILocalVariable(name: "s26", arg: 9, scope: !3830, file: !3831, line: 160, type: !59)
!3843 = !DILocalVariable(name: "s27", arg: 10, scope: !3830, file: !3831, line: 160, type: !59)
!3844 = !DILocalVariable(name: "s28", arg: 11, scope: !3830, file: !3831, line: 160, type: !59)
!3845 = !DILocation(line: 160, column: 41, scope: !3830, inlinedAt: !3846)
!3846 = distinct !DILocation(line: 226, column: 7, scope: !3847)
!3847 = distinct !DILexicalBlock(scope: !3812, file: !310, line: 226, column: 7)
!3848 = !DILocation(line: 160, column: 120, scope: !3830, inlinedAt: !3846)
!3849 = !DILocation(line: 160, column: 130, scope: !3830, inlinedAt: !3846)
!3850 = !DILocation(line: 162, column: 7, scope: !3851, inlinedAt: !3846)
!3851 = !DILexicalBlockFile(scope: !3852, file: !3831, discriminator: 1)
!3852 = distinct !DILexicalBlock(scope: !3830, file: !3831, line: 162, column: 7)
!3853 = !DILocalVariable(name: "s2", arg: 2, scope: !3854, file: !3831, line: 146, type: !68)
!3854 = distinct !DISubprogram(name: "strcaseeq1", scope: !3831, file: !3831, line: 146, type: !3855, isLocal: true, isDefinition: true, scopeLine: 147, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !3857)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!70, !68, !68, !59, !59, !59, !59, !59, !59, !59, !59}
!3857 = !{!3858, !3853, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866}
!3858 = !DILocalVariable(name: "s1", arg: 1, scope: !3854, file: !3831, line: 146, type: !68)
!3859 = !DILocalVariable(name: "s21", arg: 3, scope: !3854, file: !3831, line: 146, type: !59)
!3860 = !DILocalVariable(name: "s22", arg: 4, scope: !3854, file: !3831, line: 146, type: !59)
!3861 = !DILocalVariable(name: "s23", arg: 5, scope: !3854, file: !3831, line: 146, type: !59)
!3862 = !DILocalVariable(name: "s24", arg: 6, scope: !3854, file: !3831, line: 146, type: !59)
!3863 = !DILocalVariable(name: "s25", arg: 7, scope: !3854, file: !3831, line: 146, type: !59)
!3864 = !DILocalVariable(name: "s26", arg: 8, scope: !3854, file: !3831, line: 146, type: !59)
!3865 = !DILocalVariable(name: "s27", arg: 9, scope: !3854, file: !3831, line: 146, type: !59)
!3866 = !DILocalVariable(name: "s28", arg: 10, scope: !3854, file: !3831, line: 146, type: !59)
!3867 = !DILocation(line: 146, column: 41, scope: !3854, inlinedAt: !3868)
!3868 = distinct !DILocation(line: 167, column: 16, scope: !3869, inlinedAt: !3846)
!3869 = distinct !DILexicalBlock(scope: !3870, file: !3831, line: 164, column: 11)
!3870 = distinct !DILexicalBlock(scope: !3852, file: !3831, line: 163, column: 5)
!3871 = !DILocation(line: 146, column: 110, scope: !3854, inlinedAt: !3868)
!3872 = !DILocation(line: 146, column: 120, scope: !3854, inlinedAt: !3868)
!3873 = !DILocation(line: 148, column: 7, scope: !3874, inlinedAt: !3868)
!3874 = !DILexicalBlockFile(scope: !3875, file: !3831, discriminator: 1)
!3875 = distinct !DILexicalBlock(scope: !3854, file: !3831, line: 148, column: 7)
!3876 = !DILocalVariable(name: "s2", arg: 2, scope: !3877, file: !3831, line: 132, type: !68)
!3877 = distinct !DISubprogram(name: "strcaseeq2", scope: !3831, file: !3831, line: 132, type: !3878, isLocal: true, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !3880)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!70, !68, !68, !59, !59, !59, !59, !59, !59, !59}
!3880 = !{!3881, !3876, !3882, !3883, !3884, !3885, !3886, !3887, !3888}
!3881 = !DILocalVariable(name: "s1", arg: 1, scope: !3877, file: !3831, line: 132, type: !68)
!3882 = !DILocalVariable(name: "s22", arg: 3, scope: !3877, file: !3831, line: 132, type: !59)
!3883 = !DILocalVariable(name: "s23", arg: 4, scope: !3877, file: !3831, line: 132, type: !59)
!3884 = !DILocalVariable(name: "s24", arg: 5, scope: !3877, file: !3831, line: 132, type: !59)
!3885 = !DILocalVariable(name: "s25", arg: 6, scope: !3877, file: !3831, line: 132, type: !59)
!3886 = !DILocalVariable(name: "s26", arg: 7, scope: !3877, file: !3831, line: 132, type: !59)
!3887 = !DILocalVariable(name: "s27", arg: 8, scope: !3877, file: !3831, line: 132, type: !59)
!3888 = !DILocalVariable(name: "s28", arg: 9, scope: !3877, file: !3831, line: 132, type: !59)
!3889 = !DILocation(line: 132, column: 41, scope: !3877, inlinedAt: !3890)
!3890 = distinct !DILocation(line: 153, column: 16, scope: !3891, inlinedAt: !3868)
!3891 = distinct !DILexicalBlock(scope: !3892, file: !3831, line: 150, column: 11)
!3892 = distinct !DILexicalBlock(scope: !3875, file: !3831, line: 149, column: 5)
!3893 = !DILocation(line: 132, column: 100, scope: !3877, inlinedAt: !3890)
!3894 = !DILocation(line: 132, column: 110, scope: !3877, inlinedAt: !3890)
!3895 = !DILocation(line: 134, column: 7, scope: !3896, inlinedAt: !3890)
!3896 = !DILexicalBlockFile(scope: !3897, file: !3831, discriminator: 1)
!3897 = distinct !DILexicalBlock(scope: !3877, file: !3831, line: 134, column: 7)
!3898 = !DILocalVariable(name: "s2", arg: 2, scope: !3899, file: !3831, line: 118, type: !68)
!3899 = distinct !DISubprogram(name: "strcaseeq3", scope: !3831, file: !3831, line: 118, type: !3900, isLocal: true, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !3902)
!3900 = !DISubroutineType(types: !3901)
!3901 = !{!70, !68, !68, !59, !59, !59, !59, !59, !59}
!3902 = !{!3903, !3898, !3904, !3905, !3906, !3907, !3908, !3909}
!3903 = !DILocalVariable(name: "s1", arg: 1, scope: !3899, file: !3831, line: 118, type: !68)
!3904 = !DILocalVariable(name: "s23", arg: 3, scope: !3899, file: !3831, line: 118, type: !59)
!3905 = !DILocalVariable(name: "s24", arg: 4, scope: !3899, file: !3831, line: 118, type: !59)
!3906 = !DILocalVariable(name: "s25", arg: 5, scope: !3899, file: !3831, line: 118, type: !59)
!3907 = !DILocalVariable(name: "s26", arg: 6, scope: !3899, file: !3831, line: 118, type: !59)
!3908 = !DILocalVariable(name: "s27", arg: 7, scope: !3899, file: !3831, line: 118, type: !59)
!3909 = !DILocalVariable(name: "s28", arg: 8, scope: !3899, file: !3831, line: 118, type: !59)
!3910 = !DILocation(line: 118, column: 41, scope: !3899, inlinedAt: !3911)
!3911 = distinct !DILocation(line: 139, column: 16, scope: !3912, inlinedAt: !3890)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !3831, line: 136, column: 11)
!3913 = distinct !DILexicalBlock(scope: !3897, file: !3831, line: 135, column: 5)
!3914 = !DILocation(line: 118, column: 90, scope: !3899, inlinedAt: !3911)
!3915 = !DILocation(line: 118, column: 100, scope: !3899, inlinedAt: !3911)
!3916 = !DILocation(line: 120, column: 7, scope: !3917, inlinedAt: !3911)
!3917 = !DILexicalBlockFile(scope: !3918, file: !3831, discriminator: 2)
!3918 = distinct !DILexicalBlock(scope: !3899, file: !3831, line: 120, column: 7)
!3919 = !DILocation(line: 120, column: 7, scope: !3920, inlinedAt: !3911)
!3920 = !DILexicalBlockFile(scope: !3899, file: !3831, discriminator: 2)
!3921 = !DILocalVariable(name: "s2", arg: 2, scope: !3922, file: !3831, line: 104, type: !68)
!3922 = distinct !DISubprogram(name: "strcaseeq4", scope: !3831, file: !3831, line: 104, type: !3923, isLocal: true, isDefinition: true, scopeLine: 105, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !3925)
!3923 = !DISubroutineType(types: !3924)
!3924 = !{!70, !68, !68, !59, !59, !59, !59, !59}
!3925 = !{!3926, !3921, !3927, !3928, !3929, !3930, !3931}
!3926 = !DILocalVariable(name: "s1", arg: 1, scope: !3922, file: !3831, line: 104, type: !68)
!3927 = !DILocalVariable(name: "s24", arg: 3, scope: !3922, file: !3831, line: 104, type: !59)
!3928 = !DILocalVariable(name: "s25", arg: 4, scope: !3922, file: !3831, line: 104, type: !59)
!3929 = !DILocalVariable(name: "s26", arg: 5, scope: !3922, file: !3831, line: 104, type: !59)
!3930 = !DILocalVariable(name: "s27", arg: 6, scope: !3922, file: !3831, line: 104, type: !59)
!3931 = !DILocalVariable(name: "s28", arg: 7, scope: !3922, file: !3831, line: 104, type: !59)
!3932 = !DILocation(line: 104, column: 41, scope: !3922, inlinedAt: !3933)
!3933 = distinct !DILocation(line: 125, column: 16, scope: !3934, inlinedAt: !3911)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !3831, line: 122, column: 11)
!3935 = distinct !DILexicalBlock(scope: !3918, file: !3831, line: 121, column: 5)
!3936 = !DILocation(line: 104, column: 80, scope: !3922, inlinedAt: !3933)
!3937 = !DILocation(line: 104, column: 90, scope: !3922, inlinedAt: !3933)
!3938 = !DILocation(line: 106, column: 7, scope: !3939, inlinedAt: !3933)
!3939 = !DILexicalBlockFile(scope: !3940, file: !3831, discriminator: 2)
!3940 = distinct !DILexicalBlock(scope: !3922, file: !3831, line: 106, column: 7)
!3941 = !DILocation(line: 106, column: 7, scope: !3942, inlinedAt: !3933)
!3942 = !DILexicalBlockFile(scope: !3922, file: !3831, discriminator: 2)
!3943 = !DILocalVariable(name: "s2", arg: 2, scope: !3944, file: !3831, line: 90, type: !68)
!3944 = distinct !DISubprogram(name: "strcaseeq5", scope: !3831, file: !3831, line: 90, type: !3945, isLocal: true, isDefinition: true, scopeLine: 91, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !3947)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!70, !68, !68, !59, !59, !59, !59}
!3947 = !{!3948, !3943, !3949, !3950, !3951, !3952}
!3948 = !DILocalVariable(name: "s1", arg: 1, scope: !3944, file: !3831, line: 90, type: !68)
!3949 = !DILocalVariable(name: "s25", arg: 3, scope: !3944, file: !3831, line: 90, type: !59)
!3950 = !DILocalVariable(name: "s26", arg: 4, scope: !3944, file: !3831, line: 90, type: !59)
!3951 = !DILocalVariable(name: "s27", arg: 5, scope: !3944, file: !3831, line: 90, type: !59)
!3952 = !DILocalVariable(name: "s28", arg: 6, scope: !3944, file: !3831, line: 90, type: !59)
!3953 = !DILocation(line: 90, column: 41, scope: !3944, inlinedAt: !3954)
!3954 = distinct !DILocation(line: 111, column: 16, scope: !3955, inlinedAt: !3933)
!3955 = distinct !DILexicalBlock(scope: !3956, file: !3831, line: 108, column: 11)
!3956 = distinct !DILexicalBlock(scope: !3940, file: !3831, line: 107, column: 5)
!3957 = !DILocation(line: 90, column: 70, scope: !3944, inlinedAt: !3954)
!3958 = !DILocation(line: 90, column: 80, scope: !3944, inlinedAt: !3954)
!3959 = !DILocation(line: 92, column: 7, scope: !3960, inlinedAt: !3954)
!3960 = !DILexicalBlockFile(scope: !3961, file: !3831, discriminator: 2)
!3961 = distinct !DILexicalBlock(scope: !3944, file: !3831, line: 92, column: 7)
!3962 = !DILocation(line: 92, column: 7, scope: !3963, inlinedAt: !3954)
!3963 = !DILexicalBlockFile(scope: !3944, file: !3831, discriminator: 2)
!3964 = !DILocation(line: 227, column: 12, scope: !3847)
!3965 = !DILocation(line: 227, column: 21, scope: !3847)
!3966 = !DILocation(line: 227, column: 5, scope: !3847)
!3967 = !DILocation(line: 146, column: 41, scope: !3854, inlinedAt: !3968)
!3968 = distinct !DILocation(line: 167, column: 16, scope: !3869, inlinedAt: !3969)
!3969 = distinct !DILocation(line: 228, column: 7, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3812, file: !310, line: 228, column: 7)
!3971 = !DILocation(line: 146, column: 110, scope: !3854, inlinedAt: !3968)
!3972 = !DILocation(line: 146, column: 120, scope: !3854, inlinedAt: !3968)
!3973 = !DILocation(line: 148, column: 7, scope: !3874, inlinedAt: !3968)
!3974 = !DILocation(line: 132, column: 41, scope: !3877, inlinedAt: !3975)
!3975 = distinct !DILocation(line: 153, column: 16, scope: !3891, inlinedAt: !3968)
!3976 = !DILocation(line: 132, column: 100, scope: !3877, inlinedAt: !3975)
!3977 = !DILocation(line: 132, column: 110, scope: !3877, inlinedAt: !3975)
!3978 = !DILocation(line: 134, column: 7, scope: !3979, inlinedAt: !3975)
!3979 = !DILexicalBlockFile(scope: !3897, file: !3831, discriminator: 2)
!3980 = !DILocation(line: 134, column: 7, scope: !3981, inlinedAt: !3975)
!3981 = !DILexicalBlockFile(scope: !3877, file: !3831, discriminator: 2)
!3982 = !DILocation(line: 118, column: 41, scope: !3899, inlinedAt: !3983)
!3983 = distinct !DILocation(line: 139, column: 16, scope: !3912, inlinedAt: !3975)
!3984 = !DILocation(line: 118, column: 90, scope: !3899, inlinedAt: !3983)
!3985 = !DILocation(line: 118, column: 100, scope: !3899, inlinedAt: !3983)
!3986 = !DILocation(line: 120, column: 7, scope: !3917, inlinedAt: !3983)
!3987 = !DILocation(line: 120, column: 7, scope: !3920, inlinedAt: !3983)
!3988 = !DILocation(line: 104, column: 41, scope: !3922, inlinedAt: !3989)
!3989 = distinct !DILocation(line: 125, column: 16, scope: !3934, inlinedAt: !3983)
!3990 = !DILocation(line: 104, column: 80, scope: !3922, inlinedAt: !3989)
!3991 = !DILocation(line: 104, column: 90, scope: !3922, inlinedAt: !3989)
!3992 = !DILocation(line: 106, column: 7, scope: !3939, inlinedAt: !3989)
!3993 = !DILocation(line: 106, column: 7, scope: !3942, inlinedAt: !3989)
!3994 = !DILocation(line: 90, column: 41, scope: !3944, inlinedAt: !3995)
!3995 = distinct !DILocation(line: 111, column: 16, scope: !3955, inlinedAt: !3989)
!3996 = !DILocation(line: 90, column: 70, scope: !3944, inlinedAt: !3995)
!3997 = !DILocation(line: 90, column: 80, scope: !3944, inlinedAt: !3995)
!3998 = !DILocation(line: 92, column: 7, scope: !3960, inlinedAt: !3995)
!3999 = !DILocation(line: 92, column: 7, scope: !3963, inlinedAt: !3995)
!4000 = !DILocalVariable(name: "s2", arg: 2, scope: !4001, file: !3831, line: 76, type: !68)
!4001 = distinct !DISubprogram(name: "strcaseeq6", scope: !3831, file: !3831, line: 76, type: !4002, isLocal: true, isDefinition: true, scopeLine: 77, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4004)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!70, !68, !68, !59, !59, !59}
!4004 = !{!4005, !4000, !4006, !4007, !4008}
!4005 = !DILocalVariable(name: "s1", arg: 1, scope: !4001, file: !3831, line: 76, type: !68)
!4006 = !DILocalVariable(name: "s26", arg: 3, scope: !4001, file: !3831, line: 76, type: !59)
!4007 = !DILocalVariable(name: "s27", arg: 4, scope: !4001, file: !3831, line: 76, type: !59)
!4008 = !DILocalVariable(name: "s28", arg: 5, scope: !4001, file: !3831, line: 76, type: !59)
!4009 = !DILocation(line: 76, column: 41, scope: !4001, inlinedAt: !4010)
!4010 = distinct !DILocation(line: 97, column: 16, scope: !4011, inlinedAt: !3995)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !3831, line: 94, column: 11)
!4012 = distinct !DILexicalBlock(scope: !3961, file: !3831, line: 93, column: 5)
!4013 = !DILocation(line: 76, column: 60, scope: !4001, inlinedAt: !4010)
!4014 = !DILocation(line: 76, column: 70, scope: !4001, inlinedAt: !4010)
!4015 = !DILocation(line: 78, column: 7, scope: !4016, inlinedAt: !4010)
!4016 = !DILexicalBlockFile(scope: !4017, file: !3831, discriminator: 2)
!4017 = distinct !DILexicalBlock(scope: !4001, file: !3831, line: 78, column: 7)
!4018 = !DILocation(line: 78, column: 7, scope: !4019, inlinedAt: !4010)
!4019 = !DILexicalBlockFile(scope: !4001, file: !3831, discriminator: 2)
!4020 = !DILocalVariable(name: "s2", arg: 2, scope: !4021, file: !3831, line: 62, type: !68)
!4021 = distinct !DISubprogram(name: "strcaseeq7", scope: !3831, file: !3831, line: 62, type: !4022, isLocal: true, isDefinition: true, scopeLine: 63, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4024)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!70, !68, !68, !59, !59}
!4024 = !{!4025, !4020, !4026, !4027}
!4025 = !DILocalVariable(name: "s1", arg: 1, scope: !4021, file: !3831, line: 62, type: !68)
!4026 = !DILocalVariable(name: "s27", arg: 3, scope: !4021, file: !3831, line: 62, type: !59)
!4027 = !DILocalVariable(name: "s28", arg: 4, scope: !4021, file: !3831, line: 62, type: !59)
!4028 = !DILocation(line: 62, column: 41, scope: !4021, inlinedAt: !4029)
!4029 = distinct !DILocation(line: 83, column: 16, scope: !4030, inlinedAt: !4010)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !3831, line: 80, column: 11)
!4031 = distinct !DILexicalBlock(scope: !4017, file: !3831, line: 79, column: 5)
!4032 = !DILocation(line: 62, column: 50, scope: !4021, inlinedAt: !4029)
!4033 = !DILocation(line: 62, column: 60, scope: !4021, inlinedAt: !4029)
!4034 = !DILocation(line: 64, column: 7, scope: !4035, inlinedAt: !4029)
!4035 = !DILexicalBlockFile(scope: !4036, file: !3831, discriminator: 2)
!4036 = distinct !DILexicalBlock(scope: !4021, file: !3831, line: 64, column: 7)
!4037 = !DILocation(line: 228, column: 7, scope: !3812)
!4038 = !DILocation(line: 229, column: 12, scope: !3970)
!4039 = !DILocation(line: 229, column: 21, scope: !3970)
!4040 = !DILocation(line: 229, column: 5, scope: !3970)
!4041 = !DILocation(line: 231, column: 13, scope: !3812)
!4042 = !DILocation(line: 231, column: 11, scope: !3812)
!4043 = !DILocation(line: 231, column: 3, scope: !3812)
!4044 = !DILocation(line: 232, column: 1, scope: !3812)
!4045 = distinct !DISubprogram(name: "quotearg_alloc", scope: !310, file: !310, line: 791, type: !4046, isLocal: false, isDefinition: true, scopeLine: 793, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4048)
!4046 = !DISubroutineType(types: !4047)
!4047 = !{!58, !68, !61, !2888}
!4048 = !{!4049, !4050, !4051}
!4049 = !DILocalVariable(name: "arg", arg: 1, scope: !4045, file: !310, line: 791, type: !68)
!4050 = !DILocalVariable(name: "argsize", arg: 2, scope: !4045, file: !310, line: 791, type: !61)
!4051 = !DILocalVariable(name: "o", arg: 3, scope: !4045, file: !310, line: 792, type: !2888)
!4052 = !DILocation(line: 791, column: 29, scope: !4045)
!4053 = !DILocation(line: 791, column: 41, scope: !4045)
!4054 = !DILocation(line: 792, column: 47, scope: !4045)
!4055 = !DILocalVariable(name: "arg", arg: 1, scope: !4056, file: !310, line: 804, type: !68)
!4056 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !310, file: !310, line: 804, type: !4057, isLocal: false, isDefinition: true, scopeLine: 806, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4059)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!58, !68, !61, !763, !2888}
!4059 = !{!4055, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067}
!4060 = !DILocalVariable(name: "argsize", arg: 2, scope: !4056, file: !310, line: 804, type: !61)
!4061 = !DILocalVariable(name: "size", arg: 3, scope: !4056, file: !310, line: 804, type: !763)
!4062 = !DILocalVariable(name: "o", arg: 4, scope: !4056, file: !310, line: 805, type: !2888)
!4063 = !DILocalVariable(name: "p", scope: !4056, file: !310, line: 807, type: !2888)
!4064 = !DILocalVariable(name: "e", scope: !4056, file: !310, line: 808, type: !70)
!4065 = !DILocalVariable(name: "flags", scope: !4056, file: !310, line: 810, type: !70)
!4066 = !DILocalVariable(name: "bufsize", scope: !4056, file: !310, line: 811, type: !61)
!4067 = !DILocalVariable(name: "buf", scope: !4056, file: !310, line: 815, type: !58)
!4068 = !DILocation(line: 804, column: 33, scope: !4056, inlinedAt: !4069)
!4069 = distinct !DILocation(line: 794, column: 10, scope: !4045)
!4070 = !DILocation(line: 804, column: 45, scope: !4056, inlinedAt: !4069)
!4071 = !DILocation(line: 804, column: 62, scope: !4056, inlinedAt: !4069)
!4072 = !DILocation(line: 805, column: 51, scope: !4056, inlinedAt: !4069)
!4073 = !DILocation(line: 807, column: 37, scope: !4056, inlinedAt: !4069)
!4074 = !DILocation(line: 807, column: 33, scope: !4056, inlinedAt: !4069)
!4075 = !DILocation(line: 808, column: 11, scope: !4056, inlinedAt: !4069)
!4076 = !DILocation(line: 808, column: 7, scope: !4056, inlinedAt: !4069)
!4077 = !DILocation(line: 810, column: 18, scope: !4056, inlinedAt: !4069)
!4078 = !DILocation(line: 810, column: 24, scope: !4056, inlinedAt: !4069)
!4079 = !DILocation(line: 810, column: 7, scope: !4056, inlinedAt: !4069)
!4080 = !DILocation(line: 811, column: 69, scope: !4056, inlinedAt: !4069)
!4081 = !DILocation(line: 812, column: 53, scope: !4056, inlinedAt: !4069)
!4082 = !DILocation(line: 813, column: 49, scope: !4056, inlinedAt: !4069)
!4083 = !DILocation(line: 814, column: 49, scope: !4056, inlinedAt: !4069)
!4084 = !DILocation(line: 811, column: 20, scope: !4056, inlinedAt: !4069)
!4085 = !DILocation(line: 814, column: 62, scope: !4056, inlinedAt: !4069)
!4086 = !DILocation(line: 811, column: 10, scope: !4056, inlinedAt: !4069)
!4087 = !DILocalVariable(name: "n", arg: 1, scope: !4088, file: !759, line: 220, type: !61)
!4088 = distinct !DISubprogram(name: "xcharalloc", scope: !759, file: !759, line: 220, type: !4089, isLocal: false, isDefinition: true, scopeLine: 221, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4091)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{!58, !61}
!4091 = !{!4087}
!4092 = !DILocation(line: 220, column: 20, scope: !4088, inlinedAt: !4093)
!4093 = distinct !DILocation(line: 815, column: 15, scope: !4056, inlinedAt: !4069)
!4094 = !DILocation(line: 222, column: 10, scope: !4088, inlinedAt: !4093)
!4095 = !DILocation(line: 815, column: 9, scope: !4056, inlinedAt: !4069)
!4096 = !DILocation(line: 816, column: 60, scope: !4056, inlinedAt: !4069)
!4097 = !DILocation(line: 818, column: 32, scope: !4056, inlinedAt: !4069)
!4098 = !DILocation(line: 818, column: 47, scope: !4056, inlinedAt: !4069)
!4099 = !DILocation(line: 816, column: 3, scope: !4056, inlinedAt: !4069)
!4100 = !DILocation(line: 819, column: 9, scope: !4056, inlinedAt: !4069)
!4101 = !DILocation(line: 794, column: 3, scope: !4045)
!4102 = !DILocation(line: 804, column: 33, scope: !4056)
!4103 = !DILocation(line: 804, column: 45, scope: !4056)
!4104 = !DILocation(line: 804, column: 62, scope: !4056)
!4105 = !DILocation(line: 805, column: 51, scope: !4056)
!4106 = !DILocation(line: 807, column: 37, scope: !4056)
!4107 = !DILocation(line: 807, column: 33, scope: !4056)
!4108 = !DILocation(line: 808, column: 11, scope: !4056)
!4109 = !DILocation(line: 808, column: 7, scope: !4056)
!4110 = !DILocation(line: 810, column: 18, scope: !4056)
!4111 = !DILocation(line: 810, column: 27, scope: !4056)
!4112 = !DILocation(line: 810, column: 24, scope: !4056)
!4113 = !DILocation(line: 810, column: 7, scope: !4056)
!4114 = !DILocation(line: 811, column: 69, scope: !4056)
!4115 = !DILocation(line: 812, column: 53, scope: !4056)
!4116 = !DILocation(line: 813, column: 49, scope: !4056)
!4117 = !DILocation(line: 814, column: 49, scope: !4056)
!4118 = !DILocation(line: 811, column: 20, scope: !4056)
!4119 = !DILocation(line: 814, column: 62, scope: !4056)
!4120 = !DILocation(line: 811, column: 10, scope: !4056)
!4121 = !DILocation(line: 220, column: 20, scope: !4088, inlinedAt: !4122)
!4122 = distinct !DILocation(line: 815, column: 15, scope: !4056)
!4123 = !DILocation(line: 222, column: 10, scope: !4088, inlinedAt: !4122)
!4124 = !DILocation(line: 815, column: 9, scope: !4056)
!4125 = !DILocation(line: 816, column: 60, scope: !4056)
!4126 = !DILocation(line: 818, column: 32, scope: !4056)
!4127 = !DILocation(line: 818, column: 47, scope: !4056)
!4128 = !DILocation(line: 816, column: 3, scope: !4056)
!4129 = !DILocation(line: 819, column: 9, scope: !4056)
!4130 = !DILocation(line: 820, column: 7, scope: !4056)
!4131 = !DILocation(line: 821, column: 11, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4056, file: !310, line: 820, column: 7)
!4133 = !DILocation(line: 821, column: 5, scope: !4132)
!4134 = !DILocation(line: 822, column: 3, scope: !4056)
!4135 = distinct !DISubprogram(name: "quotearg_free", scope: !310, file: !310, line: 840, type: !822, isLocal: false, isDefinition: true, scopeLine: 841, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4136)
!4136 = !{!4137, !4138}
!4137 = !DILocalVariable(name: "sv", scope: !4135, file: !310, line: 842, type: !336)
!4138 = !DILocalVariable(name: "i", scope: !4135, file: !310, line: 843, type: !70)
!4139 = !DILocation(line: 842, column: 24, scope: !4135)
!4140 = !DILocation(line: 842, column: 19, scope: !4135)
!4141 = !DILocation(line: 843, column: 7, scope: !4135)
!4142 = !DILocation(line: 844, column: 19, scope: !4143)
!4143 = !DILexicalBlockFile(scope: !4144, file: !310, discriminator: 1)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !310, line: 844, column: 3)
!4145 = distinct !DILexicalBlock(scope: !4135, file: !310, line: 844, column: 3)
!4146 = !DILocation(line: 844, column: 17, scope: !4143)
!4147 = !DILocation(line: 844, column: 3, scope: !4148)
!4148 = !DILexicalBlockFile(scope: !4145, file: !310, discriminator: 1)
!4149 = !DILocation(line: 845, column: 17, scope: !4144)
!4150 = !{!4151, !809, i64 8}
!4151 = !{!"slotvec", !1091, i64 0, !809, i64 8}
!4152 = !DILocation(line: 845, column: 5, scope: !4144)
!4153 = !DILocation(line: 844, column: 28, scope: !4154)
!4154 = !DILexicalBlockFile(scope: !4144, file: !310, discriminator: 2)
!4155 = distinct !{!4155, !4156, !4157}
!4156 = !DILocation(line: 844, column: 3, scope: !4145)
!4157 = !DILocation(line: 845, column: 20, scope: !4145)
!4158 = !DILocation(line: 846, column: 13, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4135, file: !310, line: 846, column: 7)
!4160 = !DILocation(line: 846, column: 17, scope: !4159)
!4161 = !DILocation(line: 846, column: 7, scope: !4135)
!4162 = !DILocation(line: 848, column: 7, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4159, file: !310, line: 847, column: 5)
!4164 = !DILocation(line: 849, column: 21, scope: !4163)
!4165 = !{!4151, !1091, i64 0}
!4166 = !DILocation(line: 850, column: 20, scope: !4163)
!4167 = !DILocation(line: 851, column: 5, scope: !4163)
!4168 = !DILocation(line: 852, column: 10, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4135, file: !310, line: 852, column: 7)
!4170 = !DILocation(line: 852, column: 7, scope: !4135)
!4171 = !DILocation(line: 854, column: 13, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4169, file: !310, line: 853, column: 5)
!4173 = !DILocation(line: 854, column: 7, scope: !4172)
!4174 = !DILocation(line: 855, column: 15, scope: !4172)
!4175 = !DILocation(line: 856, column: 5, scope: !4172)
!4176 = !DILocation(line: 857, column: 10, scope: !4135)
!4177 = !DILocation(line: 858, column: 1, scope: !4135)
!4178 = distinct !DISubprogram(name: "quotearg_n", scope: !310, file: !310, line: 922, type: !4179, isLocal: false, isDefinition: true, scopeLine: 923, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4181)
!4179 = !DISubroutineType(types: !4180)
!4180 = !{!58, !70, !68}
!4181 = !{!4182, !4183}
!4182 = !DILocalVariable(name: "n", arg: 1, scope: !4178, file: !310, line: 922, type: !70)
!4183 = !DILocalVariable(name: "arg", arg: 2, scope: !4178, file: !310, line: 922, type: !68)
!4184 = !DILocation(line: 922, column: 17, scope: !4178)
!4185 = !DILocation(line: 922, column: 32, scope: !4178)
!4186 = !DILocation(line: 924, column: 10, scope: !4178)
!4187 = !DILocation(line: 924, column: 3, scope: !4178)
!4188 = distinct !DISubprogram(name: "quotearg_n_options", scope: !310, file: !310, line: 869, type: !4189, isLocal: true, isDefinition: true, scopeLine: 871, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4191)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!58, !70, !68, !61, !2888}
!4191 = !{!4192, !4193, !4194, !4195, !4196, !4197, !4198, !4201, !4203, !4204, !4205}
!4192 = !DILocalVariable(name: "n", arg: 1, scope: !4188, file: !310, line: 869, type: !70)
!4193 = !DILocalVariable(name: "arg", arg: 2, scope: !4188, file: !310, line: 869, type: !68)
!4194 = !DILocalVariable(name: "argsize", arg: 3, scope: !4188, file: !310, line: 869, type: !61)
!4195 = !DILocalVariable(name: "options", arg: 4, scope: !4188, file: !310, line: 870, type: !2888)
!4196 = !DILocalVariable(name: "e", scope: !4188, file: !310, line: 872, type: !70)
!4197 = !DILocalVariable(name: "sv", scope: !4188, file: !310, line: 874, type: !336)
!4198 = !DILocalVariable(name: "preallocated", scope: !4199, file: !310, line: 881, type: !76)
!4199 = distinct !DILexicalBlock(scope: !4200, file: !310, line: 880, column: 5)
!4200 = distinct !DILexicalBlock(scope: !4188, file: !310, line: 879, column: 7)
!4201 = !DILocalVariable(name: "size", scope: !4202, file: !310, line: 894, type: !61)
!4202 = distinct !DILexicalBlock(scope: !4188, file: !310, line: 893, column: 3)
!4203 = !DILocalVariable(name: "val", scope: !4202, file: !310, line: 895, type: !58)
!4204 = !DILocalVariable(name: "flags", scope: !4202, file: !310, line: 897, type: !70)
!4205 = !DILocalVariable(name: "qsize", scope: !4202, file: !310, line: 898, type: !61)
!4206 = !DILocation(line: 869, column: 25, scope: !4188)
!4207 = !DILocation(line: 869, column: 40, scope: !4188)
!4208 = !DILocation(line: 869, column: 52, scope: !4188)
!4209 = !DILocation(line: 870, column: 51, scope: !4188)
!4210 = !DILocation(line: 872, column: 11, scope: !4188)
!4211 = !DILocation(line: 872, column: 7, scope: !4188)
!4212 = !DILocation(line: 874, column: 24, scope: !4188)
!4213 = !DILocation(line: 874, column: 19, scope: !4188)
!4214 = !DILocation(line: 876, column: 9, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4188, file: !310, line: 876, column: 7)
!4216 = !DILocation(line: 876, column: 7, scope: !4188)
!4217 = !DILocation(line: 877, column: 5, scope: !4215)
!4218 = !DILocation(line: 879, column: 7, scope: !4200)
!4219 = !DILocation(line: 879, column: 14, scope: !4200)
!4220 = !DILocation(line: 879, column: 7, scope: !4188)
!4221 = !DILocation(line: 881, column: 31, scope: !4199)
!4222 = !DILocation(line: 883, column: 67, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4199, file: !310, line: 883, column: 11)
!4224 = !DILocation(line: 883, column: 11, scope: !4199)
!4225 = !DILocation(line: 884, column: 9, scope: !4223)
!4226 = !DILocation(line: 886, column: 32, scope: !4227)
!4227 = !DILexicalBlockFile(scope: !4199, file: !310, discriminator: 3)
!4228 = !DILocation(line: 886, column: 61, scope: !4227)
!4229 = !DILocation(line: 886, column: 58, scope: !4227)
!4230 = !DILocation(line: 886, column: 66, scope: !4227)
!4231 = !DILocation(line: 886, column: 22, scope: !4227)
!4232 = !DILocation(line: 886, column: 15, scope: !4227)
!4233 = !DILocation(line: 887, column: 11, scope: !4199)
!4234 = !DILocation(line: 888, column: 15, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4199, file: !310, line: 887, column: 11)
!4236 = !{i64 0, i64 8, !1090, i64 8, i64 8, !808}
!4237 = !DILocation(line: 888, column: 9, scope: !4235)
!4238 = !DILocation(line: 889, column: 20, scope: !4199)
!4239 = !DILocation(line: 889, column: 18, scope: !4199)
!4240 = !DILocation(line: 889, column: 7, scope: !4199)
!4241 = !DILocation(line: 889, column: 38, scope: !4199)
!4242 = !DILocation(line: 889, column: 31, scope: !4199)
!4243 = !DILocation(line: 889, column: 48, scope: !4199)
!4244 = !DILocation(line: 890, column: 14, scope: !4199)
!4245 = !DILocation(line: 891, column: 5, scope: !4199)
!4246 = !DILocation(line: 894, column: 19, scope: !4202)
!4247 = !DILocation(line: 894, column: 25, scope: !4202)
!4248 = !DILocation(line: 894, column: 12, scope: !4202)
!4249 = !DILocation(line: 895, column: 23, scope: !4202)
!4250 = !DILocation(line: 895, column: 11, scope: !4202)
!4251 = !DILocation(line: 897, column: 26, scope: !4202)
!4252 = !DILocation(line: 897, column: 32, scope: !4202)
!4253 = !DILocation(line: 897, column: 9, scope: !4202)
!4254 = !DILocation(line: 899, column: 55, scope: !4202)
!4255 = !DILocation(line: 900, column: 46, scope: !4202)
!4256 = !DILocation(line: 901, column: 55, scope: !4202)
!4257 = !DILocation(line: 902, column: 55, scope: !4202)
!4258 = !DILocation(line: 898, column: 20, scope: !4202)
!4259 = !DILocation(line: 898, column: 12, scope: !4202)
!4260 = !DILocation(line: 904, column: 14, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4202, file: !310, line: 904, column: 9)
!4262 = !DILocation(line: 904, column: 9, scope: !4202)
!4263 = !DILocation(line: 906, column: 35, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4261, file: !310, line: 905, column: 7)
!4265 = !DILocation(line: 906, column: 20, scope: !4264)
!4266 = !DILocation(line: 907, column: 17, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4264, file: !310, line: 907, column: 13)
!4268 = !DILocation(line: 907, column: 13, scope: !4264)
!4269 = !DILocation(line: 908, column: 11, scope: !4267)
!4270 = !DILocation(line: 220, column: 20, scope: !4088, inlinedAt: !4271)
!4271 = distinct !DILocation(line: 909, column: 27, scope: !4264)
!4272 = !DILocation(line: 222, column: 10, scope: !4088, inlinedAt: !4271)
!4273 = !DILocation(line: 909, column: 19, scope: !4264)
!4274 = !DILocation(line: 910, column: 69, scope: !4264)
!4275 = !DILocation(line: 912, column: 44, scope: !4264)
!4276 = !DILocation(line: 913, column: 44, scope: !4264)
!4277 = !DILocation(line: 910, column: 9, scope: !4264)
!4278 = !DILocation(line: 914, column: 7, scope: !4264)
!4279 = !DILocation(line: 916, column: 11, scope: !4202)
!4280 = !DILocation(line: 917, column: 5, scope: !4202)
!4281 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !310, file: !310, line: 928, type: !4282, isLocal: false, isDefinition: true, scopeLine: 929, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4284)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!58, !70, !68, !61}
!4284 = !{!4285, !4286, !4287}
!4285 = !DILocalVariable(name: "n", arg: 1, scope: !4281, file: !310, line: 928, type: !70)
!4286 = !DILocalVariable(name: "arg", arg: 2, scope: !4281, file: !310, line: 928, type: !68)
!4287 = !DILocalVariable(name: "argsize", arg: 3, scope: !4281, file: !310, line: 928, type: !61)
!4288 = !DILocation(line: 928, column: 21, scope: !4281)
!4289 = !DILocation(line: 928, column: 36, scope: !4281)
!4290 = !DILocation(line: 928, column: 48, scope: !4281)
!4291 = !DILocation(line: 930, column: 10, scope: !4281)
!4292 = !DILocation(line: 930, column: 3, scope: !4281)
!4293 = distinct !DISubprogram(name: "quotearg", scope: !310, file: !310, line: 934, type: !4294, isLocal: false, isDefinition: true, scopeLine: 935, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4295)
!4294 = !DISubroutineType(types: !270)
!4295 = !{!4296}
!4296 = !DILocalVariable(name: "arg", arg: 1, scope: !4293, file: !310, line: 934, type: !68)
!4297 = !DILocation(line: 934, column: 23, scope: !4293)
!4298 = !DILocation(line: 922, column: 17, scope: !4178, inlinedAt: !4299)
!4299 = distinct !DILocation(line: 936, column: 10, scope: !4293)
!4300 = !DILocation(line: 922, column: 32, scope: !4178, inlinedAt: !4299)
!4301 = !DILocation(line: 924, column: 10, scope: !4178, inlinedAt: !4299)
!4302 = !DILocation(line: 936, column: 3, scope: !4293)
!4303 = distinct !DISubprogram(name: "quotearg_mem", scope: !310, file: !310, line: 940, type: !4304, isLocal: false, isDefinition: true, scopeLine: 941, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4306)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{!58, !68, !61}
!4306 = !{!4307, !4308}
!4307 = !DILocalVariable(name: "arg", arg: 1, scope: !4303, file: !310, line: 940, type: !68)
!4308 = !DILocalVariable(name: "argsize", arg: 2, scope: !4303, file: !310, line: 940, type: !61)
!4309 = !DILocation(line: 940, column: 27, scope: !4303)
!4310 = !DILocation(line: 940, column: 39, scope: !4303)
!4311 = !DILocation(line: 928, column: 21, scope: !4281, inlinedAt: !4312)
!4312 = distinct !DILocation(line: 942, column: 10, scope: !4303)
!4313 = !DILocation(line: 928, column: 36, scope: !4281, inlinedAt: !4312)
!4314 = !DILocation(line: 928, column: 48, scope: !4281, inlinedAt: !4312)
!4315 = !DILocation(line: 930, column: 10, scope: !4281, inlinedAt: !4312)
!4316 = !DILocation(line: 942, column: 3, scope: !4303)
!4317 = distinct !DISubprogram(name: "quotearg_n_style", scope: !310, file: !310, line: 946, type: !4318, isLocal: false, isDefinition: true, scopeLine: 947, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4320)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!58, !70, !5, !68}
!4320 = !{!4321, !4322, !4323, !4324}
!4321 = !DILocalVariable(name: "n", arg: 1, scope: !4317, file: !310, line: 946, type: !70)
!4322 = !DILocalVariable(name: "s", arg: 2, scope: !4317, file: !310, line: 946, type: !5)
!4323 = !DILocalVariable(name: "arg", arg: 3, scope: !4317, file: !310, line: 946, type: !68)
!4324 = !DILocalVariable(name: "o", scope: !4317, file: !310, line: 948, type: !2889)
!4325 = !DILocalVariable(name: "o", scope: !4326, file: !310, line: 187, type: !317)
!4326 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !310, file: !310, line: 185, type: !4327, isLocal: true, isDefinition: true, scopeLine: 186, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4329)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!317, !5}
!4329 = !{!4330, !4325}
!4330 = !DILocalVariable(name: "style", arg: 1, scope: !4326, file: !310, line: 185, type: !5)
!4331 = !DIExpression(DW_OP_LLVM_fragment, 32, 416)
!4332 = !DILocation(line: 187, column: 26, scope: !4326, inlinedAt: !4333)
!4333 = distinct !DILocation(line: 948, column: 36, scope: !4317)
!4334 = !DILocation(line: 946, column: 23, scope: !4317)
!4335 = !DILocation(line: 946, column: 45, scope: !4317)
!4336 = !DILocation(line: 946, column: 60, scope: !4317)
!4337 = !DILocation(line: 948, column: 3, scope: !4317)
!4338 = !DILocation(line: 948, column: 32, scope: !4317)
!4339 = !DILocation(line: 185, column: 48, scope: !4326, inlinedAt: !4333)
!4340 = !DILocation(line: 187, column: 3, scope: !4326, inlinedAt: !4333)
!4341 = !DIExpression(DW_OP_LLVM_fragment, 0, 32)
!4342 = !DILocation(line: 188, column: 13, scope: !4343, inlinedAt: !4333)
!4343 = distinct !DILexicalBlock(scope: !4326, file: !310, line: 188, column: 7)
!4344 = !DILocation(line: 188, column: 7, scope: !4326, inlinedAt: !4333)
!4345 = !DILocation(line: 189, column: 5, scope: !4343, inlinedAt: !4333)
!4346 = !{!4347}
!4347 = distinct !{!4347, !4348, !"quoting_options_from_style: argument 0"}
!4348 = distinct !{!4348, !"quoting_options_from_style"}
!4349 = !DILocation(line: 191, column: 10, scope: !4326, inlinedAt: !4333)
!4350 = !DILocation(line: 192, column: 1, scope: !4326, inlinedAt: !4333)
!4351 = !DILocation(line: 949, column: 10, scope: !4317)
!4352 = !DILocation(line: 950, column: 1, scope: !4317)
!4353 = !DILocation(line: 949, column: 3, scope: !4317)
!4354 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !310, file: !310, line: 953, type: !4355, isLocal: false, isDefinition: true, scopeLine: 955, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4357)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!58, !70, !5, !68, !61}
!4357 = !{!4358, !4359, !4360, !4361, !4362}
!4358 = !DILocalVariable(name: "n", arg: 1, scope: !4354, file: !310, line: 953, type: !70)
!4359 = !DILocalVariable(name: "s", arg: 2, scope: !4354, file: !310, line: 953, type: !5)
!4360 = !DILocalVariable(name: "arg", arg: 3, scope: !4354, file: !310, line: 954, type: !68)
!4361 = !DILocalVariable(name: "argsize", arg: 4, scope: !4354, file: !310, line: 954, type: !61)
!4362 = !DILocalVariable(name: "o", scope: !4354, file: !310, line: 956, type: !2889)
!4363 = !DILocation(line: 187, column: 26, scope: !4326, inlinedAt: !4364)
!4364 = distinct !DILocation(line: 956, column: 36, scope: !4354)
!4365 = !DILocation(line: 953, column: 27, scope: !4354)
!4366 = !DILocation(line: 953, column: 49, scope: !4354)
!4367 = !DILocation(line: 954, column: 35, scope: !4354)
!4368 = !DILocation(line: 954, column: 47, scope: !4354)
!4369 = !DILocation(line: 956, column: 3, scope: !4354)
!4370 = !DILocation(line: 956, column: 32, scope: !4354)
!4371 = !DILocation(line: 185, column: 48, scope: !4326, inlinedAt: !4364)
!4372 = !DILocation(line: 187, column: 3, scope: !4326, inlinedAt: !4364)
!4373 = !DILocation(line: 188, column: 13, scope: !4343, inlinedAt: !4364)
!4374 = !DILocation(line: 188, column: 7, scope: !4326, inlinedAt: !4364)
!4375 = !DILocation(line: 189, column: 5, scope: !4343, inlinedAt: !4364)
!4376 = !{!4377}
!4377 = distinct !{!4377, !4378, !"quoting_options_from_style: argument 0"}
!4378 = distinct !{!4378, !"quoting_options_from_style"}
!4379 = !DILocation(line: 191, column: 10, scope: !4326, inlinedAt: !4364)
!4380 = !DILocation(line: 192, column: 1, scope: !4326, inlinedAt: !4364)
!4381 = !DILocation(line: 957, column: 10, scope: !4354)
!4382 = !DILocation(line: 958, column: 1, scope: !4354)
!4383 = !DILocation(line: 957, column: 3, scope: !4354)
!4384 = distinct !DISubprogram(name: "quotearg_style", scope: !310, file: !310, line: 961, type: !4385, isLocal: false, isDefinition: true, scopeLine: 962, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4387)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!58, !5, !68}
!4387 = !{!4388, !4389}
!4388 = !DILocalVariable(name: "s", arg: 1, scope: !4384, file: !310, line: 961, type: !5)
!4389 = !DILocalVariable(name: "arg", arg: 2, scope: !4384, file: !310, line: 961, type: !68)
!4390 = !DILocation(line: 187, column: 26, scope: !4326, inlinedAt: !4391)
!4391 = distinct !DILocation(line: 948, column: 36, scope: !4317, inlinedAt: !4392)
!4392 = distinct !DILocation(line: 963, column: 10, scope: !4384)
!4393 = !DILocation(line: 961, column: 36, scope: !4384)
!4394 = !DILocation(line: 961, column: 51, scope: !4384)
!4395 = !DILocation(line: 946, column: 23, scope: !4317, inlinedAt: !4392)
!4396 = !DILocation(line: 946, column: 45, scope: !4317, inlinedAt: !4392)
!4397 = !DILocation(line: 946, column: 60, scope: !4317, inlinedAt: !4392)
!4398 = !DILocation(line: 948, column: 3, scope: !4317, inlinedAt: !4392)
!4399 = !DILocation(line: 948, column: 32, scope: !4317, inlinedAt: !4392)
!4400 = !DILocation(line: 185, column: 48, scope: !4326, inlinedAt: !4391)
!4401 = !DILocation(line: 187, column: 3, scope: !4326, inlinedAt: !4391)
!4402 = !DILocation(line: 188, column: 13, scope: !4343, inlinedAt: !4391)
!4403 = !DILocation(line: 188, column: 7, scope: !4326, inlinedAt: !4391)
!4404 = !DILocation(line: 189, column: 5, scope: !4343, inlinedAt: !4391)
!4405 = !{!4406}
!4406 = distinct !{!4406, !4407, !"quoting_options_from_style: argument 0"}
!4407 = distinct !{!4407, !"quoting_options_from_style"}
!4408 = !DILocation(line: 191, column: 10, scope: !4326, inlinedAt: !4391)
!4409 = !DILocation(line: 192, column: 1, scope: !4326, inlinedAt: !4391)
!4410 = !DILocation(line: 949, column: 10, scope: !4317, inlinedAt: !4392)
!4411 = !DILocation(line: 950, column: 1, scope: !4317, inlinedAt: !4392)
!4412 = !DILocation(line: 963, column: 3, scope: !4384)
!4413 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !310, file: !310, line: 967, type: !4414, isLocal: false, isDefinition: true, scopeLine: 968, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4416)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!58, !5, !68, !61}
!4416 = !{!4417, !4418, !4419}
!4417 = !DILocalVariable(name: "s", arg: 1, scope: !4413, file: !310, line: 967, type: !5)
!4418 = !DILocalVariable(name: "arg", arg: 2, scope: !4413, file: !310, line: 967, type: !68)
!4419 = !DILocalVariable(name: "argsize", arg: 3, scope: !4413, file: !310, line: 967, type: !61)
!4420 = !DILocation(line: 187, column: 26, scope: !4326, inlinedAt: !4421)
!4421 = distinct !DILocation(line: 956, column: 36, scope: !4354, inlinedAt: !4422)
!4422 = distinct !DILocation(line: 969, column: 10, scope: !4413)
!4423 = !DILocation(line: 967, column: 40, scope: !4413)
!4424 = !DILocation(line: 967, column: 55, scope: !4413)
!4425 = !DILocation(line: 967, column: 67, scope: !4413)
!4426 = !DILocation(line: 953, column: 27, scope: !4354, inlinedAt: !4422)
!4427 = !DILocation(line: 953, column: 49, scope: !4354, inlinedAt: !4422)
!4428 = !DILocation(line: 954, column: 35, scope: !4354, inlinedAt: !4422)
!4429 = !DILocation(line: 954, column: 47, scope: !4354, inlinedAt: !4422)
!4430 = !DILocation(line: 956, column: 3, scope: !4354, inlinedAt: !4422)
!4431 = !DILocation(line: 956, column: 32, scope: !4354, inlinedAt: !4422)
!4432 = !DILocation(line: 185, column: 48, scope: !4326, inlinedAt: !4421)
!4433 = !DILocation(line: 187, column: 3, scope: !4326, inlinedAt: !4421)
!4434 = !DILocation(line: 188, column: 13, scope: !4343, inlinedAt: !4421)
!4435 = !DILocation(line: 188, column: 7, scope: !4326, inlinedAt: !4421)
!4436 = !DILocation(line: 189, column: 5, scope: !4343, inlinedAt: !4421)
!4437 = !{!4438}
!4438 = distinct !{!4438, !4439, !"quoting_options_from_style: argument 0"}
!4439 = distinct !{!4439, !"quoting_options_from_style"}
!4440 = !DILocation(line: 191, column: 10, scope: !4326, inlinedAt: !4421)
!4441 = !DILocation(line: 192, column: 1, scope: !4326, inlinedAt: !4421)
!4442 = !DILocation(line: 957, column: 10, scope: !4354, inlinedAt: !4422)
!4443 = !DILocation(line: 958, column: 1, scope: !4354, inlinedAt: !4422)
!4444 = !DILocation(line: 969, column: 3, scope: !4413)
!4445 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !310, file: !310, line: 973, type: !4446, isLocal: false, isDefinition: true, scopeLine: 974, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4448)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{!58, !68, !61, !59}
!4448 = !{!4449, !4450, !4451, !4452}
!4449 = !DILocalVariable(name: "arg", arg: 1, scope: !4445, file: !310, line: 973, type: !68)
!4450 = !DILocalVariable(name: "argsize", arg: 2, scope: !4445, file: !310, line: 973, type: !61)
!4451 = !DILocalVariable(name: "ch", arg: 3, scope: !4445, file: !310, line: 973, type: !59)
!4452 = !DILocalVariable(name: "options", scope: !4445, file: !310, line: 975, type: !317)
!4453 = !DILocation(line: 973, column: 32, scope: !4445)
!4454 = !DILocation(line: 973, column: 44, scope: !4445)
!4455 = !DILocation(line: 973, column: 58, scope: !4445)
!4456 = !DILocation(line: 975, column: 3, scope: !4445)
!4457 = !DILocation(line: 976, column: 13, scope: !4445)
!4458 = !{i64 0, i64 4, !1055, i64 4, i64 4, !1019, i64 8, i64 32, !1055, i64 40, i64 8, !808, i64 48, i64 8, !808}
!4459 = !DILocation(line: 975, column: 26, scope: !4445)
!4460 = !DILocation(line: 144, column: 43, scope: !2912, inlinedAt: !4461)
!4461 = distinct !DILocation(line: 977, column: 3, scope: !4445)
!4462 = !DILocation(line: 144, column: 51, scope: !2912, inlinedAt: !4461)
!4463 = !DILocation(line: 144, column: 58, scope: !2912, inlinedAt: !4461)
!4464 = !DILocation(line: 146, column: 17, scope: !2912, inlinedAt: !4461)
!4465 = !DILocation(line: 148, column: 62, scope: !2930, inlinedAt: !4461)
!4466 = !DILocation(line: 148, column: 57, scope: !2930, inlinedAt: !4461)
!4467 = !DILocation(line: 147, column: 17, scope: !2912, inlinedAt: !4461)
!4468 = !DILocation(line: 149, column: 18, scope: !2912, inlinedAt: !4461)
!4469 = !DILocation(line: 149, column: 15, scope: !2912, inlinedAt: !4461)
!4470 = !DILocation(line: 149, column: 7, scope: !2912, inlinedAt: !4461)
!4471 = !DILocation(line: 150, column: 12, scope: !2912, inlinedAt: !4461)
!4472 = !DILocation(line: 150, column: 15, scope: !2912, inlinedAt: !4461)
!4473 = !DILocation(line: 150, column: 25, scope: !2912, inlinedAt: !4461)
!4474 = !DILocation(line: 150, column: 7, scope: !2912, inlinedAt: !4461)
!4475 = !DILocation(line: 151, column: 18, scope: !2912, inlinedAt: !4461)
!4476 = !DILocation(line: 151, column: 23, scope: !2912, inlinedAt: !4461)
!4477 = !DILocation(line: 151, column: 6, scope: !2912, inlinedAt: !4461)
!4478 = !DILocation(line: 978, column: 10, scope: !4445)
!4479 = !DILocation(line: 979, column: 1, scope: !4445)
!4480 = !DILocation(line: 978, column: 3, scope: !4445)
!4481 = distinct !DISubprogram(name: "quotearg_char", scope: !310, file: !310, line: 982, type: !4482, isLocal: false, isDefinition: true, scopeLine: 983, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4484)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!58, !68, !59}
!4484 = !{!4485, !4486}
!4485 = !DILocalVariable(name: "arg", arg: 1, scope: !4481, file: !310, line: 982, type: !68)
!4486 = !DILocalVariable(name: "ch", arg: 2, scope: !4481, file: !310, line: 982, type: !59)
!4487 = !DILocation(line: 982, column: 28, scope: !4481)
!4488 = !DILocation(line: 982, column: 38, scope: !4481)
!4489 = !DILocation(line: 973, column: 32, scope: !4445, inlinedAt: !4490)
!4490 = distinct !DILocation(line: 984, column: 10, scope: !4481)
!4491 = !DILocation(line: 973, column: 44, scope: !4445, inlinedAt: !4490)
!4492 = !DILocation(line: 973, column: 58, scope: !4445, inlinedAt: !4490)
!4493 = !DILocation(line: 975, column: 3, scope: !4445, inlinedAt: !4490)
!4494 = !DILocation(line: 976, column: 13, scope: !4445, inlinedAt: !4490)
!4495 = !DILocation(line: 975, column: 26, scope: !4445, inlinedAt: !4490)
!4496 = !DILocation(line: 144, column: 43, scope: !2912, inlinedAt: !4497)
!4497 = distinct !DILocation(line: 977, column: 3, scope: !4445, inlinedAt: !4490)
!4498 = !DILocation(line: 144, column: 51, scope: !2912, inlinedAt: !4497)
!4499 = !DILocation(line: 144, column: 58, scope: !2912, inlinedAt: !4497)
!4500 = !DILocation(line: 146, column: 17, scope: !2912, inlinedAt: !4497)
!4501 = !DILocation(line: 148, column: 62, scope: !2930, inlinedAt: !4497)
!4502 = !DILocation(line: 148, column: 57, scope: !2930, inlinedAt: !4497)
!4503 = !DILocation(line: 147, column: 17, scope: !2912, inlinedAt: !4497)
!4504 = !DILocation(line: 149, column: 18, scope: !2912, inlinedAt: !4497)
!4505 = !DILocation(line: 149, column: 15, scope: !2912, inlinedAt: !4497)
!4506 = !DILocation(line: 149, column: 7, scope: !2912, inlinedAt: !4497)
!4507 = !DILocation(line: 150, column: 12, scope: !2912, inlinedAt: !4497)
!4508 = !DILocation(line: 150, column: 15, scope: !2912, inlinedAt: !4497)
!4509 = !DILocation(line: 150, column: 25, scope: !2912, inlinedAt: !4497)
!4510 = !DILocation(line: 150, column: 7, scope: !2912, inlinedAt: !4497)
!4511 = !DILocation(line: 151, column: 18, scope: !2912, inlinedAt: !4497)
!4512 = !DILocation(line: 151, column: 23, scope: !2912, inlinedAt: !4497)
!4513 = !DILocation(line: 151, column: 6, scope: !2912, inlinedAt: !4497)
!4514 = !DILocation(line: 978, column: 10, scope: !4445, inlinedAt: !4490)
!4515 = !DILocation(line: 979, column: 1, scope: !4445, inlinedAt: !4490)
!4516 = !DILocation(line: 984, column: 3, scope: !4481)
!4517 = distinct !DISubprogram(name: "quotearg_colon", scope: !310, file: !310, line: 988, type: !4294, isLocal: false, isDefinition: true, scopeLine: 989, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4518)
!4518 = !{!4519}
!4519 = !DILocalVariable(name: "arg", arg: 1, scope: !4517, file: !310, line: 988, type: !68)
!4520 = !DILocation(line: 988, column: 29, scope: !4517)
!4521 = !DILocation(line: 982, column: 28, scope: !4481, inlinedAt: !4522)
!4522 = distinct !DILocation(line: 990, column: 10, scope: !4517)
!4523 = !DILocation(line: 982, column: 38, scope: !4481, inlinedAt: !4522)
!4524 = !DILocation(line: 973, column: 32, scope: !4445, inlinedAt: !4525)
!4525 = distinct !DILocation(line: 984, column: 10, scope: !4481, inlinedAt: !4522)
!4526 = !DILocation(line: 973, column: 44, scope: !4445, inlinedAt: !4525)
!4527 = !DILocation(line: 973, column: 58, scope: !4445, inlinedAt: !4525)
!4528 = !DILocation(line: 975, column: 3, scope: !4445, inlinedAt: !4525)
!4529 = !DILocation(line: 976, column: 13, scope: !4445, inlinedAt: !4525)
!4530 = !DILocation(line: 975, column: 26, scope: !4445, inlinedAt: !4525)
!4531 = !DILocation(line: 144, column: 43, scope: !2912, inlinedAt: !4532)
!4532 = distinct !DILocation(line: 977, column: 3, scope: !4445, inlinedAt: !4525)
!4533 = !DILocation(line: 144, column: 51, scope: !2912, inlinedAt: !4532)
!4534 = !DILocation(line: 144, column: 58, scope: !2912, inlinedAt: !4532)
!4535 = !DILocation(line: 146, column: 17, scope: !2912, inlinedAt: !4532)
!4536 = !DILocation(line: 148, column: 57, scope: !2930, inlinedAt: !4532)
!4537 = !DILocation(line: 147, column: 17, scope: !2912, inlinedAt: !4532)
!4538 = !DILocation(line: 149, column: 7, scope: !2912, inlinedAt: !4532)
!4539 = !DILocation(line: 150, column: 12, scope: !2912, inlinedAt: !4532)
!4540 = !DILocation(line: 151, column: 6, scope: !2912, inlinedAt: !4532)
!4541 = !DILocation(line: 978, column: 10, scope: !4445, inlinedAt: !4525)
!4542 = !DILocation(line: 979, column: 1, scope: !4445, inlinedAt: !4525)
!4543 = !DILocation(line: 990, column: 3, scope: !4517)
!4544 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !310, file: !310, line: 994, type: !4304, isLocal: false, isDefinition: true, scopeLine: 995, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4545)
!4545 = !{!4546, !4547}
!4546 = !DILocalVariable(name: "arg", arg: 1, scope: !4544, file: !310, line: 994, type: !68)
!4547 = !DILocalVariable(name: "argsize", arg: 2, scope: !4544, file: !310, line: 994, type: !61)
!4548 = !DILocation(line: 994, column: 33, scope: !4544)
!4549 = !DILocation(line: 994, column: 45, scope: !4544)
!4550 = !DILocation(line: 973, column: 32, scope: !4445, inlinedAt: !4551)
!4551 = distinct !DILocation(line: 996, column: 10, scope: !4544)
!4552 = !DILocation(line: 973, column: 44, scope: !4445, inlinedAt: !4551)
!4553 = !DILocation(line: 973, column: 58, scope: !4445, inlinedAt: !4551)
!4554 = !DILocation(line: 975, column: 3, scope: !4445, inlinedAt: !4551)
!4555 = !DILocation(line: 976, column: 13, scope: !4445, inlinedAt: !4551)
!4556 = !DILocation(line: 975, column: 26, scope: !4445, inlinedAt: !4551)
!4557 = !DILocation(line: 144, column: 43, scope: !2912, inlinedAt: !4558)
!4558 = distinct !DILocation(line: 977, column: 3, scope: !4445, inlinedAt: !4551)
!4559 = !DILocation(line: 144, column: 51, scope: !2912, inlinedAt: !4558)
!4560 = !DILocation(line: 144, column: 58, scope: !2912, inlinedAt: !4558)
!4561 = !DILocation(line: 146, column: 17, scope: !2912, inlinedAt: !4558)
!4562 = !DILocation(line: 148, column: 57, scope: !2930, inlinedAt: !4558)
!4563 = !DILocation(line: 147, column: 17, scope: !2912, inlinedAt: !4558)
!4564 = !DILocation(line: 149, column: 7, scope: !2912, inlinedAt: !4558)
!4565 = !DILocation(line: 150, column: 12, scope: !2912, inlinedAt: !4558)
!4566 = !DILocation(line: 151, column: 6, scope: !2912, inlinedAt: !4558)
!4567 = !DILocation(line: 978, column: 10, scope: !4445, inlinedAt: !4551)
!4568 = !DILocation(line: 979, column: 1, scope: !4445, inlinedAt: !4551)
!4569 = !DILocation(line: 996, column: 3, scope: !4544)
!4570 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !310, file: !310, line: 1000, type: !4318, isLocal: false, isDefinition: true, scopeLine: 1001, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4571)
!4571 = !{!4572, !4573, !4574, !4575}
!4572 = !DILocalVariable(name: "n", arg: 1, scope: !4570, file: !310, line: 1000, type: !70)
!4573 = !DILocalVariable(name: "s", arg: 2, scope: !4570, file: !310, line: 1000, type: !5)
!4574 = !DILocalVariable(name: "arg", arg: 3, scope: !4570, file: !310, line: 1000, type: !68)
!4575 = !DILocalVariable(name: "options", scope: !4570, file: !310, line: 1002, type: !317)
!4576 = !DILocation(line: 187, column: 26, scope: !4326, inlinedAt: !4577)
!4577 = distinct !DILocation(line: 1003, column: 13, scope: !4570)
!4578 = !DILocation(line: 1000, column: 29, scope: !4570)
!4579 = !DILocation(line: 1000, column: 51, scope: !4570)
!4580 = !DILocation(line: 1000, column: 66, scope: !4570)
!4581 = !DILocation(line: 1002, column: 3, scope: !4570)
!4582 = !DILocation(line: 185, column: 48, scope: !4326, inlinedAt: !4577)
!4583 = !DILocation(line: 187, column: 3, scope: !4326, inlinedAt: !4577)
!4584 = !DILocation(line: 188, column: 13, scope: !4343, inlinedAt: !4577)
!4585 = !DILocation(line: 188, column: 7, scope: !4326, inlinedAt: !4577)
!4586 = !DILocation(line: 189, column: 5, scope: !4343, inlinedAt: !4577)
!4587 = !{!4588}
!4588 = distinct !{!4588, !4589, !"quoting_options_from_style: argument 0"}
!4589 = distinct !{!4589, !"quoting_options_from_style"}
!4590 = !DILocation(line: 191, column: 10, scope: !4326, inlinedAt: !4577)
!4591 = !DILocation(line: 192, column: 1, scope: !4326, inlinedAt: !4577)
!4592 = !DILocation(line: 1003, column: 13, scope: !4570)
!4593 = !DILocation(line: 1002, column: 26, scope: !4570)
!4594 = !DILocation(line: 144, column: 43, scope: !2912, inlinedAt: !4595)
!4595 = distinct !DILocation(line: 1004, column: 3, scope: !4570)
!4596 = !DILocation(line: 144, column: 51, scope: !2912, inlinedAt: !4595)
!4597 = !DILocation(line: 144, column: 58, scope: !2912, inlinedAt: !4595)
!4598 = !DILocation(line: 146, column: 17, scope: !2912, inlinedAt: !4595)
!4599 = !DILocation(line: 148, column: 57, scope: !2930, inlinedAt: !4595)
!4600 = !DILocation(line: 147, column: 17, scope: !2912, inlinedAt: !4595)
!4601 = !DILocation(line: 149, column: 7, scope: !2912, inlinedAt: !4595)
!4602 = !DILocation(line: 150, column: 12, scope: !2912, inlinedAt: !4595)
!4603 = !DILocation(line: 151, column: 6, scope: !2912, inlinedAt: !4595)
!4604 = !DILocation(line: 1005, column: 10, scope: !4570)
!4605 = !DILocation(line: 1006, column: 1, scope: !4570)
!4606 = !DILocation(line: 1005, column: 3, scope: !4570)
!4607 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !310, file: !310, line: 1009, type: !4608, isLocal: false, isDefinition: true, scopeLine: 1011, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4610)
!4608 = !DISubroutineType(types: !4609)
!4609 = !{!58, !70, !68, !68, !68}
!4610 = !{!4611, !4612, !4613, !4614}
!4611 = !DILocalVariable(name: "n", arg: 1, scope: !4607, file: !310, line: 1009, type: !70)
!4612 = !DILocalVariable(name: "left_quote", arg: 2, scope: !4607, file: !310, line: 1009, type: !68)
!4613 = !DILocalVariable(name: "right_quote", arg: 3, scope: !4607, file: !310, line: 1010, type: !68)
!4614 = !DILocalVariable(name: "arg", arg: 4, scope: !4607, file: !310, line: 1010, type: !68)
!4615 = !DILocation(line: 1009, column: 24, scope: !4607)
!4616 = !DILocation(line: 1009, column: 39, scope: !4607)
!4617 = !DILocation(line: 1010, column: 32, scope: !4607)
!4618 = !DILocation(line: 1010, column: 57, scope: !4607)
!4619 = !DILocalVariable(name: "n", arg: 1, scope: !4620, file: !310, line: 1017, type: !70)
!4620 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !310, file: !310, line: 1017, type: !4621, isLocal: false, isDefinition: true, scopeLine: 1020, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!58, !70, !68, !68, !68, !61}
!4623 = !{!4619, !4624, !4625, !4626, !4627, !4628}
!4624 = !DILocalVariable(name: "left_quote", arg: 2, scope: !4620, file: !310, line: 1017, type: !68)
!4625 = !DILocalVariable(name: "right_quote", arg: 3, scope: !4620, file: !310, line: 1018, type: !68)
!4626 = !DILocalVariable(name: "arg", arg: 4, scope: !4620, file: !310, line: 1019, type: !68)
!4627 = !DILocalVariable(name: "argsize", arg: 5, scope: !4620, file: !310, line: 1019, type: !61)
!4628 = !DILocalVariable(name: "o", scope: !4620, file: !310, line: 1021, type: !317)
!4629 = !DILocation(line: 1017, column: 28, scope: !4620, inlinedAt: !4630)
!4630 = distinct !DILocation(line: 1012, column: 10, scope: !4607)
!4631 = !DILocation(line: 1017, column: 43, scope: !4620, inlinedAt: !4630)
!4632 = !DILocation(line: 1018, column: 36, scope: !4620, inlinedAt: !4630)
!4633 = !DILocation(line: 1019, column: 36, scope: !4620, inlinedAt: !4630)
!4634 = !DILocation(line: 1019, column: 48, scope: !4620, inlinedAt: !4630)
!4635 = !DILocation(line: 1021, column: 3, scope: !4620, inlinedAt: !4630)
!4636 = !DILocation(line: 1021, column: 30, scope: !4620, inlinedAt: !4630)
!4637 = !DILocation(line: 1021, column: 26, scope: !4620, inlinedAt: !4630)
!4638 = !DILocation(line: 171, column: 45, scope: !2962, inlinedAt: !4639)
!4639 = distinct !DILocation(line: 1022, column: 3, scope: !4620, inlinedAt: !4630)
!4640 = !DILocation(line: 172, column: 33, scope: !2962, inlinedAt: !4639)
!4641 = !DILocation(line: 172, column: 57, scope: !2962, inlinedAt: !4639)
!4642 = !DILocation(line: 176, column: 6, scope: !2962, inlinedAt: !4639)
!4643 = !DILocation(line: 176, column: 12, scope: !2962, inlinedAt: !4639)
!4644 = !DILocation(line: 177, column: 8, scope: !2978, inlinedAt: !4639)
!4645 = !DILocation(line: 177, column: 23, scope: !2980, inlinedAt: !4639)
!4646 = !DILocation(line: 177, column: 19, scope: !2978, inlinedAt: !4639)
!4647 = !DILocation(line: 178, column: 5, scope: !2978, inlinedAt: !4639)
!4648 = !DILocation(line: 179, column: 6, scope: !2962, inlinedAt: !4639)
!4649 = !DILocation(line: 179, column: 17, scope: !2962, inlinedAt: !4639)
!4650 = !DILocation(line: 180, column: 6, scope: !2962, inlinedAt: !4639)
!4651 = !DILocation(line: 180, column: 18, scope: !2962, inlinedAt: !4639)
!4652 = !DILocation(line: 1023, column: 10, scope: !4620, inlinedAt: !4630)
!4653 = !DILocation(line: 1024, column: 1, scope: !4620, inlinedAt: !4630)
!4654 = !DILocation(line: 1012, column: 3, scope: !4607)
!4655 = !DILocation(line: 1017, column: 28, scope: !4620)
!4656 = !DILocation(line: 1017, column: 43, scope: !4620)
!4657 = !DILocation(line: 1018, column: 36, scope: !4620)
!4658 = !DILocation(line: 1019, column: 36, scope: !4620)
!4659 = !DILocation(line: 1019, column: 48, scope: !4620)
!4660 = !DILocation(line: 1021, column: 3, scope: !4620)
!4661 = !DILocation(line: 1021, column: 30, scope: !4620)
!4662 = !DILocation(line: 1021, column: 26, scope: !4620)
!4663 = !DILocation(line: 171, column: 45, scope: !2962, inlinedAt: !4664)
!4664 = distinct !DILocation(line: 1022, column: 3, scope: !4620)
!4665 = !DILocation(line: 172, column: 33, scope: !2962, inlinedAt: !4664)
!4666 = !DILocation(line: 172, column: 57, scope: !2962, inlinedAt: !4664)
!4667 = !DILocation(line: 176, column: 6, scope: !2962, inlinedAt: !4664)
!4668 = !DILocation(line: 176, column: 12, scope: !2962, inlinedAt: !4664)
!4669 = !DILocation(line: 177, column: 8, scope: !2978, inlinedAt: !4664)
!4670 = !DILocation(line: 177, column: 23, scope: !2980, inlinedAt: !4664)
!4671 = !DILocation(line: 177, column: 19, scope: !2978, inlinedAt: !4664)
!4672 = !DILocation(line: 178, column: 5, scope: !2978, inlinedAt: !4664)
!4673 = !DILocation(line: 179, column: 6, scope: !2962, inlinedAt: !4664)
!4674 = !DILocation(line: 179, column: 17, scope: !2962, inlinedAt: !4664)
!4675 = !DILocation(line: 180, column: 6, scope: !2962, inlinedAt: !4664)
!4676 = !DILocation(line: 180, column: 18, scope: !2962, inlinedAt: !4664)
!4677 = !DILocation(line: 1023, column: 10, scope: !4620)
!4678 = !DILocation(line: 1024, column: 1, scope: !4620)
!4679 = !DILocation(line: 1023, column: 3, scope: !4620)
!4680 = distinct !DISubprogram(name: "quotearg_custom", scope: !310, file: !310, line: 1027, type: !4681, isLocal: false, isDefinition: true, scopeLine: 1029, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4683)
!4681 = !DISubroutineType(types: !4682)
!4682 = !{!58, !68, !68, !68}
!4683 = !{!4684, !4685, !4686}
!4684 = !DILocalVariable(name: "left_quote", arg: 1, scope: !4680, file: !310, line: 1027, type: !68)
!4685 = !DILocalVariable(name: "right_quote", arg: 2, scope: !4680, file: !310, line: 1027, type: !68)
!4686 = !DILocalVariable(name: "arg", arg: 3, scope: !4680, file: !310, line: 1028, type: !68)
!4687 = !DILocation(line: 1027, column: 30, scope: !4680)
!4688 = !DILocation(line: 1027, column: 54, scope: !4680)
!4689 = !DILocation(line: 1028, column: 30, scope: !4680)
!4690 = !DILocation(line: 1009, column: 24, scope: !4607, inlinedAt: !4691)
!4691 = distinct !DILocation(line: 1030, column: 10, scope: !4680)
!4692 = !DILocation(line: 1009, column: 39, scope: !4607, inlinedAt: !4691)
!4693 = !DILocation(line: 1010, column: 32, scope: !4607, inlinedAt: !4691)
!4694 = !DILocation(line: 1010, column: 57, scope: !4607, inlinedAt: !4691)
!4695 = !DILocation(line: 1017, column: 28, scope: !4620, inlinedAt: !4696)
!4696 = distinct !DILocation(line: 1012, column: 10, scope: !4607, inlinedAt: !4691)
!4697 = !DILocation(line: 1017, column: 43, scope: !4620, inlinedAt: !4696)
!4698 = !DILocation(line: 1018, column: 36, scope: !4620, inlinedAt: !4696)
!4699 = !DILocation(line: 1019, column: 36, scope: !4620, inlinedAt: !4696)
!4700 = !DILocation(line: 1019, column: 48, scope: !4620, inlinedAt: !4696)
!4701 = !DILocation(line: 1021, column: 3, scope: !4620, inlinedAt: !4696)
!4702 = !DILocation(line: 1021, column: 30, scope: !4620, inlinedAt: !4696)
!4703 = !DILocation(line: 1021, column: 26, scope: !4620, inlinedAt: !4696)
!4704 = !DILocation(line: 171, column: 45, scope: !2962, inlinedAt: !4705)
!4705 = distinct !DILocation(line: 1022, column: 3, scope: !4620, inlinedAt: !4696)
!4706 = !DILocation(line: 172, column: 33, scope: !2962, inlinedAt: !4705)
!4707 = !DILocation(line: 172, column: 57, scope: !2962, inlinedAt: !4705)
!4708 = !DILocation(line: 176, column: 6, scope: !2962, inlinedAt: !4705)
!4709 = !DILocation(line: 176, column: 12, scope: !2962, inlinedAt: !4705)
!4710 = !DILocation(line: 177, column: 8, scope: !2978, inlinedAt: !4705)
!4711 = !DILocation(line: 177, column: 23, scope: !2980, inlinedAt: !4705)
!4712 = !DILocation(line: 177, column: 19, scope: !2978, inlinedAt: !4705)
!4713 = !DILocation(line: 178, column: 5, scope: !2978, inlinedAt: !4705)
!4714 = !DILocation(line: 179, column: 6, scope: !2962, inlinedAt: !4705)
!4715 = !DILocation(line: 179, column: 17, scope: !2962, inlinedAt: !4705)
!4716 = !DILocation(line: 180, column: 6, scope: !2962, inlinedAt: !4705)
!4717 = !DILocation(line: 180, column: 18, scope: !2962, inlinedAt: !4705)
!4718 = !DILocation(line: 1023, column: 10, scope: !4620, inlinedAt: !4696)
!4719 = !DILocation(line: 1024, column: 1, scope: !4620, inlinedAt: !4696)
!4720 = !DILocation(line: 1030, column: 3, scope: !4680)
!4721 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !310, file: !310, line: 1034, type: !4722, isLocal: false, isDefinition: true, scopeLine: 1036, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4724)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!58, !68, !68, !68, !61}
!4724 = !{!4725, !4726, !4727, !4728}
!4725 = !DILocalVariable(name: "left_quote", arg: 1, scope: !4721, file: !310, line: 1034, type: !68)
!4726 = !DILocalVariable(name: "right_quote", arg: 2, scope: !4721, file: !310, line: 1034, type: !68)
!4727 = !DILocalVariable(name: "arg", arg: 3, scope: !4721, file: !310, line: 1035, type: !68)
!4728 = !DILocalVariable(name: "argsize", arg: 4, scope: !4721, file: !310, line: 1035, type: !61)
!4729 = !DILocation(line: 1034, column: 34, scope: !4721)
!4730 = !DILocation(line: 1034, column: 58, scope: !4721)
!4731 = !DILocation(line: 1035, column: 34, scope: !4721)
!4732 = !DILocation(line: 1035, column: 46, scope: !4721)
!4733 = !DILocation(line: 1017, column: 28, scope: !4620, inlinedAt: !4734)
!4734 = distinct !DILocation(line: 1037, column: 10, scope: !4721)
!4735 = !DILocation(line: 1017, column: 43, scope: !4620, inlinedAt: !4734)
!4736 = !DILocation(line: 1018, column: 36, scope: !4620, inlinedAt: !4734)
!4737 = !DILocation(line: 1019, column: 36, scope: !4620, inlinedAt: !4734)
!4738 = !DILocation(line: 1019, column: 48, scope: !4620, inlinedAt: !4734)
!4739 = !DILocation(line: 1021, column: 3, scope: !4620, inlinedAt: !4734)
!4740 = !DILocation(line: 1021, column: 30, scope: !4620, inlinedAt: !4734)
!4741 = !DILocation(line: 1021, column: 26, scope: !4620, inlinedAt: !4734)
!4742 = !DILocation(line: 171, column: 45, scope: !2962, inlinedAt: !4743)
!4743 = distinct !DILocation(line: 1022, column: 3, scope: !4620, inlinedAt: !4734)
!4744 = !DILocation(line: 172, column: 33, scope: !2962, inlinedAt: !4743)
!4745 = !DILocation(line: 172, column: 57, scope: !2962, inlinedAt: !4743)
!4746 = !DILocation(line: 176, column: 6, scope: !2962, inlinedAt: !4743)
!4747 = !DILocation(line: 176, column: 12, scope: !2962, inlinedAt: !4743)
!4748 = !DILocation(line: 177, column: 8, scope: !2978, inlinedAt: !4743)
!4749 = !DILocation(line: 177, column: 23, scope: !2980, inlinedAt: !4743)
!4750 = !DILocation(line: 177, column: 19, scope: !2978, inlinedAt: !4743)
!4751 = !DILocation(line: 178, column: 5, scope: !2978, inlinedAt: !4743)
!4752 = !DILocation(line: 179, column: 6, scope: !2962, inlinedAt: !4743)
!4753 = !DILocation(line: 179, column: 17, scope: !2962, inlinedAt: !4743)
!4754 = !DILocation(line: 180, column: 6, scope: !2962, inlinedAt: !4743)
!4755 = !DILocation(line: 180, column: 18, scope: !2962, inlinedAt: !4743)
!4756 = !DILocation(line: 1023, column: 10, scope: !4620, inlinedAt: !4734)
!4757 = !DILocation(line: 1024, column: 1, scope: !4620, inlinedAt: !4734)
!4758 = !DILocation(line: 1037, column: 3, scope: !4721)
!4759 = distinct !DISubprogram(name: "quote_n_mem", scope: !310, file: !310, line: 1052, type: !4760, isLocal: false, isDefinition: true, scopeLine: 1053, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4762)
!4760 = !DISubroutineType(types: !4761)
!4761 = !{!68, !70, !68, !61}
!4762 = !{!4763, !4764, !4765}
!4763 = !DILocalVariable(name: "n", arg: 1, scope: !4759, file: !310, line: 1052, type: !70)
!4764 = !DILocalVariable(name: "arg", arg: 2, scope: !4759, file: !310, line: 1052, type: !68)
!4765 = !DILocalVariable(name: "argsize", arg: 3, scope: !4759, file: !310, line: 1052, type: !61)
!4766 = !DILocation(line: 1052, column: 18, scope: !4759)
!4767 = !DILocation(line: 1052, column: 33, scope: !4759)
!4768 = !DILocation(line: 1052, column: 45, scope: !4759)
!4769 = !DILocation(line: 1054, column: 10, scope: !4759)
!4770 = !DILocation(line: 1054, column: 3, scope: !4759)
!4771 = distinct !DISubprogram(name: "quote_mem", scope: !310, file: !310, line: 1058, type: !4772, isLocal: false, isDefinition: true, scopeLine: 1059, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4774)
!4772 = !DISubroutineType(types: !4773)
!4773 = !{!68, !68, !61}
!4774 = !{!4775, !4776}
!4775 = !DILocalVariable(name: "arg", arg: 1, scope: !4771, file: !310, line: 1058, type: !68)
!4776 = !DILocalVariable(name: "argsize", arg: 2, scope: !4771, file: !310, line: 1058, type: !61)
!4777 = !DILocation(line: 1058, column: 24, scope: !4771)
!4778 = !DILocation(line: 1058, column: 36, scope: !4771)
!4779 = !DILocation(line: 1052, column: 18, scope: !4759, inlinedAt: !4780)
!4780 = distinct !DILocation(line: 1060, column: 10, scope: !4771)
!4781 = !DILocation(line: 1052, column: 33, scope: !4759, inlinedAt: !4780)
!4782 = !DILocation(line: 1052, column: 45, scope: !4759, inlinedAt: !4780)
!4783 = !DILocation(line: 1054, column: 10, scope: !4759, inlinedAt: !4780)
!4784 = !DILocation(line: 1060, column: 3, scope: !4771)
!4785 = distinct !DISubprogram(name: "quote_n", scope: !310, file: !310, line: 1064, type: !4786, isLocal: false, isDefinition: true, scopeLine: 1065, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4788)
!4786 = !DISubroutineType(types: !4787)
!4787 = !{!68, !70, !68}
!4788 = !{!4789, !4790}
!4789 = !DILocalVariable(name: "n", arg: 1, scope: !4785, file: !310, line: 1064, type: !70)
!4790 = !DILocalVariable(name: "arg", arg: 2, scope: !4785, file: !310, line: 1064, type: !68)
!4791 = !DILocation(line: 1064, column: 14, scope: !4785)
!4792 = !DILocation(line: 1064, column: 29, scope: !4785)
!4793 = !DILocation(line: 1052, column: 18, scope: !4759, inlinedAt: !4794)
!4794 = distinct !DILocation(line: 1066, column: 10, scope: !4785)
!4795 = !DILocation(line: 1052, column: 33, scope: !4759, inlinedAt: !4794)
!4796 = !DILocation(line: 1052, column: 45, scope: !4759, inlinedAt: !4794)
!4797 = !DILocation(line: 1054, column: 10, scope: !4759, inlinedAt: !4794)
!4798 = !DILocation(line: 1066, column: 3, scope: !4785)
!4799 = distinct !DISubprogram(name: "quote", scope: !310, file: !310, line: 1070, type: !4800, isLocal: false, isDefinition: true, scopeLine: 1071, flags: DIFlagPrototyped, isOptimized: true, unit: !298, variables: !4802)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!68, !68}
!4802 = !{!4803}
!4803 = !DILocalVariable(name: "arg", arg: 1, scope: !4799, file: !310, line: 1070, type: !68)
!4804 = !DILocation(line: 1070, column: 20, scope: !4799)
!4805 = !DILocation(line: 1064, column: 14, scope: !4785, inlinedAt: !4806)
!4806 = distinct !DILocation(line: 1072, column: 10, scope: !4799)
!4807 = !DILocation(line: 1064, column: 29, scope: !4785, inlinedAt: !4806)
!4808 = !DILocation(line: 1052, column: 18, scope: !4759, inlinedAt: !4809)
!4809 = distinct !DILocation(line: 1066, column: 10, scope: !4785, inlinedAt: !4806)
!4810 = !DILocation(line: 1052, column: 33, scope: !4759, inlinedAt: !4809)
!4811 = !DILocation(line: 1052, column: 45, scope: !4759, inlinedAt: !4809)
!4812 = !DILocation(line: 1054, column: 10, scope: !4759, inlinedAt: !4809)
!4813 = !DILocation(line: 1072, column: 3, scope: !4799)
!4814 = distinct !DISubprogram(name: "dup_safer", scope: !4815, file: !4815, line: 31, type: !1405, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: true, unit: !745, variables: !4816)
!4815 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!4816 = !{!4817}
!4817 = !DILocalVariable(name: "fd", arg: 1, scope: !4814, file: !4815, line: 31, type: !70)
!4818 = !DILocation(line: 31, column: 16, scope: !4814)
!4819 = !DILocation(line: 33, column: 10, scope: !4814)
!4820 = !DILocation(line: 33, column: 3, scope: !4814)
!4821 = distinct !DISubprogram(name: "version_etc_arn", scope: !751, file: !751, line: 62, type: !4822, isLocal: false, isDefinition: true, scopeLine: 66, flags: DIFlagPrototyped, isOptimized: true, unit: !747, variables: !4865)
!4822 = !DISubroutineType(types: !4823)
!4823 = !{null, !4824, !68, !68, !68, !4864, !61}
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !4826)
!4826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !4827)
!4827 = !{!4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4840, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862, !4863}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4826, file: !132, line: 242, baseType: !70, size: 32)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4826, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4826, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4826, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4826, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4826, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4826, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4826, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4826, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4826, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4826, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4826, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4826, file: !132, line: 260, baseType: !4841, size: 64, offset: 768)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !4843)
!4843 = !{!4844, !4845, !4847}
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !4842, file: !132, line: 157, baseType: !4841, size: 64)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !4842, file: !132, line: 158, baseType: !4846, size: 64, offset: 64)
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !4842, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4826, file: !132, line: 262, baseType: !4846, size: 64, offset: 832)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4826, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4826, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4826, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4826, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4826, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4826, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4826, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4826, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !4826, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !4826, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !4826, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !4826, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4826, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4826, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4826, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!4865 = !{!4866, !4867, !4868, !4869, !4870, !4871}
!4866 = !DILocalVariable(name: "stream", arg: 1, scope: !4821, file: !751, line: 62, type: !4824)
!4867 = !DILocalVariable(name: "command_name", arg: 2, scope: !4821, file: !751, line: 63, type: !68)
!4868 = !DILocalVariable(name: "package", arg: 3, scope: !4821, file: !751, line: 63, type: !68)
!4869 = !DILocalVariable(name: "version", arg: 4, scope: !4821, file: !751, line: 64, type: !68)
!4870 = !DILocalVariable(name: "authors", arg: 5, scope: !4821, file: !751, line: 65, type: !4864)
!4871 = !DILocalVariable(name: "n_authors", arg: 6, scope: !4821, file: !751, line: 65, type: !61)
!4872 = !DILocation(line: 62, column: 24, scope: !4821)
!4873 = !DILocation(line: 63, column: 30, scope: !4821)
!4874 = !DILocation(line: 63, column: 56, scope: !4821)
!4875 = !DILocation(line: 64, column: 30, scope: !4821)
!4876 = !DILocation(line: 65, column: 39, scope: !4821)
!4877 = !DILocation(line: 65, column: 55, scope: !4821)
!4878 = !DILocation(line: 67, column: 7, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4821, file: !751, line: 67, column: 7)
!4880 = !DILocation(line: 67, column: 7, scope: !4821)
!4881 = !DILocation(line: 68, column: 5, scope: !4879)
!4882 = !DILocation(line: 70, column: 5, scope: !4879)
!4883 = !DILocation(line: 84, column: 3, scope: !4821)
!4884 = !DILocation(line: 84, column: 3, scope: !4885)
!4885 = !DILexicalBlockFile(scope: !4821, file: !751, discriminator: 1)
!4886 = !DILocation(line: 86, column: 3, scope: !4821)
!4887 = !DILocation(line: 86, column: 3, scope: !4885)
!4888 = !DILocation(line: 95, column: 3, scope: !4821)
!4889 = !DILocation(line: 99, column: 7, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4821, file: !751, line: 96, column: 5)
!4891 = !DILocation(line: 102, column: 7, scope: !4890)
!4892 = !DILocation(line: 102, column: 7, scope: !4893)
!4893 = !DILexicalBlockFile(scope: !4890, file: !751, discriminator: 1)
!4894 = !DILocation(line: 103, column: 7, scope: !4890)
!4895 = !DILocation(line: 106, column: 7, scope: !4890)
!4896 = !DILocation(line: 106, column: 7, scope: !4893)
!4897 = !DILocation(line: 107, column: 7, scope: !4890)
!4898 = !DILocation(line: 110, column: 7, scope: !4890)
!4899 = !DILocation(line: 110, column: 7, scope: !4893)
!4900 = !DILocation(line: 112, column: 7, scope: !4890)
!4901 = !DILocation(line: 117, column: 7, scope: !4890)
!4902 = !DILocation(line: 117, column: 7, scope: !4893)
!4903 = !DILocation(line: 119, column: 7, scope: !4890)
!4904 = !DILocation(line: 124, column: 7, scope: !4890)
!4905 = !DILocation(line: 124, column: 7, scope: !4893)
!4906 = !DILocation(line: 126, column: 7, scope: !4890)
!4907 = !DILocation(line: 131, column: 7, scope: !4890)
!4908 = !DILocation(line: 131, column: 7, scope: !4893)
!4909 = !DILocation(line: 134, column: 7, scope: !4890)
!4910 = !DILocation(line: 139, column: 7, scope: !4890)
!4911 = !DILocation(line: 139, column: 7, scope: !4893)
!4912 = !DILocation(line: 142, column: 7, scope: !4890)
!4913 = !DILocation(line: 147, column: 7, scope: !4890)
!4914 = !DILocation(line: 147, column: 7, scope: !4893)
!4915 = !DILocation(line: 151, column: 7, scope: !4890)
!4916 = !DILocation(line: 156, column: 7, scope: !4890)
!4917 = !DILocation(line: 156, column: 7, scope: !4893)
!4918 = !DILocation(line: 160, column: 7, scope: !4890)
!4919 = !DILocation(line: 167, column: 7, scope: !4890)
!4920 = !DILocation(line: 167, column: 7, scope: !4893)
!4921 = !DILocation(line: 171, column: 7, scope: !4890)
!4922 = !DILocation(line: 173, column: 1, scope: !4821)
!4923 = distinct !DISubprogram(name: "version_etc_ar", scope: !751, file: !751, line: 180, type: !4924, isLocal: false, isDefinition: true, scopeLine: 183, flags: DIFlagPrototyped, isOptimized: true, unit: !747, variables: !4926)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{null, !4824, !68, !68, !68, !4864}
!4926 = !{!4927, !4928, !4929, !4930, !4931, !4932}
!4927 = !DILocalVariable(name: "stream", arg: 1, scope: !4923, file: !751, line: 180, type: !4824)
!4928 = !DILocalVariable(name: "command_name", arg: 2, scope: !4923, file: !751, line: 181, type: !68)
!4929 = !DILocalVariable(name: "package", arg: 3, scope: !4923, file: !751, line: 181, type: !68)
!4930 = !DILocalVariable(name: "version", arg: 4, scope: !4923, file: !751, line: 182, type: !68)
!4931 = !DILocalVariable(name: "authors", arg: 5, scope: !4923, file: !751, line: 182, type: !4864)
!4932 = !DILocalVariable(name: "n_authors", scope: !4923, file: !751, line: 184, type: !61)
!4933 = !DILocation(line: 180, column: 23, scope: !4923)
!4934 = !DILocation(line: 181, column: 29, scope: !4923)
!4935 = !DILocation(line: 181, column: 55, scope: !4923)
!4936 = !DILocation(line: 182, column: 29, scope: !4923)
!4937 = !DILocation(line: 182, column: 59, scope: !4923)
!4938 = !DILocation(line: 184, column: 10, scope: !4923)
!4939 = !DILocation(line: 186, column: 8, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4923, file: !751, line: 186, column: 3)
!4941 = !DILocation(line: 186, column: 23, scope: !4942)
!4942 = !DILexicalBlockFile(scope: !4943, file: !751, discriminator: 1)
!4943 = distinct !DILexicalBlock(scope: !4940, file: !751, line: 186, column: 3)
!4944 = !DILocation(line: 186, column: 3, scope: !4945)
!4945 = !DILexicalBlockFile(scope: !4940, file: !751, discriminator: 1)
!4946 = !DILocation(line: 186, column: 52, scope: !4947)
!4947 = !DILexicalBlockFile(scope: !4943, file: !751, discriminator: 3)
!4948 = distinct !{!4948, !4949, !4950}
!4949 = !DILocation(line: 186, column: 3, scope: !4940)
!4950 = !DILocation(line: 187, column: 5, scope: !4940)
!4951 = !DILocation(line: 188, column: 3, scope: !4923)
!4952 = !DILocation(line: 189, column: 1, scope: !4923)
!4953 = distinct !DISubprogram(name: "version_etc_va", scope: !751, file: !751, line: 196, type: !4954, isLocal: false, isDefinition: true, scopeLine: 199, flags: DIFlagPrototyped, isOptimized: true, unit: !747, variables: !4963)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{null, !4824, !68, !68, !68, !4956}
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !748, line: 189, size: 192, elements: !4958)
!4958 = !{!4959, !4960, !4961, !4962}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4957, file: !748, line: 189, baseType: !278, size: 32)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4957, file: !748, line: 189, baseType: !278, size: 32, offset: 32)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4957, file: !748, line: 189, baseType: !60, size: 64, offset: 64)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4957, file: !748, line: 189, baseType: !60, size: 64, offset: 128)
!4963 = !{!4964, !4965, !4966, !4967, !4968, !4969, !4970}
!4964 = !DILocalVariable(name: "stream", arg: 1, scope: !4953, file: !751, line: 196, type: !4824)
!4965 = !DILocalVariable(name: "command_name", arg: 2, scope: !4953, file: !751, line: 197, type: !68)
!4966 = !DILocalVariable(name: "package", arg: 3, scope: !4953, file: !751, line: 197, type: !68)
!4967 = !DILocalVariable(name: "version", arg: 4, scope: !4953, file: !751, line: 198, type: !68)
!4968 = !DILocalVariable(name: "authors", arg: 5, scope: !4953, file: !751, line: 198, type: !4956)
!4969 = !DILocalVariable(name: "n_authors", scope: !4953, file: !751, line: 200, type: !61)
!4970 = !DILocalVariable(name: "authtab", scope: !4953, file: !751, line: 201, type: !4971)
!4971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !68, size: 640, elements: !313)
!4972 = !DILocation(line: 196, column: 23, scope: !4953)
!4973 = !DILocation(line: 197, column: 29, scope: !4953)
!4974 = !DILocation(line: 197, column: 55, scope: !4953)
!4975 = !DILocation(line: 198, column: 29, scope: !4953)
!4976 = !DILocation(line: 198, column: 46, scope: !4953)
!4977 = !DILocation(line: 201, column: 3, scope: !4953)
!4978 = !DILocation(line: 201, column: 15, scope: !4953)
!4979 = !DILocation(line: 200, column: 10, scope: !4953)
!4980 = !DILocation(line: 205, column: 35, scope: !4981)
!4981 = !DILexicalBlockFile(scope: !4982, file: !751, discriminator: 1)
!4982 = distinct !DILexicalBlock(scope: !4983, file: !751, line: 203, column: 3)
!4983 = distinct !DILexicalBlock(scope: !4953, file: !751, line: 203, column: 3)
!4984 = !DILocation(line: 205, column: 35, scope: !4985)
!4985 = !DILexicalBlockFile(scope: !4982, file: !751, discriminator: 2)
!4986 = !DILocation(line: 205, column: 35, scope: !4987)
!4987 = !DILexicalBlockFile(scope: !4982, file: !751, discriminator: 3)
!4988 = !DILocation(line: 205, column: 35, scope: !4989)
!4989 = !DILexicalBlockFile(scope: !4982, file: !751, discriminator: 4)
!4990 = !DILocation(line: 205, column: 14, scope: !4989)
!4991 = !DILocation(line: 205, column: 33, scope: !4989)
!4992 = !DILocation(line: 205, column: 67, scope: !4989)
!4993 = !DILocation(line: 203, column: 3, scope: !4994)
!4994 = !DILexicalBlockFile(scope: !4983, file: !751, discriminator: 1)
!4995 = !DILocation(line: 208, column: 3, scope: !4953)
!4996 = !DILocation(line: 210, column: 1, scope: !4953)
!4997 = distinct !DISubprogram(name: "version_etc", scope: !751, file: !751, line: 227, type: !4998, isLocal: false, isDefinition: true, scopeLine: 230, flags: DIFlagPrototyped, isOptimized: true, unit: !747, variables: !5000)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{null, !4824, !68, !68, !68, null}
!5000 = !{!5001, !5002, !5003, !5004, !5005}
!5001 = !DILocalVariable(name: "stream", arg: 1, scope: !4997, file: !751, line: 227, type: !4824)
!5002 = !DILocalVariable(name: "command_name", arg: 2, scope: !4997, file: !751, line: 228, type: !68)
!5003 = !DILocalVariable(name: "package", arg: 3, scope: !4997, file: !751, line: 228, type: !68)
!5004 = !DILocalVariable(name: "version", arg: 4, scope: !4997, file: !751, line: 229, type: !68)
!5005 = !DILocalVariable(name: "authors", scope: !4997, file: !751, line: 231, type: !5006)
!5006 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !130, line: 80, baseType: !5007)
!5007 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !372, line: 50, baseType: !5008)
!5008 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !748, line: 231, baseType: !5009)
!5009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4957, size: 192, elements: !165)
!5010 = !DILocation(line: 227, column: 20, scope: !4997)
!5011 = !DILocation(line: 228, column: 26, scope: !4997)
!5012 = !DILocation(line: 228, column: 52, scope: !4997)
!5013 = !DILocation(line: 229, column: 26, scope: !4997)
!5014 = !DILocation(line: 231, column: 3, scope: !4997)
!5015 = !DILocation(line: 231, column: 11, scope: !4997)
!5016 = !DILocation(line: 233, column: 3, scope: !4997)
!5017 = !DILocation(line: 234, column: 3, scope: !4997)
!5018 = !DILocation(line: 235, column: 3, scope: !4997)
!5019 = !DILocation(line: 236, column: 1, scope: !4997)
!5020 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !751, file: !751, line: 239, type: !822, isLocal: false, isDefinition: true, scopeLine: 240, flags: DIFlagPrototyped, isOptimized: true, unit: !747, variables: !256)
!5021 = !DILocation(line: 245, column: 3, scope: !5020)
!5022 = !DILocation(line: 245, column: 3, scope: !5023)
!5023 = !DILexicalBlockFile(scope: !5020, file: !751, discriminator: 1)
!5024 = !DILocation(line: 251, column: 3, scope: !5020)
!5025 = !DILocation(line: 251, column: 3, scope: !5023)
!5026 = !DILocation(line: 256, column: 3, scope: !5020)
!5027 = !DILocation(line: 256, column: 3, scope: !5023)
!5028 = !DILocation(line: 258, column: 1, scope: !5020)
!5029 = distinct !DISubprogram(name: "xnmalloc", scope: !759, file: !759, line: 105, type: !5030, isLocal: false, isDefinition: true, scopeLine: 106, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5032)
!5030 = !DISubroutineType(types: !5031)
!5031 = !{!60, !61, !61}
!5032 = !{!5033, !5034}
!5033 = !DILocalVariable(name: "n", arg: 1, scope: !5029, file: !759, line: 105, type: !61)
!5034 = !DILocalVariable(name: "s", arg: 2, scope: !5029, file: !759, line: 105, type: !61)
!5035 = !DILocation(line: 105, column: 18, scope: !5029)
!5036 = !DILocation(line: 105, column: 28, scope: !5029)
!5037 = !DILocation(line: 107, column: 7, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5029, file: !759, line: 107, column: 7)
!5039 = !DILocation(line: 107, column: 7, scope: !5029)
!5040 = !DILocation(line: 108, column: 5, scope: !5038)
!5041 = !DILocation(line: 109, column: 21, scope: !5029)
!5042 = !DILocalVariable(name: "n", arg: 1, scope: !5043, file: !5044, line: 39, type: !61)
!5043 = distinct !DISubprogram(name: "xmalloc", scope: !5044, file: !5044, line: 39, type: !5045, isLocal: false, isDefinition: true, scopeLine: 40, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5047)
!5044 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!60, !61}
!5047 = !{!5042, !5048}
!5048 = !DILocalVariable(name: "p", scope: !5043, file: !5044, line: 41, type: !60)
!5049 = !DILocation(line: 39, column: 17, scope: !5043, inlinedAt: !5050)
!5050 = distinct !DILocation(line: 109, column: 10, scope: !5029)
!5051 = !DILocation(line: 41, column: 13, scope: !5043, inlinedAt: !5050)
!5052 = !DILocation(line: 41, column: 9, scope: !5043, inlinedAt: !5050)
!5053 = !DILocation(line: 42, column: 8, scope: !5054, inlinedAt: !5050)
!5054 = distinct !DILexicalBlock(scope: !5043, file: !5044, line: 42, column: 7)
!5055 = !DILocation(line: 42, column: 15, scope: !5056, inlinedAt: !5050)
!5056 = !DILexicalBlockFile(scope: !5054, file: !5044, discriminator: 1)
!5057 = !DILocation(line: 42, column: 10, scope: !5054, inlinedAt: !5050)
!5058 = !DILocation(line: 43, column: 5, scope: !5054, inlinedAt: !5050)
!5059 = !DILocation(line: 109, column: 3, scope: !5029)
!5060 = !DILocation(line: 39, column: 17, scope: !5043)
!5061 = !DILocation(line: 41, column: 13, scope: !5043)
!5062 = !DILocation(line: 41, column: 9, scope: !5043)
!5063 = !DILocation(line: 42, column: 8, scope: !5054)
!5064 = !DILocation(line: 42, column: 15, scope: !5056)
!5065 = !DILocation(line: 42, column: 10, scope: !5054)
!5066 = !DILocation(line: 43, column: 5, scope: !5054)
!5067 = !DILocation(line: 44, column: 3, scope: !5043)
!5068 = distinct !DISubprogram(name: "xnrealloc", scope: !759, file: !759, line: 118, type: !5069, isLocal: false, isDefinition: true, scopeLine: 119, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5071)
!5069 = !DISubroutineType(types: !5070)
!5070 = !{!60, !60, !61, !61}
!5071 = !{!5072, !5073, !5074}
!5072 = !DILocalVariable(name: "p", arg: 1, scope: !5068, file: !759, line: 118, type: !60)
!5073 = !DILocalVariable(name: "n", arg: 2, scope: !5068, file: !759, line: 118, type: !61)
!5074 = !DILocalVariable(name: "s", arg: 3, scope: !5068, file: !759, line: 118, type: !61)
!5075 = !DILocation(line: 118, column: 18, scope: !5068)
!5076 = !DILocation(line: 118, column: 28, scope: !5068)
!5077 = !DILocation(line: 118, column: 38, scope: !5068)
!5078 = !DILocation(line: 120, column: 7, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5068, file: !759, line: 120, column: 7)
!5080 = !DILocation(line: 120, column: 7, scope: !5068)
!5081 = !DILocation(line: 121, column: 5, scope: !5079)
!5082 = !DILocation(line: 122, column: 25, scope: !5068)
!5083 = !DILocalVariable(name: "p", arg: 1, scope: !5084, file: !5044, line: 51, type: !60)
!5084 = distinct !DISubprogram(name: "xrealloc", scope: !5044, file: !5044, line: 51, type: !5085, isLocal: false, isDefinition: true, scopeLine: 52, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5087)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{!60, !60, !61}
!5087 = !{!5083, !5088}
!5088 = !DILocalVariable(name: "n", arg: 2, scope: !5084, file: !5044, line: 51, type: !61)
!5089 = !DILocation(line: 51, column: 17, scope: !5084, inlinedAt: !5090)
!5090 = distinct !DILocation(line: 122, column: 10, scope: !5068)
!5091 = !DILocation(line: 51, column: 27, scope: !5084, inlinedAt: !5090)
!5092 = !DILocation(line: 53, column: 8, scope: !5093, inlinedAt: !5090)
!5093 = distinct !DILexicalBlock(scope: !5084, file: !5044, line: 53, column: 7)
!5094 = !DILocation(line: 53, column: 13, scope: !5095, inlinedAt: !5090)
!5095 = !DILexicalBlockFile(scope: !5093, file: !5044, discriminator: 1)
!5096 = !DILocation(line: 53, column: 10, scope: !5093, inlinedAt: !5090)
!5097 = !DILocation(line: 57, column: 7, scope: !5098, inlinedAt: !5090)
!5098 = distinct !DILexicalBlock(scope: !5093, file: !5044, line: 54, column: 5)
!5099 = !DILocation(line: 58, column: 7, scope: !5098, inlinedAt: !5090)
!5100 = !DILocation(line: 61, column: 7, scope: !5084, inlinedAt: !5090)
!5101 = !DILocation(line: 62, column: 8, scope: !5102, inlinedAt: !5090)
!5102 = distinct !DILexicalBlock(scope: !5084, file: !5044, line: 62, column: 7)
!5103 = !DILocation(line: 62, column: 13, scope: !5104, inlinedAt: !5090)
!5104 = !DILexicalBlockFile(scope: !5102, file: !5044, discriminator: 1)
!5105 = !DILocation(line: 62, column: 10, scope: !5102, inlinedAt: !5090)
!5106 = !DILocation(line: 63, column: 5, scope: !5102, inlinedAt: !5090)
!5107 = !DILocation(line: 122, column: 3, scope: !5068)
!5108 = !DILocation(line: 51, column: 17, scope: !5084)
!5109 = !DILocation(line: 51, column: 27, scope: !5084)
!5110 = !DILocation(line: 53, column: 8, scope: !5093)
!5111 = !DILocation(line: 53, column: 13, scope: !5095)
!5112 = !DILocation(line: 53, column: 10, scope: !5093)
!5113 = !DILocation(line: 57, column: 7, scope: !5098)
!5114 = !DILocation(line: 58, column: 7, scope: !5098)
!5115 = !DILocation(line: 61, column: 7, scope: !5084)
!5116 = !DILocation(line: 62, column: 8, scope: !5102)
!5117 = !DILocation(line: 62, column: 13, scope: !5104)
!5118 = !DILocation(line: 62, column: 10, scope: !5102)
!5119 = !DILocation(line: 63, column: 5, scope: !5102)
!5120 = !DILocation(line: 65, column: 1, scope: !5084)
!5121 = !DILocation(line: 180, column: 19, scope: !760)
!5122 = !DILocation(line: 180, column: 30, scope: !760)
!5123 = !DILocation(line: 180, column: 41, scope: !760)
!5124 = !DILocation(line: 182, column: 14, scope: !760)
!5125 = !DILocation(line: 182, column: 10, scope: !760)
!5126 = !DILocation(line: 184, column: 9, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !760, file: !759, line: 184, column: 7)
!5128 = !DILocation(line: 184, column: 7, scope: !760)
!5129 = !DILocation(line: 186, column: 13, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5131, file: !759, line: 186, column: 11)
!5131 = distinct !DILexicalBlock(scope: !5127, file: !759, line: 185, column: 5)
!5132 = !DILocation(line: 186, column: 11, scope: !5131)
!5133 = !DILocation(line: 194, column: 30, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5130, file: !759, line: 187, column: 9)
!5135 = !DILocation(line: 195, column: 16, scope: !5134)
!5136 = !DILocation(line: 195, column: 13, scope: !5134)
!5137 = !DILocation(line: 196, column: 9, scope: !5134)
!5138 = !DILocation(line: 204, column: 69, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !759, line: 204, column: 11)
!5140 = distinct !DILexicalBlock(scope: !5127, file: !759, line: 199, column: 5)
!5141 = !DILocation(line: 205, column: 11, scope: !5139)
!5142 = !DILocation(line: 204, column: 11, scope: !5140)
!5143 = !DILocation(line: 206, column: 9, scope: !5139)
!5144 = !DILocation(line: 210, column: 7, scope: !760)
!5145 = !DILocation(line: 211, column: 25, scope: !760)
!5146 = !DILocation(line: 51, column: 17, scope: !5084, inlinedAt: !5147)
!5147 = distinct !DILocation(line: 211, column: 10, scope: !760)
!5148 = !DILocation(line: 51, column: 27, scope: !5084, inlinedAt: !5147)
!5149 = !DILocation(line: 53, column: 10, scope: !5093, inlinedAt: !5147)
!5150 = !DILocation(line: 207, column: 14, scope: !5140)
!5151 = !DILocation(line: 207, column: 18, scope: !5140)
!5152 = !DILocation(line: 207, column: 9, scope: !5140)
!5153 = !DILocation(line: 53, column: 8, scope: !5093, inlinedAt: !5147)
!5154 = !DILocation(line: 57, column: 7, scope: !5098, inlinedAt: !5147)
!5155 = !DILocation(line: 58, column: 7, scope: !5098, inlinedAt: !5147)
!5156 = !DILocation(line: 61, column: 7, scope: !5084, inlinedAt: !5147)
!5157 = !DILocation(line: 62, column: 8, scope: !5102, inlinedAt: !5147)
!5158 = !DILocation(line: 62, column: 13, scope: !5104, inlinedAt: !5147)
!5159 = !DILocation(line: 62, column: 10, scope: !5102, inlinedAt: !5147)
!5160 = !DILocation(line: 63, column: 5, scope: !5102, inlinedAt: !5147)
!5161 = !DILocation(line: 211, column: 3, scope: !760)
!5162 = distinct !DISubprogram(name: "xcharalloc", scope: !759, file: !759, line: 220, type: !4089, isLocal: false, isDefinition: true, scopeLine: 221, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5163)
!5163 = !{!5164}
!5164 = !DILocalVariable(name: "n", arg: 1, scope: !5162, file: !759, line: 220, type: !61)
!5165 = !DILocation(line: 220, column: 20, scope: !5162)
!5166 = !DILocation(line: 39, column: 17, scope: !5043, inlinedAt: !5167)
!5167 = distinct !DILocation(line: 222, column: 10, scope: !5162)
!5168 = !DILocation(line: 41, column: 13, scope: !5043, inlinedAt: !5167)
!5169 = !DILocation(line: 41, column: 9, scope: !5043, inlinedAt: !5167)
!5170 = !DILocation(line: 42, column: 8, scope: !5054, inlinedAt: !5167)
!5171 = !DILocation(line: 42, column: 15, scope: !5056, inlinedAt: !5167)
!5172 = !DILocation(line: 42, column: 10, scope: !5054, inlinedAt: !5167)
!5173 = !DILocation(line: 43, column: 5, scope: !5054, inlinedAt: !5167)
!5174 = !DILocation(line: 222, column: 3, scope: !5162)
!5175 = distinct !DISubprogram(name: "x2realloc", scope: !5044, file: !5044, line: 74, type: !5176, isLocal: false, isDefinition: true, scopeLine: 75, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5178)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!60, !60, !763}
!5178 = !{!5179, !5180}
!5179 = !DILocalVariable(name: "p", arg: 1, scope: !5175, file: !5044, line: 74, type: !60)
!5180 = !DILocalVariable(name: "pn", arg: 2, scope: !5175, file: !5044, line: 74, type: !763)
!5181 = !DILocation(line: 74, column: 18, scope: !5175)
!5182 = !DILocation(line: 74, column: 29, scope: !5175)
!5183 = !DILocation(line: 180, column: 19, scope: !760, inlinedAt: !5184)
!5184 = distinct !DILocation(line: 76, column: 10, scope: !5175)
!5185 = !DILocation(line: 180, column: 30, scope: !760, inlinedAt: !5184)
!5186 = !DILocation(line: 180, column: 41, scope: !760, inlinedAt: !5184)
!5187 = !DILocation(line: 182, column: 14, scope: !760, inlinedAt: !5184)
!5188 = !DILocation(line: 182, column: 10, scope: !760, inlinedAt: !5184)
!5189 = !DILocation(line: 184, column: 9, scope: !5127, inlinedAt: !5184)
!5190 = !DILocation(line: 184, column: 7, scope: !760, inlinedAt: !5184)
!5191 = !DILocation(line: 186, column: 13, scope: !5130, inlinedAt: !5184)
!5192 = !DILocation(line: 186, column: 11, scope: !5131, inlinedAt: !5184)
!5193 = !DILocation(line: 210, column: 7, scope: !760, inlinedAt: !5184)
!5194 = !DILocation(line: 51, column: 17, scope: !5084, inlinedAt: !5195)
!5195 = distinct !DILocation(line: 211, column: 10, scope: !760, inlinedAt: !5184)
!5196 = !DILocation(line: 51, column: 27, scope: !5084, inlinedAt: !5195)
!5197 = !DILocation(line: 53, column: 10, scope: !5093, inlinedAt: !5195)
!5198 = !DILocation(line: 205, column: 11, scope: !5139, inlinedAt: !5184)
!5199 = !DILocation(line: 204, column: 11, scope: !5140, inlinedAt: !5184)
!5200 = !DILocation(line: 206, column: 9, scope: !5139, inlinedAt: !5184)
!5201 = !DILocation(line: 207, column: 14, scope: !5140, inlinedAt: !5184)
!5202 = !DILocation(line: 207, column: 18, scope: !5140, inlinedAt: !5184)
!5203 = !DILocation(line: 207, column: 9, scope: !5140, inlinedAt: !5184)
!5204 = !DILocation(line: 53, column: 8, scope: !5093, inlinedAt: !5195)
!5205 = !DILocation(line: 57, column: 7, scope: !5098, inlinedAt: !5195)
!5206 = !DILocation(line: 58, column: 7, scope: !5098, inlinedAt: !5195)
!5207 = !DILocation(line: 61, column: 7, scope: !5084, inlinedAt: !5195)
!5208 = !DILocation(line: 62, column: 8, scope: !5102, inlinedAt: !5195)
!5209 = !DILocation(line: 62, column: 13, scope: !5104, inlinedAt: !5195)
!5210 = !DILocation(line: 62, column: 10, scope: !5102, inlinedAt: !5195)
!5211 = !DILocation(line: 63, column: 5, scope: !5102, inlinedAt: !5195)
!5212 = !DILocation(line: 76, column: 3, scope: !5175)
!5213 = distinct !DISubprogram(name: "xzalloc", scope: !5044, file: !5044, line: 84, type: !5045, isLocal: false, isDefinition: true, scopeLine: 85, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5214)
!5214 = !{!5215}
!5215 = !DILocalVariable(name: "s", arg: 1, scope: !5213, file: !5044, line: 84, type: !61)
!5216 = !DILocation(line: 84, column: 17, scope: !5213)
!5217 = !DILocation(line: 39, column: 17, scope: !5043, inlinedAt: !5218)
!5218 = distinct !DILocation(line: 86, column: 18, scope: !5213)
!5219 = !DILocation(line: 41, column: 13, scope: !5043, inlinedAt: !5218)
!5220 = !DILocation(line: 41, column: 9, scope: !5043, inlinedAt: !5218)
!5221 = !DILocation(line: 42, column: 8, scope: !5054, inlinedAt: !5218)
!5222 = !DILocation(line: 42, column: 15, scope: !5056, inlinedAt: !5218)
!5223 = !DILocation(line: 42, column: 10, scope: !5054, inlinedAt: !5218)
!5224 = !DILocation(line: 43, column: 5, scope: !5054, inlinedAt: !5218)
!5225 = !DILocation(line: 86, column: 10, scope: !5213)
!5226 = !DILocation(line: 86, column: 3, scope: !5213)
!5227 = distinct !DISubprogram(name: "xcalloc", scope: !5044, file: !5044, line: 93, type: !5030, isLocal: false, isDefinition: true, scopeLine: 94, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5228)
!5228 = !{!5229, !5230, !5231}
!5229 = !DILocalVariable(name: "n", arg: 1, scope: !5227, file: !5044, line: 93, type: !61)
!5230 = !DILocalVariable(name: "s", arg: 2, scope: !5227, file: !5044, line: 93, type: !61)
!5231 = !DILocalVariable(name: "p", scope: !5227, file: !5044, line: 95, type: !60)
!5232 = !DILocation(line: 93, column: 17, scope: !5227)
!5233 = !DILocation(line: 93, column: 27, scope: !5227)
!5234 = !DILocation(line: 100, column: 7, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5227, file: !5044, line: 100, column: 7)
!5236 = !DILocation(line: 101, column: 7, scope: !5235)
!5237 = !DILocation(line: 101, column: 18, scope: !5238)
!5238 = !DILexicalBlockFile(scope: !5235, file: !5044, discriminator: 1)
!5239 = !DILocation(line: 95, column: 9, scope: !5227)
!5240 = !DILocation(line: 101, column: 16, scope: !5238)
!5241 = !DILocation(line: 100, column: 7, scope: !5242)
!5242 = !DILexicalBlockFile(scope: !5227, file: !5044, discriminator: 1)
!5243 = !DILocation(line: 102, column: 5, scope: !5235)
!5244 = !DILocation(line: 103, column: 3, scope: !5227)
!5245 = distinct !DISubprogram(name: "xmemdup", scope: !5044, file: !5044, line: 111, type: !907, isLocal: false, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5246)
!5246 = !{!5247, !5248}
!5247 = !DILocalVariable(name: "p", arg: 1, scope: !5245, file: !5044, line: 111, type: !63)
!5248 = !DILocalVariable(name: "s", arg: 2, scope: !5245, file: !5044, line: 111, type: !61)
!5249 = !DILocation(line: 111, column: 22, scope: !5245)
!5250 = !DILocation(line: 111, column: 32, scope: !5245)
!5251 = !DILocation(line: 39, column: 17, scope: !5043, inlinedAt: !5252)
!5252 = distinct !DILocation(line: 113, column: 18, scope: !5245)
!5253 = !DILocation(line: 41, column: 13, scope: !5043, inlinedAt: !5252)
!5254 = !DILocation(line: 41, column: 9, scope: !5043, inlinedAt: !5252)
!5255 = !DILocation(line: 42, column: 8, scope: !5054, inlinedAt: !5252)
!5256 = !DILocation(line: 42, column: 15, scope: !5056, inlinedAt: !5252)
!5257 = !DILocation(line: 42, column: 10, scope: !5054, inlinedAt: !5252)
!5258 = !DILocation(line: 43, column: 5, scope: !5054, inlinedAt: !5252)
!5259 = !DILocation(line: 113, column: 10, scope: !5245)
!5260 = !DILocation(line: 113, column: 3, scope: !5245)
!5261 = distinct !DISubprogram(name: "xstrdup", scope: !5044, file: !5044, line: 119, type: !4294, isLocal: false, isDefinition: true, scopeLine: 120, flags: DIFlagPrototyped, isOptimized: true, unit: !755, variables: !5262)
!5262 = !{!5263}
!5263 = !DILocalVariable(name: "string", arg: 1, scope: !5261, file: !5044, line: 119, type: !68)
!5264 = !DILocation(line: 119, column: 22, scope: !5261)
!5265 = !DILocation(line: 121, column: 27, scope: !5261)
!5266 = !DILocation(line: 121, column: 43, scope: !5261)
!5267 = !DILocation(line: 111, column: 22, scope: !5245, inlinedAt: !5268)
!5268 = distinct !DILocation(line: 121, column: 10, scope: !5269)
!5269 = !DILexicalBlockFile(scope: !5261, file: !5044, discriminator: 1)
!5270 = !DILocation(line: 111, column: 32, scope: !5245, inlinedAt: !5268)
!5271 = !DILocation(line: 39, column: 17, scope: !5043, inlinedAt: !5272)
!5272 = distinct !DILocation(line: 113, column: 18, scope: !5245, inlinedAt: !5268)
!5273 = !DILocation(line: 41, column: 13, scope: !5043, inlinedAt: !5272)
!5274 = !DILocation(line: 41, column: 9, scope: !5043, inlinedAt: !5272)
!5275 = !DILocation(line: 42, column: 8, scope: !5054, inlinedAt: !5272)
!5276 = !DILocation(line: 42, column: 15, scope: !5056, inlinedAt: !5272)
!5277 = !DILocation(line: 42, column: 10, scope: !5054, inlinedAt: !5272)
!5278 = !DILocation(line: 43, column: 5, scope: !5054, inlinedAt: !5272)
!5279 = !DILocation(line: 113, column: 10, scope: !5245, inlinedAt: !5268)
!5280 = !DILocation(line: 121, column: 3, scope: !5261)
!5281 = distinct !DISubprogram(name: "xalloc_die", scope: !5282, file: !5282, line: 32, type: !822, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, isOptimized: true, unit: !772, variables: !256)
!5282 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5283 = !DILocation(line: 34, column: 10, scope: !5281)
!5284 = !DILocation(line: 34, column: 33, scope: !5281)
!5285 = !DILocation(line: 34, column: 3, scope: !5286)
!5286 = !DILexicalBlockFile(scope: !5281, file: !5282, discriminator: 1)
!5287 = !DILocation(line: 40, column: 3, scope: !5281)
!5288 = distinct !DISubprogram(name: "rpl_calloc", scope: !5289, file: !5289, line: 42, type: !5030, isLocal: false, isDefinition: true, scopeLine: 43, flags: DIFlagPrototyped, isOptimized: true, unit: !774, variables: !5290)
!5289 = !DIFile(filename: "lib/calloc.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5290 = !{!5291, !5292, !5293, !5294}
!5291 = !DILocalVariable(name: "n", arg: 1, scope: !5288, file: !5289, line: 42, type: !61)
!5292 = !DILocalVariable(name: "s", arg: 2, scope: !5288, file: !5289, line: 42, type: !61)
!5293 = !DILocalVariable(name: "result", scope: !5288, file: !5289, line: 44, type: !60)
!5294 = !DILocalVariable(name: "bytes", scope: !5295, file: !5289, line: 56, type: !61)
!5295 = distinct !DILexicalBlock(scope: !5296, file: !5289, line: 53, column: 5)
!5296 = distinct !DILexicalBlock(scope: !5288, file: !5289, line: 47, column: 7)
!5297 = !DILocation(line: 42, column: 20, scope: !5288)
!5298 = !DILocation(line: 42, column: 30, scope: !5288)
!5299 = !DILocation(line: 47, column: 9, scope: !5296)
!5300 = !DILocation(line: 47, column: 19, scope: !5301)
!5301 = !DILexicalBlockFile(scope: !5296, file: !5289, discriminator: 1)
!5302 = !DILocation(line: 47, column: 14, scope: !5296)
!5303 = !DILocation(line: 56, column: 24, scope: !5295)
!5304 = !DILocation(line: 56, column: 14, scope: !5295)
!5305 = !DILocation(line: 57, column: 17, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5295, file: !5289, line: 57, column: 11)
!5307 = !DILocation(line: 57, column: 21, scope: !5306)
!5308 = !DILocation(line: 57, column: 11, scope: !5295)
!5309 = !DILocation(line: 59, column: 11, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5306, file: !5289, line: 58, column: 9)
!5311 = !DILocation(line: 59, column: 17, scope: !5310)
!5312 = !DILocation(line: 65, column: 12, scope: !5288)
!5313 = !DILocation(line: 44, column: 9, scope: !5288)
!5314 = !DILocation(line: 72, column: 3, scope: !5288)
!5315 = !DILocation(line: 73, column: 1, scope: !5288)
!5316 = distinct !DISubprogram(name: "rpl_fclose", scope: !5317, file: !5317, line: 56, type: !5318, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: true, unit: !776, variables: !5360)
!5317 = !DIFile(filename: "lib/fclose.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!70, !5320}
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5321, size: 64)
!5321 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !5322)
!5322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !5323)
!5323 = !{!5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359}
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5322, file: !132, line: 242, baseType: !70, size: 32)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5322, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5322, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5322, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5322, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5322, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5322, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5322, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5322, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5322, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5322, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5322, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5322, file: !132, line: 260, baseType: !5337, size: 64, offset: 768)
!5337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5338, size: 64)
!5338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !5339)
!5339 = !{!5340, !5341, !5343}
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5338, file: !132, line: 157, baseType: !5337, size: 64)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5338, file: !132, line: 158, baseType: !5342, size: 64, offset: 64)
!5342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5322, size: 64)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5338, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5322, file: !132, line: 262, baseType: !5342, size: 64, offset: 832)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5322, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5322, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5322, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5322, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5322, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5322, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5322, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5322, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5322, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5322, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5322, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5322, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5322, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5322, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5322, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!5360 = !{!5361, !5362, !5363, !5364}
!5361 = !DILocalVariable(name: "fp", arg: 1, scope: !5316, file: !5317, line: 56, type: !5320)
!5362 = !DILocalVariable(name: "saved_errno", scope: !5316, file: !5317, line: 58, type: !70)
!5363 = !DILocalVariable(name: "fd", scope: !5316, file: !5317, line: 59, type: !70)
!5364 = !DILocalVariable(name: "result", scope: !5316, file: !5317, line: 60, type: !70)
!5365 = !DILocation(line: 56, column: 19, scope: !5316)
!5366 = !DILocation(line: 58, column: 7, scope: !5316)
!5367 = !DILocation(line: 60, column: 7, scope: !5316)
!5368 = !DILocation(line: 63, column: 8, scope: !5316)
!5369 = !DILocation(line: 59, column: 7, scope: !5316)
!5370 = !DILocation(line: 64, column: 10, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5316, file: !5317, line: 64, column: 7)
!5372 = !DILocation(line: 64, column: 7, scope: !5316)
!5373 = !DILocation(line: 65, column: 12, scope: !5371)
!5374 = !DILocation(line: 65, column: 5, scope: !5371)
!5375 = !DILocation(line: 70, column: 9, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5316, file: !5317, line: 70, column: 7)
!5377 = !DILocation(line: 70, column: 23, scope: !5376)
!5378 = !DILocation(line: 70, column: 33, scope: !5379)
!5379 = !DILexicalBlockFile(scope: !5376, file: !5317, discriminator: 1)
!5380 = !DILocation(line: 70, column: 26, scope: !5381)
!5381 = !DILexicalBlockFile(scope: !5376, file: !5317, discriminator: 3)
!5382 = !DILocation(line: 70, column: 59, scope: !5379)
!5383 = !DILocation(line: 71, column: 7, scope: !5376)
!5384 = !DILocation(line: 71, column: 10, scope: !5379)
!5385 = !DILocation(line: 70, column: 7, scope: !5386)
!5386 = !DILexicalBlockFile(scope: !5316, file: !5317, discriminator: 2)
!5387 = !DILocation(line: 98, column: 12, scope: !5316)
!5388 = !DILocation(line: 103, column: 7, scope: !5316)
!5389 = !DILocation(line: 72, column: 19, scope: !5376)
!5390 = !DILocation(line: 103, column: 19, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5316, file: !5317, line: 103, column: 7)
!5392 = !DILocation(line: 105, column: 13, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5391, file: !5317, line: 104, column: 5)
!5394 = !DILocation(line: 107, column: 5, scope: !5393)
!5395 = !DILocation(line: 110, column: 1, scope: !5316)
!5396 = !DILocation(line: 272, column: 16, scope: !360)
!5397 = !DILocation(line: 272, column: 24, scope: !360)
!5398 = !DILocation(line: 274, column: 3, scope: !360)
!5399 = !DILocation(line: 274, column: 11, scope: !360)
!5400 = !DILocation(line: 275, column: 7, scope: !360)
!5401 = !DILocation(line: 276, column: 3, scope: !360)
!5402 = !DILocation(line: 277, column: 3, scope: !360)
!5403 = !DILocation(line: 322, column: 22, scope: !383)
!5404 = !DILocation(line: 322, column: 22, scope: !5405)
!5405 = !DILexicalBlockFile(scope: !383, file: !361, discriminator: 1)
!5406 = !DILocation(line: 322, column: 22, scope: !5407)
!5407 = !DILexicalBlockFile(scope: !383, file: !361, discriminator: 2)
!5408 = !DILocation(line: 322, column: 22, scope: !5409)
!5409 = !DILexicalBlockFile(scope: !383, file: !361, discriminator: 3)
!5410 = !DILocation(line: 322, column: 13, scope: !383)
!5411 = !DILocation(line: 336, column: 18, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !383, file: !361, line: 336, column: 13)
!5413 = !DILocation(line: 336, column: 15, scope: !5412)
!5414 = !DILocation(line: 336, column: 13, scope: !383)
!5415 = !DILocation(line: 338, column: 22, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5412, file: !361, line: 337, column: 11)
!5417 = !DILocation(line: 339, column: 19, scope: !5418)
!5418 = distinct !DILexicalBlock(scope: !5416, file: !361, line: 339, column: 17)
!5419 = !DILocation(line: 339, column: 29, scope: !5418)
!5420 = !DILocation(line: 339, column: 32, scope: !5421)
!5421 = !DILexicalBlockFile(scope: !5418, file: !361, discriminator: 1)
!5422 = !DILocation(line: 339, column: 38, scope: !5421)
!5423 = !DILocation(line: 339, column: 17, scope: !5424)
!5424 = !DILexicalBlockFile(scope: !5416, file: !361, discriminator: 1)
!5425 = !DILocation(line: 349, column: 26, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5418, file: !361, line: 348, column: 15)
!5427 = !DILocation(line: 350, column: 28, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5426, file: !361, line: 350, column: 21)
!5429 = !DILocation(line: 350, column: 21, scope: !5426)
!5430 = !DILocation(line: 354, column: 11, scope: !5416)
!5431 = !DILocation(line: 356, column: 20, scope: !5412)
!5432 = !DILocation(line: 357, column: 28, scope: !5433)
!5433 = !DILexicalBlockFile(scope: !387, file: !361, discriminator: 1)
!5434 = !DILocation(line: 357, column: 15, scope: !387)
!5435 = !DILocation(line: 357, column: 47, scope: !5433)
!5436 = !DILocation(line: 357, column: 25, scope: !387)
!5437 = !DILocation(line: 359, column: 25, scope: !386)
!5438 = !DILocation(line: 359, column: 17, scope: !386)
!5439 = !DILocation(line: 360, column: 23, scope: !390)
!5440 = !DILocation(line: 360, column: 27, scope: !390)
!5441 = !DILocation(line: 360, column: 60, scope: !5442)
!5442 = !DILexicalBlockFile(scope: !390, file: !361, discriminator: 1)
!5443 = !DILocation(line: 360, column: 30, scope: !5442)
!5444 = !DILocation(line: 360, column: 74, scope: !5442)
!5445 = !DILocation(line: 360, column: 17, scope: !5446)
!5446 = !DILexicalBlockFile(scope: !386, file: !361, discriminator: 1)
!5447 = !DILocation(line: 362, column: 35, scope: !389)
!5448 = !DILocation(line: 362, column: 21, scope: !389)
!5449 = !DILocation(line: 363, column: 17, scope: !389)
!5450 = !DILocation(line: 364, column: 23, scope: !389)
!5451 = !DILocation(line: 366, column: 15, scope: !389)
!5452 = !DILocation(line: 404, column: 19, scope: !392)
!5453 = !DILocation(line: 404, column: 19, scope: !5454)
!5454 = !DILexicalBlockFile(scope: !392, file: !361, discriminator: 1)
!5455 = !DILocation(line: 404, column: 19, scope: !5456)
!5456 = !DILexicalBlockFile(scope: !392, file: !361, discriminator: 2)
!5457 = !DILocation(line: 404, column: 19, scope: !5458)
!5458 = !DILexicalBlockFile(scope: !392, file: !361, discriminator: 3)
!5459 = !DILocation(line: 404, column: 15, scope: !392)
!5460 = !DILocation(line: 405, column: 18, scope: !392)
!5461 = !DILocation(line: 412, column: 3, scope: !360)
!5462 = !DILocation(line: 414, column: 1, scope: !360)
!5463 = !DILocation(line: 413, column: 3, scope: !360)
!5464 = distinct !DISubprogram(name: "rpl_fflush", scope: !5465, file: !5465, line: 127, type: !5466, isLocal: false, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: true, unit: !778, variables: !5508)
!5465 = !DIFile(filename: "lib/fflush.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!70, !5468}
!5468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5469, size: 64)
!5469 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !5470)
!5470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !5471)
!5471 = !{!5472, !5473, !5474, !5475, !5476, !5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5492, !5493, !5494, !5495, !5496, !5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5506, !5507}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5470, file: !132, line: 242, baseType: !70, size: 32)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5470, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5470, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5470, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5470, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5470, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5470, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5470, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5470, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5470, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5470, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5470, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5470, file: !132, line: 260, baseType: !5485, size: 64, offset: 768)
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !5487)
!5487 = !{!5488, !5489, !5491}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5486, file: !132, line: 157, baseType: !5485, size: 64)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5486, file: !132, line: 158, baseType: !5490, size: 64, offset: 64)
!5490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5486, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5470, file: !132, line: 262, baseType: !5490, size: 64, offset: 832)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5470, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5470, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5470, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5470, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5470, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5470, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5470, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5470, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5470, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5470, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5470, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5470, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5470, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5470, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5470, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!5508 = !{!5509}
!5509 = !DILocalVariable(name: "stream", arg: 1, scope: !5464, file: !5465, line: 127, type: !5468)
!5510 = !DILocation(line: 127, column: 19, scope: !5464)
!5511 = !DILocation(line: 148, column: 14, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5464, file: !5465, line: 148, column: 7)
!5513 = !DILocation(line: 148, column: 22, scope: !5512)
!5514 = !DILocation(line: 148, column: 27, scope: !5515)
!5515 = !DILexicalBlockFile(scope: !5512, file: !5465, discriminator: 1)
!5516 = !DILocation(line: 148, column: 7, scope: !5517)
!5517 = !DILexicalBlockFile(scope: !5464, file: !5465, discriminator: 1)
!5518 = !DILocation(line: 149, column: 12, scope: !5512)
!5519 = !DILocation(line: 149, column: 5, scope: !5512)
!5520 = !DILocalVariable(name: "fp", arg: 1, scope: !5521, file: !5465, line: 40, type: !5468)
!5521 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !5465, file: !5465, line: 40, type: !5522, isLocal: true, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: true, unit: !778, variables: !5524)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{null, !5468}
!5524 = !{!5520}
!5525 = !DILocation(line: 40, column: 48, scope: !5521, inlinedAt: !5526)
!5526 = distinct !DILocation(line: 153, column: 3, scope: !5464)
!5527 = !DILocation(line: 42, column: 11, scope: !5528, inlinedAt: !5526)
!5528 = distinct !DILexicalBlock(scope: !5521, file: !5465, line: 42, column: 7)
!5529 = !DILocation(line: 42, column: 18, scope: !5528, inlinedAt: !5526)
!5530 = !DILocation(line: 42, column: 7, scope: !5521, inlinedAt: !5526)
!5531 = !DILocation(line: 44, column: 5, scope: !5528, inlinedAt: !5526)
!5532 = !DILocation(line: 155, column: 10, scope: !5464)
!5533 = !DILocation(line: 155, column: 3, scope: !5464)
!5534 = !DILocation(line: 229, column: 1, scope: !5464)
!5535 = distinct !DISubprogram(name: "rpl_fseeko", scope: !5536, file: !5536, line: 28, type: !5537, isLocal: false, isDefinition: true, scopeLine: 42, flags: DIFlagPrototyped, isOptimized: true, unit: !780, variables: !5579)
!5536 = !DIFile(filename: "lib/fseeko.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5537 = !DISubroutineType(types: !5538)
!5538 = !{!70, !5539, !2661, !70}
!5539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5540, size: 64)
!5540 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !5541)
!5541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !5542)
!5542 = !{!5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5563, !5564, !5565, !5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578}
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5541, file: !132, line: 242, baseType: !70, size: 32)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5541, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5541, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5541, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5541, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5541, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5541, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5541, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5541, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5541, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5541, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5541, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5541, file: !132, line: 260, baseType: !5556, size: 64, offset: 768)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !5558)
!5558 = !{!5559, !5560, !5562}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5557, file: !132, line: 157, baseType: !5556, size: 64)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5557, file: !132, line: 158, baseType: !5561, size: 64, offset: 64)
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5541, size: 64)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5557, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5541, file: !132, line: 262, baseType: !5561, size: 64, offset: 832)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5541, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5541, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5541, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5541, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5541, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5541, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5541, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5541, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5541, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5541, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5541, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5541, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5541, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5541, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5541, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!5579 = !{!5580, !5581, !5582, !5583}
!5580 = !DILocalVariable(name: "fp", arg: 1, scope: !5535, file: !5536, line: 28, type: !5539)
!5581 = !DILocalVariable(name: "offset", arg: 2, scope: !5535, file: !5536, line: 28, type: !2661)
!5582 = !DILocalVariable(name: "whence", arg: 3, scope: !5535, file: !5536, line: 28, type: !70)
!5583 = !DILocalVariable(name: "pos", scope: !5584, file: !5536, line: 116, type: !2661)
!5584 = distinct !DILexicalBlock(scope: !5585, file: !5536, line: 112, column: 5)
!5585 = distinct !DILexicalBlock(scope: !5535, file: !5536, line: 51, column: 7)
!5586 = !DILocation(line: 28, column: 15, scope: !5535)
!5587 = !DILocation(line: 28, column: 25, scope: !5535)
!5588 = !DILocation(line: 28, column: 37, scope: !5535)
!5589 = !DILocation(line: 51, column: 11, scope: !5585)
!5590 = !{!1413, !809, i64 16}
!5591 = !DILocation(line: 51, column: 31, scope: !5585)
!5592 = !{!1413, !809, i64 8}
!5593 = !DILocation(line: 51, column: 24, scope: !5585)
!5594 = !DILocation(line: 52, column: 7, scope: !5585)
!5595 = !DILocation(line: 52, column: 14, scope: !5596)
!5596 = !DILexicalBlockFile(scope: !5585, file: !5536, discriminator: 1)
!5597 = !DILocation(line: 52, column: 35, scope: !5596)
!5598 = !{!1413, !809, i64 32}
!5599 = !DILocation(line: 52, column: 28, scope: !5596)
!5600 = !DILocation(line: 53, column: 7, scope: !5585)
!5601 = !DILocation(line: 53, column: 14, scope: !5596)
!5602 = !{!1413, !809, i64 72}
!5603 = !DILocation(line: 53, column: 28, scope: !5596)
!5604 = !DILocation(line: 51, column: 7, scope: !5605)
!5605 = !DILexicalBlockFile(scope: !5535, file: !5536, discriminator: 1)
!5606 = !DILocation(line: 116, column: 26, scope: !5584)
!5607 = !DILocation(line: 116, column: 19, scope: !5608)
!5608 = !DILexicalBlockFile(scope: !5584, file: !5536, discriminator: 1)
!5609 = !DILocation(line: 116, column: 13, scope: !5584)
!5610 = !DILocation(line: 117, column: 15, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5584, file: !5536, line: 117, column: 11)
!5612 = !DILocation(line: 117, column: 11, scope: !5584)
!5613 = !DILocation(line: 127, column: 11, scope: !5584)
!5614 = !DILocation(line: 127, column: 18, scope: !5584)
!5615 = !DILocation(line: 128, column: 11, scope: !5584)
!5616 = !DILocation(line: 128, column: 19, scope: !5584)
!5617 = !{!1413, !1091, i64 144}
!5618 = !DILocation(line: 159, column: 7, scope: !5584)
!5619 = !DILocation(line: 161, column: 10, scope: !5535)
!5620 = !DILocation(line: 161, column: 3, scope: !5535)
!5621 = !DILocation(line: 162, column: 1, scope: !5535)
!5622 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !5623, file: !5623, line: 334, type: !5624, isLocal: false, isDefinition: true, scopeLine: 335, flags: DIFlagPrototyped, isOptimized: true, unit: !782, variables: !5638)
!5623 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5624 = !DISubroutineType(types: !5625)
!5625 = !{!61, !5626, !68, !61, !5627}
!5626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5628, size: 64)
!5628 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !3062, line: 107, baseType: !5629)
!5629 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !3062, line: 95, baseType: !5630)
!5630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3062, line: 83, size: 64, elements: !5631)
!5631 = !{!5632, !5633}
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !5630, file: !3062, line: 85, baseType: !70, size: 32)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !5630, file: !3062, line: 94, baseType: !5634, size: 32, offset: 32)
!5634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5630, file: !3062, line: 86, size: 32, elements: !5635)
!5635 = !{!5636, !5637}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !5634, file: !3062, line: 89, baseType: !278, size: 32)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !5634, file: !3062, line: 93, baseType: !3072, size: 32)
!5638 = !{!5639, !5640, !5641, !5642, !5643, !5644, !5645}
!5639 = !DILocalVariable(name: "pwc", arg: 1, scope: !5622, file: !5623, line: 334, type: !5626)
!5640 = !DILocalVariable(name: "s", arg: 2, scope: !5622, file: !5623, line: 334, type: !68)
!5641 = !DILocalVariable(name: "n", arg: 3, scope: !5622, file: !5623, line: 334, type: !61)
!5642 = !DILocalVariable(name: "ps", arg: 4, scope: !5622, file: !5623, line: 334, type: !5627)
!5643 = !DILocalVariable(name: "ret", scope: !5622, file: !5623, line: 336, type: !61)
!5644 = !DILocalVariable(name: "wc", scope: !5622, file: !5623, line: 337, type: !3077)
!5645 = !DILocalVariable(name: "uc", scope: !5646, file: !5623, line: 398, type: !67)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !5623, line: 397, column: 5)
!5647 = distinct !DILexicalBlock(scope: !5622, file: !5623, line: 396, column: 7)
!5648 = !DILocation(line: 334, column: 23, scope: !5622)
!5649 = !DILocation(line: 334, column: 40, scope: !5622)
!5650 = !DILocation(line: 334, column: 50, scope: !5622)
!5651 = !DILocation(line: 334, column: 64, scope: !5622)
!5652 = !DILocation(line: 337, column: 3, scope: !5622)
!5653 = !DILocation(line: 353, column: 9, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5622, file: !5623, line: 353, column: 7)
!5655 = !DILocation(line: 353, column: 7, scope: !5622)
!5656 = !DILocation(line: 388, column: 9, scope: !5622)
!5657 = !DILocation(line: 336, column: 10, scope: !5622)
!5658 = !DILocation(line: 396, column: 19, scope: !5647)
!5659 = !DILocation(line: 396, column: 31, scope: !5660)
!5660 = !DILexicalBlockFile(scope: !5647, file: !5623, discriminator: 1)
!5661 = !DILocation(line: 396, column: 26, scope: !5647)
!5662 = !DILocation(line: 396, column: 41, scope: !5663)
!5663 = !DILexicalBlockFile(scope: !5647, file: !5623, discriminator: 2)
!5664 = !DILocation(line: 396, column: 7, scope: !5665)
!5665 = !DILexicalBlockFile(scope: !5622, file: !5623, discriminator: 2)
!5666 = !DILocation(line: 398, column: 26, scope: !5646)
!5667 = !DILocation(line: 398, column: 21, scope: !5646)
!5668 = !DILocation(line: 399, column: 14, scope: !5646)
!5669 = !DILocation(line: 399, column: 12, scope: !5646)
!5670 = !DILocation(line: 405, column: 1, scope: !5622)
!5671 = distinct !DISubprogram(name: "close_stream", scope: !5672, file: !5672, line: 56, type: !5673, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: true, unit: !785, variables: !5715)
!5672 = !DIFile(filename: "lib/close-stream.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5673 = !DISubroutineType(types: !5674)
!5674 = !{!70, !5675}
!5675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5676, size: 64)
!5676 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !5677)
!5677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !5678)
!5678 = !{!5679, !5680, !5681, !5682, !5683, !5684, !5685, !5686, !5687, !5688, !5689, !5690, !5691, !5699, !5700, !5701, !5702, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710, !5711, !5712, !5713, !5714}
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5677, file: !132, line: 242, baseType: !70, size: 32)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5677, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5677, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5677, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5677, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5677, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5677, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5677, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5677, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5677, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5677, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5677, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5677, file: !132, line: 260, baseType: !5692, size: 64, offset: 768)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5693, size: 64)
!5693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !5694)
!5694 = !{!5695, !5696, !5698}
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5693, file: !132, line: 157, baseType: !5692, size: 64)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5693, file: !132, line: 158, baseType: !5697, size: 64, offset: 64)
!5697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5677, size: 64)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5693, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5677, file: !132, line: 262, baseType: !5697, size: 64, offset: 832)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5677, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5677, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5677, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5677, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5677, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5677, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5677, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5677, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5677, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5677, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5677, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5677, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5677, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5677, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5677, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!5715 = !{!5716, !5717, !5719, !5720}
!5716 = !DILocalVariable(name: "stream", arg: 1, scope: !5671, file: !5672, line: 56, type: !5675)
!5717 = !DILocalVariable(name: "some_pending", scope: !5671, file: !5672, line: 58, type: !5718)
!5718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !76)
!5719 = !DILocalVariable(name: "prev_fail", scope: !5671, file: !5672, line: 59, type: !5718)
!5720 = !DILocalVariable(name: "fclose_fail", scope: !5671, file: !5672, line: 60, type: !5718)
!5721 = !DILocation(line: 56, column: 21, scope: !5671)
!5722 = !DILocation(line: 58, column: 30, scope: !5671)
!5723 = !DILocalVariable(name: "__stream", arg: 1, scope: !5724, file: !1108, line: 132, type: !5675)
!5724 = distinct !DISubprogram(name: "ferror_unlocked", scope: !1108, file: !1108, line: 132, type: !5673, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: true, unit: !785, variables: !5725)
!5725 = !{!5723}
!5726 = !DILocation(line: 132, column: 1, scope: !5724, inlinedAt: !5727)
!5727 = distinct !DILocation(line: 59, column: 27, scope: !5671)
!5728 = !DILocation(line: 134, column: 10, scope: !5724, inlinedAt: !5727)
!5729 = !DILocation(line: 59, column: 43, scope: !5671)
!5730 = !DILocation(line: 60, column: 29, scope: !5671)
!5731 = !DILocation(line: 60, column: 45, scope: !5671)
!5732 = !DILocation(line: 70, column: 17, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5671, file: !5672, line: 70, column: 7)
!5734 = !DILocation(line: 70, column: 33, scope: !5735)
!5735 = !DILexicalBlockFile(scope: !5733, file: !5672, discriminator: 1)
!5736 = !DILocation(line: 70, column: 53, scope: !5737)
!5737 = !DILexicalBlockFile(scope: !5733, file: !5672, discriminator: 3)
!5738 = !DILocation(line: 70, column: 7, scope: !5739)
!5739 = !DILexicalBlockFile(scope: !5671, file: !5672, discriminator: 3)
!5740 = !DILocation(line: 72, column: 11, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5733, file: !5672, line: 71, column: 5)
!5742 = !DILocation(line: 73, column: 9, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5741, file: !5672, line: 72, column: 11)
!5744 = !DILocation(line: 73, column: 15, scope: !5743)
!5745 = !DILocation(line: 78, column: 1, scope: !5671)
!5746 = distinct !DISubprogram(name: "hard_locale", scope: !5747, file: !5747, line: 38, type: !5748, isLocal: false, isDefinition: true, scopeLine: 39, flags: DIFlagPrototyped, isOptimized: true, unit: !787, variables: !5750)
!5747 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!76, !70}
!5750 = !{!5751, !5752, !5753, !5754, !5761, !5762, !5764, !5765, !5767, !5768, !5770}
!5751 = !DILocalVariable(name: "category", arg: 1, scope: !5746, file: !5747, line: 38, type: !70)
!5752 = !DILocalVariable(name: "hard", scope: !5746, file: !5747, line: 40, type: !76)
!5753 = !DILocalVariable(name: "p", scope: !5746, file: !5747, line: 41, type: !68)
!5754 = !DILocalVariable(name: "__s1_len", scope: !5755, file: !5747, line: 47, type: !61)
!5755 = distinct !DILexicalBlock(scope: !5756, file: !5747, line: 47, column: 15)
!5756 = distinct !DILexicalBlock(scope: !5757, file: !5747, line: 47, column: 15)
!5757 = distinct !DILexicalBlock(scope: !5758, file: !5747, line: 46, column: 9)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !5747, line: 45, column: 11)
!5759 = distinct !DILexicalBlock(scope: !5760, file: !5747, line: 44, column: 5)
!5760 = distinct !DILexicalBlock(scope: !5746, file: !5747, line: 43, column: 7)
!5761 = !DILocalVariable(name: "__s2_len", scope: !5755, file: !5747, line: 47, type: !61)
!5762 = !DILocalVariable(name: "__s2", scope: !5763, file: !5747, line: 47, type: !65)
!5763 = distinct !DILexicalBlock(scope: !5755, file: !5747, line: 47, column: 15)
!5764 = !DILocalVariable(name: "__result", scope: !5763, file: !5747, line: 47, type: !70)
!5765 = !DILocalVariable(name: "__s1_len", scope: !5766, file: !5747, line: 47, type: !61)
!5766 = distinct !DILexicalBlock(scope: !5756, file: !5747, line: 47, column: 39)
!5767 = !DILocalVariable(name: "__s2_len", scope: !5766, file: !5747, line: 47, type: !61)
!5768 = !DILocalVariable(name: "__s2", scope: !5769, file: !5747, line: 47, type: !65)
!5769 = distinct !DILexicalBlock(scope: !5766, file: !5747, line: 47, column: 39)
!5770 = !DILocalVariable(name: "__result", scope: !5769, file: !5747, line: 47, type: !70)
!5771 = !DILocation(line: 38, column: 18, scope: !5746)
!5772 = !DILocation(line: 40, column: 8, scope: !5746)
!5773 = !DILocation(line: 41, column: 19, scope: !5746)
!5774 = !DILocation(line: 41, column: 15, scope: !5746)
!5775 = !DILocation(line: 43, column: 7, scope: !5760)
!5776 = !DILocation(line: 43, column: 7, scope: !5746)
!5777 = !DILocation(line: 47, column: 15, scope: !5755)
!5778 = !DILocation(line: 47, column: 15, scope: !5763)
!5779 = !DILocation(line: 47, column: 15, scope: !5780)
!5780 = !DILexicalBlockFile(scope: !5763, file: !5747, discriminator: 2)
!5781 = !DILocation(line: 47, column: 15, scope: !5782)
!5782 = !DILexicalBlockFile(scope: !5783, file: !5747, discriminator: 3)
!5783 = distinct !DILexicalBlock(scope: !5763, file: !5747, line: 47, column: 15)
!5784 = !DILocation(line: 47, column: 15, scope: !5785)
!5785 = !DILexicalBlockFile(scope: !5783, file: !5747, discriminator: 2)
!5786 = !DILocation(line: 47, column: 15, scope: !5787)
!5787 = !DILexicalBlockFile(scope: !5788, file: !5747, discriminator: 4)
!5788 = distinct !DILexicalBlock(scope: !5783, file: !5747, line: 47, column: 15)
!5789 = !DILocation(line: 47, column: 15, scope: !5790)
!5790 = !DILexicalBlockFile(scope: !5755, file: !5747, discriminator: 11)
!5791 = !DILocation(line: 47, column: 36, scope: !5792)
!5792 = !DILexicalBlockFile(scope: !5756, file: !5747, discriminator: 13)
!5793 = !DILocation(line: 47, column: 39, scope: !5766)
!5794 = !DILocation(line: 47, column: 39, scope: !5795)
!5795 = !DILexicalBlockFile(scope: !5766, file: !5747, discriminator: 26)
!5796 = !DILocation(line: 47, column: 59, scope: !5797)
!5797 = !DILexicalBlockFile(scope: !5756, file: !5747, discriminator: 27)
!5798 = !DILocation(line: 47, column: 15, scope: !5799)
!5799 = !DILexicalBlockFile(scope: !5757, file: !5747, discriminator: 27)
!5800 = !DILocation(line: 48, column: 13, scope: !5756)
!5801 = !DILocation(line: 71, column: 3, scope: !5746)
!5802 = distinct !DISubprogram(name: "locale_charset", scope: !738, file: !738, line: 393, type: !5803, isLocal: false, isDefinition: true, scopeLine: 394, flags: DIFlagPrototyped, isOptimized: true, unit: !395, variables: !5805)
!5803 = !DISubroutineType(types: !5804)
!5804 = !{!68}
!5805 = !{!5806, !5807, !5808, !5813}
!5806 = !DILocalVariable(name: "codeset", scope: !5802, file: !738, line: 395, type: !68)
!5807 = !DILocalVariable(name: "aliases", scope: !5802, file: !738, line: 396, type: !68)
!5808 = !DILocalVariable(name: "__s1_len", scope: !5809, file: !738, line: 592, type: !61)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !738, line: 592, column: 9)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !738, line: 592, column: 9)
!5811 = distinct !DILexicalBlock(scope: !5812, file: !738, line: 589, column: 3)
!5812 = distinct !DILexicalBlock(scope: !5802, file: !738, line: 589, column: 3)
!5813 = !DILocalVariable(name: "__s2_len", scope: !5809, file: !738, line: 592, type: !61)
!5814 = !DILocalVariable(name: "buf1", scope: !5815, file: !738, line: 196, type: !5882)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !738, line: 194, column: 21)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !738, line: 193, column: 19)
!5817 = distinct !DILexicalBlock(scope: !5818, file: !738, line: 193, column: 19)
!5818 = distinct !DILexicalBlock(scope: !5819, file: !738, line: 188, column: 17)
!5819 = distinct !DILexicalBlock(scope: !5820, file: !738, line: 181, column: 19)
!5820 = distinct !DILexicalBlock(scope: !5821, file: !738, line: 177, column: 13)
!5821 = distinct !DILexicalBlock(scope: !5822, file: !738, line: 173, column: 15)
!5822 = distinct !DILexicalBlock(scope: !5823, file: !738, line: 161, column: 9)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !738, line: 157, column: 11)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !738, line: 130, column: 5)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !738, line: 129, column: 7)
!5826 = distinct !DISubprogram(name: "get_charset_aliases", scope: !738, file: !738, line: 124, type: !5803, isLocal: true, isDefinition: true, scopeLine: 125, flags: DIFlagPrototyped, isOptimized: true, unit: !395, variables: !5827)
!5827 = !{!5828, !5829, !5830, !5831, !5832, !5834, !5835, !5836, !5837, !5878, !5879, !5880, !5814, !5881, !5885, !5886, !5887}
!5828 = !DILocalVariable(name: "cp", scope: !5826, file: !738, line: 126, type: !68)
!5829 = !DILocalVariable(name: "dir", scope: !5824, file: !738, line: 132, type: !68)
!5830 = !DILocalVariable(name: "base", scope: !5824, file: !738, line: 133, type: !68)
!5831 = !DILocalVariable(name: "file_name", scope: !5824, file: !738, line: 134, type: !58)
!5832 = !DILocalVariable(name: "dir_len", scope: !5833, file: !738, line: 144, type: !61)
!5833 = distinct !DILexicalBlock(scope: !5824, file: !738, line: 143, column: 7)
!5834 = !DILocalVariable(name: "base_len", scope: !5833, file: !738, line: 145, type: !61)
!5835 = !DILocalVariable(name: "add_slash", scope: !5833, file: !738, line: 146, type: !70)
!5836 = !DILocalVariable(name: "fd", scope: !5822, file: !738, line: 162, type: !70)
!5837 = !DILocalVariable(name: "fp", scope: !5820, file: !738, line: 178, type: !5838)
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !130, line: 49, baseType: !5840)
!5840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !132, line: 241, size: 1728, elements: !5841)
!5841 = !{!5842, !5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873, !5874, !5875, !5876, !5877}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !5840, file: !132, line: 242, baseType: !70, size: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !5840, file: !132, line: 247, baseType: !58, size: 64, offset: 64)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !5840, file: !132, line: 248, baseType: !58, size: 64, offset: 128)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !5840, file: !132, line: 249, baseType: !58, size: 64, offset: 192)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !5840, file: !132, line: 250, baseType: !58, size: 64, offset: 256)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !5840, file: !132, line: 251, baseType: !58, size: 64, offset: 320)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !5840, file: !132, line: 252, baseType: !58, size: 64, offset: 384)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !5840, file: !132, line: 253, baseType: !58, size: 64, offset: 448)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !5840, file: !132, line: 254, baseType: !58, size: 64, offset: 512)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !5840, file: !132, line: 256, baseType: !58, size: 64, offset: 576)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !5840, file: !132, line: 257, baseType: !58, size: 64, offset: 640)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !5840, file: !132, line: 258, baseType: !58, size: 64, offset: 704)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !5840, file: !132, line: 260, baseType: !5855, size: 64, offset: 768)
!5855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5856, size: 64)
!5856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !132, line: 156, size: 192, elements: !5857)
!5857 = !{!5858, !5859, !5861}
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !5856, file: !132, line: 157, baseType: !5855, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !5856, file: !132, line: 158, baseType: !5860, size: 64, offset: 64)
!5860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 64)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !5856, file: !132, line: 162, baseType: !70, size: 32, offset: 128)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !5840, file: !132, line: 262, baseType: !5860, size: 64, offset: 832)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !5840, file: !132, line: 264, baseType: !70, size: 32, offset: 896)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !5840, file: !132, line: 268, baseType: !70, size: 32, offset: 928)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !5840, file: !132, line: 270, baseType: !158, size: 64, offset: 960)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !5840, file: !132, line: 274, baseType: !72, size: 16, offset: 1024)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !5840, file: !132, line: 275, baseType: !162, size: 8, offset: 1040)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !5840, file: !132, line: 276, baseType: !164, size: 8, offset: 1048)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !5840, file: !132, line: 280, baseType: !168, size: 64, offset: 1088)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !5840, file: !132, line: 289, baseType: !171, size: 64, offset: 1152)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5840, file: !132, line: 297, baseType: !60, size: 64, offset: 1216)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !5840, file: !132, line: 298, baseType: !60, size: 64, offset: 1280)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !5840, file: !132, line: 299, baseType: !60, size: 64, offset: 1344)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !5840, file: !132, line: 300, baseType: !60, size: 64, offset: 1408)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !5840, file: !132, line: 302, baseType: !61, size: 64, offset: 1472)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !5840, file: !132, line: 303, baseType: !70, size: 32, offset: 1536)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !5840, file: !132, line: 305, baseType: !179, size: 160, offset: 1568)
!5878 = !DILocalVariable(name: "res_ptr", scope: !5818, file: !738, line: 190, type: !58)
!5879 = !DILocalVariable(name: "res_size", scope: !5818, file: !738, line: 191, type: !61)
!5880 = !DILocalVariable(name: "c", scope: !5815, file: !738, line: 195, type: !70)
!5881 = !DILocalVariable(name: "buf2", scope: !5815, file: !738, line: 197, type: !5882)
!5882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !59, size: 408, elements: !5883)
!5883 = !{!5884}
!5884 = !DISubrange(count: 51)
!5885 = !DILocalVariable(name: "l1", scope: !5815, file: !738, line: 198, type: !61)
!5886 = !DILocalVariable(name: "l2", scope: !5815, file: !738, line: 198, type: !61)
!5887 = !DILocalVariable(name: "old_res_ptr", scope: !5815, file: !738, line: 199, type: !58)
!5888 = !DILocation(line: 196, column: 28, scope: !5815, inlinedAt: !5889)
!5889 = distinct !DILocation(line: 589, column: 18, scope: !5812)
!5890 = !DILocation(line: 197, column: 28, scope: !5815, inlinedAt: !5889)
!5891 = !DILocation(line: 403, column: 13, scope: !5802)
!5892 = !DILocation(line: 395, column: 15, scope: !5802)
!5893 = !DILocation(line: 584, column: 15, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5802, file: !738, line: 584, column: 7)
!5895 = !DILocation(line: 584, column: 7, scope: !5802)
!5896 = !DILocation(line: 128, column: 8, scope: !5826, inlinedAt: !5889)
!5897 = !DILocation(line: 126, column: 15, scope: !5826, inlinedAt: !5889)
!5898 = !DILocation(line: 129, column: 10, scope: !5825, inlinedAt: !5889)
!5899 = !DILocation(line: 129, column: 7, scope: !5826, inlinedAt: !5889)
!5900 = !DILocation(line: 138, column: 13, scope: !5824, inlinedAt: !5889)
!5901 = !DILocation(line: 132, column: 19, scope: !5824, inlinedAt: !5889)
!5902 = !DILocation(line: 139, column: 15, scope: !5903, inlinedAt: !5889)
!5903 = distinct !DILexicalBlock(scope: !5824, file: !738, line: 139, column: 11)
!5904 = !DILocation(line: 139, column: 23, scope: !5903, inlinedAt: !5889)
!5905 = !DILocation(line: 139, column: 26, scope: !5906, inlinedAt: !5889)
!5906 = !DILexicalBlockFile(scope: !5903, file: !738, discriminator: 1)
!5907 = !DILocation(line: 139, column: 33, scope: !5906, inlinedAt: !5889)
!5908 = !DILocation(line: 139, column: 11, scope: !5909, inlinedAt: !5889)
!5909 = !DILexicalBlockFile(scope: !5824, file: !738, discriminator: 1)
!5910 = !DILocation(line: 140, column: 9, scope: !5903, inlinedAt: !5889)
!5911 = !DILocation(line: 144, column: 26, scope: !5833, inlinedAt: !5889)
!5912 = !DILocation(line: 144, column: 16, scope: !5833, inlinedAt: !5889)
!5913 = !DILocation(line: 145, column: 16, scope: !5833, inlinedAt: !5889)
!5914 = !DILocation(line: 146, column: 34, scope: !5833, inlinedAt: !5889)
!5915 = !DILocation(line: 146, column: 38, scope: !5833, inlinedAt: !5889)
!5916 = !DILocation(line: 146, column: 42, scope: !5917, inlinedAt: !5889)
!5917 = !DILexicalBlockFile(scope: !5833, file: !738, discriminator: 1)
!5918 = !DILocation(line: 146, column: 41, scope: !5917, inlinedAt: !5889)
!5919 = !DILocation(line: 147, column: 48, scope: !5833, inlinedAt: !5889)
!5920 = !DILocation(line: 147, column: 46, scope: !5833, inlinedAt: !5889)
!5921 = !DILocation(line: 147, column: 69, scope: !5833, inlinedAt: !5889)
!5922 = !DILocation(line: 147, column: 30, scope: !5833, inlinedAt: !5889)
!5923 = !DILocation(line: 134, column: 13, scope: !5824, inlinedAt: !5889)
!5924 = !DILocation(line: 148, column: 13, scope: !5833, inlinedAt: !5889)
!5925 = !DILocation(line: 150, column: 13, scope: !5926, inlinedAt: !5889)
!5926 = distinct !DILexicalBlock(scope: !5927, file: !738, line: 149, column: 11)
!5927 = distinct !DILexicalBlock(scope: !5833, file: !738, line: 148, column: 13)
!5928 = !DILocation(line: 151, column: 17, scope: !5926, inlinedAt: !5889)
!5929 = !DILocation(line: 152, column: 34, scope: !5930, inlinedAt: !5889)
!5930 = distinct !DILexicalBlock(scope: !5926, file: !738, line: 151, column: 17)
!5931 = !DILocation(line: 153, column: 41, scope: !5926, inlinedAt: !5889)
!5932 = !DILocation(line: 153, column: 13, scope: !5926, inlinedAt: !5889)
!5933 = !DILocation(line: 157, column: 11, scope: !5824, inlinedAt: !5889)
!5934 = !DILocation(line: 171, column: 16, scope: !5822, inlinedAt: !5889)
!5935 = !DILocation(line: 162, column: 15, scope: !5822, inlinedAt: !5889)
!5936 = !DILocation(line: 173, column: 18, scope: !5821, inlinedAt: !5889)
!5937 = !DILocation(line: 173, column: 15, scope: !5822, inlinedAt: !5889)
!5938 = !DILocation(line: 180, column: 20, scope: !5820, inlinedAt: !5889)
!5939 = !DILocation(line: 178, column: 21, scope: !5820, inlinedAt: !5889)
!5940 = !DILocation(line: 181, column: 22, scope: !5819, inlinedAt: !5889)
!5941 = !DILocation(line: 181, column: 19, scope: !5820, inlinedAt: !5889)
!5942 = !DILocation(line: 190, column: 25, scope: !5818, inlinedAt: !5889)
!5943 = !DILocation(line: 184, column: 19, scope: !5944, inlinedAt: !5889)
!5944 = distinct !DILexicalBlock(scope: !5819, file: !738, line: 182, column: 17)
!5945 = !DILocation(line: 186, column: 17, scope: !5944, inlinedAt: !5889)
!5946 = !DILocation(line: 191, column: 26, scope: !5818, inlinedAt: !5889)
!5947 = !DILocation(line: 196, column: 23, scope: !5815, inlinedAt: !5889)
!5948 = !DILocation(line: 197, column: 23, scope: !5815, inlinedAt: !5889)
!5949 = !DILocalVariable(name: "__fp", arg: 1, scope: !5950, file: !1108, line: 63, type: !5838)
!5950 = distinct !DISubprogram(name: "getc_unlocked", scope: !1108, file: !1108, line: 63, type: !5951, isLocal: false, isDefinition: true, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: true, unit: !395, variables: !5953)
!5951 = !DISubroutineType(types: !5952)
!5952 = !{!70, !5838}
!5953 = !{!5949}
!5954 = !DILocation(line: 63, column: 22, scope: !5950, inlinedAt: !5955)
!5955 = distinct !DILocation(line: 201, column: 27, scope: !5815, inlinedAt: !5889)
!5956 = !DILocation(line: 65, column: 10, scope: !5950, inlinedAt: !5955)
!5957 = !DILocation(line: 65, column: 10, scope: !5958, inlinedAt: !5955)
!5958 = !DILexicalBlockFile(scope: !5950, file: !1108, discriminator: 1)
!5959 = !DILocation(line: 65, column: 10, scope: !5960, inlinedAt: !5955)
!5960 = !DILexicalBlockFile(scope: !5950, file: !1108, discriminator: 2)
!5961 = !DILocation(line: 65, column: 10, scope: !5962, inlinedAt: !5955)
!5962 = !DILexicalBlockFile(scope: !5950, file: !1108, discriminator: 3)
!5963 = !DILocation(line: 195, column: 27, scope: !5815, inlinedAt: !5889)
!5964 = !DILocation(line: 202, column: 27, scope: !5815, inlinedAt: !5889)
!5965 = !DILocation(line: 63, column: 22, scope: !5950, inlinedAt: !5966)
!5966 = distinct !DILocation(line: 210, column: 33, scope: !5967, inlinedAt: !5889)
!5967 = distinct !DILexicalBlock(scope: !5968, file: !738, line: 207, column: 25)
!5968 = distinct !DILexicalBlock(scope: !5815, file: !738, line: 206, column: 27)
!5969 = !DILocation(line: 65, column: 10, scope: !5950, inlinedAt: !5966)
!5970 = !DILocation(line: 65, column: 10, scope: !5958, inlinedAt: !5966)
!5971 = !DILocation(line: 65, column: 10, scope: !5960, inlinedAt: !5966)
!5972 = !DILocation(line: 65, column: 10, scope: !5962, inlinedAt: !5966)
!5973 = !DILocation(line: 210, column: 29, scope: !5974, inlinedAt: !5889)
!5974 = !DILexicalBlockFile(scope: !5967, file: !738, discriminator: 1)
!5975 = distinct !{!5975, !5976, !5977}
!5976 = !DILocation(line: 193, column: 19, scope: !5817)
!5977 = !DILocation(line: 241, column: 21, scope: !5817)
!5978 = !DILocation(line: 216, column: 23, scope: !5815, inlinedAt: !5889)
!5979 = !DILocation(line: 217, column: 27, scope: !5980, inlinedAt: !5889)
!5980 = distinct !DILexicalBlock(scope: !5815, file: !738, line: 217, column: 27)
!5981 = !DILocation(line: 217, column: 64, scope: !5980, inlinedAt: !5889)
!5982 = !DILocation(line: 217, column: 27, scope: !5815, inlinedAt: !5889)
!5983 = !DILocation(line: 219, column: 28, scope: !5815, inlinedAt: !5889)
!5984 = !DILocation(line: 198, column: 30, scope: !5815, inlinedAt: !5889)
!5985 = !DILocation(line: 220, column: 28, scope: !5815, inlinedAt: !5889)
!5986 = !DILocation(line: 198, column: 34, scope: !5815, inlinedAt: !5889)
!5987 = !DILocation(line: 199, column: 29, scope: !5815, inlinedAt: !5889)
!5988 = !DILocation(line: 222, column: 36, scope: !5989, inlinedAt: !5889)
!5989 = distinct !DILexicalBlock(scope: !5815, file: !738, line: 222, column: 27)
!5990 = !DILocation(line: 222, column: 27, scope: !5815, inlinedAt: !5889)
!5991 = !DILocation(line: 225, column: 63, scope: !5992, inlinedAt: !5889)
!5992 = distinct !DILexicalBlock(scope: !5989, file: !738, line: 223, column: 25)
!5993 = !DILocation(line: 225, column: 46, scope: !5992, inlinedAt: !5889)
!5994 = !DILocation(line: 226, column: 25, scope: !5992, inlinedAt: !5889)
!5995 = !DILocation(line: 229, column: 36, scope: !5996, inlinedAt: !5889)
!5996 = distinct !DILexicalBlock(scope: !5989, file: !738, line: 228, column: 25)
!5997 = !DILocation(line: 230, column: 73, scope: !5996, inlinedAt: !5889)
!5998 = !DILocation(line: 230, column: 46, scope: !5996, inlinedAt: !5889)
!5999 = !DILocation(line: 232, column: 35, scope: !6000, inlinedAt: !5889)
!6000 = distinct !DILexicalBlock(scope: !5815, file: !738, line: 232, column: 27)
!6001 = !DILocation(line: 232, column: 27, scope: !5815, inlinedAt: !5889)
!6002 = !DILocation(line: 236, column: 27, scope: !6003, inlinedAt: !5889)
!6003 = distinct !DILexicalBlock(scope: !6000, file: !738, line: 233, column: 25)
!6004 = !DILocation(line: 237, column: 27, scope: !6003, inlinedAt: !5889)
!6005 = !DILocation(line: 239, column: 39, scope: !5815, inlinedAt: !5889)
!6006 = !DILocation(line: 239, column: 50, scope: !5815, inlinedAt: !5889)
!6007 = !DILocation(line: 239, column: 61, scope: !5815, inlinedAt: !5889)
!6008 = !DILocalVariable(name: "__dest", arg: 1, scope: !6009, file: !6010, line: 107, type: !6013)
!6009 = distinct !DISubprogram(name: "strcpy", scope: !6010, file: !6010, line: 107, type: !6011, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: true, unit: !395, variables: !6015)
!6010 = !DIFile(filename: "/usr/include/bits/string3.h", directory: "/home/u/Desktop/go/src/github.com/decomp/testdata/coreutils/coreutils-8.27")
!6011 = !DISubroutineType(types: !6012)
!6012 = !{!58, !6013, !6014}
!6013 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !58)
!6014 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !68)
!6015 = !{!6008, !6016}
!6016 = !DILocalVariable(name: "__src", arg: 2, scope: !6009, file: !6010, line: 107, type: !6014)
!6017 = !DILocation(line: 107, column: 1, scope: !6009, inlinedAt: !6018)
!6018 = distinct !DILocation(line: 239, column: 23, scope: !5815, inlinedAt: !5889)
!6019 = !DILocation(line: 109, column: 49, scope: !6009, inlinedAt: !6018)
!6020 = !DILocation(line: 109, column: 10, scope: !6009, inlinedAt: !6018)
!6021 = !DILocation(line: 107, column: 1, scope: !6009, inlinedAt: !6022)
!6022 = distinct !DILocation(line: 240, column: 23, scope: !5815, inlinedAt: !5889)
!6023 = !DILocation(line: 109, column: 49, scope: !6009, inlinedAt: !6022)
!6024 = !DILocation(line: 109, column: 10, scope: !6009, inlinedAt: !6022)
!6025 = !DILocation(line: 241, column: 21, scope: !5816, inlinedAt: !5889)
!6026 = !DILocation(line: 242, column: 19, scope: !5818, inlinedAt: !5889)
!6027 = !DILocation(line: 243, column: 32, scope: !6028, inlinedAt: !5889)
!6028 = distinct !DILexicalBlock(scope: !5818, file: !738, line: 243, column: 23)
!6029 = !DILocation(line: 243, column: 23, scope: !5818, inlinedAt: !5889)
!6030 = !DILocation(line: 247, column: 33, scope: !6031, inlinedAt: !5889)
!6031 = distinct !DILexicalBlock(scope: !6028, file: !738, line: 246, column: 21)
!6032 = !DILocation(line: 247, column: 45, scope: !6031, inlinedAt: !5889)
!6033 = !DILocation(line: 253, column: 11, scope: !5822, inlinedAt: !5889)
!6034 = !DILocation(line: 377, column: 23, scope: !5824, inlinedAt: !5889)
!6035 = !DILocation(line: 378, column: 5, scope: !5824, inlinedAt: !5889)
!6036 = !DILocation(line: 396, column: 15, scope: !5802)
!6037 = !DILocation(line: 590, column: 8, scope: !5811)
!6038 = !DILocation(line: 590, column: 17, scope: !5811)
!6039 = !DILocation(line: 589, column: 3, scope: !6040)
!6040 = !DILexicalBlockFile(scope: !5812, file: !738, discriminator: 1)
!6041 = !DILocation(line: 592, column: 9, scope: !5809)
!6042 = !DILocation(line: 592, column: 35, scope: !5810)
!6043 = !DILocation(line: 593, column: 9, scope: !5810)
!6044 = !DILocation(line: 593, column: 24, scope: !6045)
!6045 = !DILexicalBlockFile(scope: !5810, file: !738, discriminator: 1)
!6046 = !DILocation(line: 593, column: 31, scope: !6045)
!6047 = !DILocation(line: 593, column: 34, scope: !6048)
!6048 = !DILexicalBlockFile(scope: !5810, file: !738, discriminator: 2)
!6049 = !DILocation(line: 593, column: 45, scope: !6048)
!6050 = !DILocation(line: 592, column: 9, scope: !6051)
!6051 = !DILexicalBlockFile(scope: !5811, file: !738, discriminator: 1)
!6052 = !DILocation(line: 595, column: 29, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !5810, file: !738, line: 594, column: 7)
!6054 = !DILocation(line: 595, column: 27, scope: !6053)
!6055 = !DILocation(line: 595, column: 46, scope: !6053)
!6056 = !DILocation(line: 596, column: 9, scope: !6053)
!6057 = !DILocation(line: 591, column: 19, scope: !5811)
!6058 = !DILocation(line: 591, column: 36, scope: !5811)
!6059 = !DILocation(line: 591, column: 16, scope: !5811)
!6060 = !DILocation(line: 591, column: 52, scope: !6051)
!6061 = !DILocation(line: 591, column: 69, scope: !5811)
!6062 = !DILocation(line: 591, column: 49, scope: !5811)
!6063 = distinct !{!6063, !6064, !6065}
!6064 = !DILocation(line: 589, column: 3, scope: !5812)
!6065 = !DILocation(line: 597, column: 7, scope: !5812)
!6066 = !DILocation(line: 602, column: 7, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !5802, file: !738, line: 602, column: 7)
!6068 = !DILocation(line: 602, column: 18, scope: !6067)
!6069 = !DILocation(line: 602, column: 7, scope: !5802)
!6070 = !DILocation(line: 612, column: 3, scope: !5802)
